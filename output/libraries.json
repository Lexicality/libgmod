[
  {
    "description": "This library is used internally by Garry's Mod to help keep track of achievement progress and unlock the appropriate achievements once a certain number is reached.",
    "functions": [
      {
        "description": "<internal></internal>Adds one to the count of balloons burst. Once this count reaches 1000, the 'Popper' achievement is unlocked.",
        "name": "BalloonPopped",
        "parent": "achievements",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Returns the amount of achievements in Garry's Mod.",
        "name": "Count",
        "parent": "achievements",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The amount of achievements available.",
            "type": "number"
          }
        ]
      },
      {
        "description": "<internal></internal>Adds one to the count of balls eaten. Once this count reaches 200, the 'Ball Eater' achievement is unlocked.",
        "name": "EatBall",
        "parent": "achievements",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of achievement to retrieve progress of. Note: IDs start from 0, not 1.",
            "name": "achievementID",
            "type": "number"
          }
        ],
        "description": "Retrieves progress of given achievement",
        "name": "GetCount",
        "parent": "achievements",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of achievement to retrieve description of. Note: IDs start from 0, not 1.",
            "name": "achievementID",
            "type": "number"
          }
        ],
        "description": "Retrieves description of given achievement",
        "name": "GetDesc",
        "parent": "achievements",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Description of an achievement",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of achievement to retrieve goal of. Note: IDs start from 0, not 1.",
            "name": "achievementID",
            "type": "number"
          }
        ],
        "description": "Retrieves progress goal of given achievement",
        "name": "GetGoal",
        "parent": "achievements",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Progress goal of an achievement",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of achievement to retrieve name of. Note: IDs start from 0, not 1.",
            "name": "achievementID",
            "type": "number"
          }
        ],
        "description": "Retrieves name of given achievement",
        "name": "GetName",
        "parent": "achievements",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Name of an achievement",
            "type": "string"
          }
        ]
      },
      {
        "description": "<internal></internal>Adds one to the count of baddies killed. Once this count reaches 1000, the 'War Zone' achievement is unlocked.",
        "name": "IncBaddies",
        "parent": "achievements",
        "realms": [
          "client"
        ]
      },
      {
        "description": "<internal></internal>Adds one to the count of innocent animals killed. Once this count reaches 1000, the 'Innocent Bystander' achievement is unlocked.",
        "name": "IncBystander",
        "parent": "achievements",
        "realms": [
          "client"
        ]
      },
      {
        "description": "<internal></internal>Adds one to the count of friendly NPCs killed. Once this count reaches 1000, the 'Bad Friend' achievement is unlocked.",
        "name": "IncGoodies",
        "parent": "achievements",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Internal Achievement ID number",
            "name": "AchievementID",
            "type": "number"
          }
        ],
        "description": "Used in GMod 12 in the achievements menu to show the user if they have unlocked certain achievements.",
        "name": "IsAchieved",
        "parent": "achievements",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Returns true if the given achievementID is achieved.",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "<internal></internal>Adds one to the count of things removed. Once this count reaches 5000, the 'Destroyer' achievement is unlocked.",
        "name": "Remover",
        "parent": "achievements",
        "realms": [
          "client"
        ]
      },
      {
        "description": "<internal></internal>Adds one to the count of NPCs spawned. Once this count reaches 1000, the 'Procreator' achievement is unlocked.",
        "name": "SpawnedNPC",
        "parent": "achievements",
        "realms": [
          "client"
        ]
      },
      {
        "description": "<internal></internal>Adds one to the count of props spawned. Once this count reaches 5000, the 'Creator' achievement is unlocked.",
        "name": "SpawnedProp",
        "parent": "achievements",
        "realms": [
          "client"
        ]
      },
      {
        "description": "<internal></internal>Adds one to the count of ragdolls spawned. Once this count reaches 2000, the 'Dollhouse' achievement is unlocked.",
        "name": "SpawnedRagdoll",
        "parent": "achievements",
        "realms": [
          "client"
        ]
      },
      {
        "description": "<internal></internal>Adds one to the count of how many times the spawnmenu has been opened. Once this count reaches 100,000, the 'Menu User' achievement is unlocked.",
        "name": "SpawnMenuOpen",
        "parent": "achievements",
        "realms": [
          "client"
        ]
      }
    ],
    "name": "achievements"
  },
  {
    "description": "The ai library.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Then schedule name. In most cases, this will be the same as the <page>Enums/SCHED</page> name.",
            "name": "sched",
            "type": "string"
          }
        ],
        "description": "Translates a schedule name to its corresponding ID.",
        "name": "GetScheduleID",
        "parent": "ai",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The schedule ID, see <page>Enums/SCHED</page>. Returns -1 if the schedule name isn't valid.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The squad name.",
            "name": "squad",
            "type": "string"
          }
        ],
        "description": "Returns the squad leader of the given squad.",
        "name": "GetSquadLeader",
        "parent": "ai",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The squad leader.",
            "type": "NPC"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The squad name.",
            "name": "squad",
            "type": "string"
          }
        ],
        "description": "Returns the amount of members a given squad has. See also <page>ai.GetSquadMembers</page>.",
        "name": "GetSquadMemberCount",
        "parent": "ai",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The member count.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The squad name.",
            "name": "squad",
            "type": "string"
          }
        ],
        "description": "Returns all members of a given squad. See also <page>ai.GetSquadMemberCount</page> and <page>NPC:GetSquad</page>.",
        "name": "GetSquadMembers",
        "parent": "ai",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of <page>NPC</page>s in the given squad.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The task name.",
            "name": "task",
            "type": "string"
          }
        ],
        "description": "Translates a task name to its corresponding ID.",
        "name": "GetTaskID",
        "parent": "ai",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The task ID, see [ai_task.h](https://github.com/ValveSoftware/source-sdk-2013/blob/55ed12f8d1eb6887d348be03aee5573d44177ffb/mp/src/game/server/ai_task.h#L89-L502). Returns -1 if the schedule name isn't valid.",
            "type": "number"
          }
        ]
      }
    ],
    "name": "ai"
  },
  {
    "description": "Allows you to set up a schedule for NPCs to follow. This lets you dictate their actions.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Name of the schedule.",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Creates a schedule for scripted NPC.",
        "name": "New",
        "parent": "ai_schedule",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "A table containing schedule information to be used with <page>ENTITY:StartSchedule</page>.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/ai_schedule.lua",
          "lineEnd": 98,
          "lineStart": 89
        }
      }
    ],
    "name": "ai_schedule"
  },
  {
    "description": "Used to create tasks for scripted NPCs.",
    "functions": [
      {
        "description": "Create a new empty task. Used by <page>Schedule:AddTask</page> and <page>Schedule:EngTask</page>.",
        "name": "New",
        "parent": "ai_task",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The new task object.",
            "type": "Task"
          }
        ],
        "source": {
          "file": "lua/includes/modules/ai_task.lua",
          "lineEnd": 123,
          "lineStart": 109
        }
      }
    ],
    "name": "ai_task"
  },
  {
    "description": "The baseclass library. Used to lookup a field from a metatable.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The child class.",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Gets the base class of an an object.\n\nThis is used not just by entities, but also by widgets, panels, drive modes, weapons and gamemodes (with \"gamemode_\" prefix).\n\nThe keyword **DEFINE_BASECLASS** translates into a call to this function. In the engine, it is replaced with:\n\n```lua\nlocal BaseClass = baseclass.Get\n```\n\n<note>You should prefer using this instead of `self.BaseClass` to avoid infinite recursion.</note>\n\nFor more information, including usage examples, see the <page>BaseClasses</page> reference page.",
        "name": "Get",
        "parent": "baseclass",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The base class's meta table.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/baseclass.lua",
          "lineEnd": 41,
          "lineStart": 32
        }
      },
      {
        "arguments": [
          {
            "description": "The name of this base class. Must be completely unique.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The base class.",
            "name": "tab",
            "type": "table"
          }
        ],
        "description": "Add a new base class that can be derived by others. This is done automatically for:\n* [panels](vgui.Register)\n* [drive modes](drive.Register)\n* [entities and widgets](scripted_ents.Register)\n* [weapons](weapons.Register)\n* [gamemodes](gamemode.Register) (with prefix \"gamemode_\")\n\nFor more information, including usage examples, see the <page>BaseClasses</page> reference page.",
        "name": "Set",
        "parent": "baseclass",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/baseclass.lua",
          "lineEnd": 58,
          "lineStart": 43
        }
      }
    ],
    "name": "baseclass"
  },
  {
    "description": "The bitwise library contains useful functions for bitwise operations.\nMake sure you're familiar with [Bitwise Operators](https://code.tutsplus.com/articles/understanding-bitwise-operators--active-11301)",
    "functions": [
      {
        "arguments": [
          {
            "description": "The value to be manipulated.",
            "name": "value",
            "type": "number"
          },
          {
            "description": "Amounts of bits to shift.",
            "name": "shiftCount",
            "type": "number"
          }
        ],
        "description": "Returns the arithmetically shifted value.",
        "name": "arshift",
        "parent": "bit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "shiftedValue",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The value to be manipulated.",
            "name": "value",
            "type": "number"
          },
          {
            "description": "Values bit to perform bitwise \"and\" with. Optional.",
            "name": "...",
            "type": "vararg"
          }
        ],
        "description": "Performs the bitwise `and` for all values specified.",
        "name": "band",
        "parent": "bit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Result of bitwise \"and\" operation.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The value to be inverted.",
            "name": "value",
            "type": "number"
          }
        ],
        "description": "Returns the bitwise not of the value. Inverts every bit of the 32bit integer.",
        "name": "bnot",
        "parent": "bit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The result of bitwise not. 0101 becomes 1010, etc.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The first value.",
            "name": "value1",
            "type": "number"
          },
          {
            "description": "Extra values to be evaluated. (must all be numbers)",
            "name": "...",
            "type": "vararg"
          }
        ],
        "description": "Returns the bitwise OR of all values specified.",
        "name": "bor",
        "parent": "bit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The bitwise OR result between all numbers.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The value to be byte swapped.",
            "name": "value",
            "type": "number"
          }
        ],
        "description": "Swaps the byte order.",
        "name": "bswap",
        "parent": "bit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "swapped",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The value to be manipulated.",
            "name": "value",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "Values bit xor with. Optional.",
            "name": "otherValues",
            "type": "number"
          }
        ],
        "description": "Returns the bitwise xor of all values specified.",
        "name": "bxor",
        "parent": "bit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "bitwiseXOr",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The value to be manipulated.",
            "name": "value",
            "type": "number"
          },
          {
            "description": "Amounts of bits to shift left by.",
            "name": "shiftCount",
            "type": "number"
          }
        ],
        "description": "Returns the left shifted value.\n<note>The returned value will be clamped to a signed 32-bit integer, even on 64-bit builds.</note>",
        "name": "lshift",
        "parent": "bit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "shiftedValue",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The value to be manipulated.",
            "name": "value",
            "type": "number"
          },
          {
            "description": "Amounts of bits to rotate left by.",
            "name": "shiftCount",
            "type": "number"
          }
        ],
        "description": "Returns the left rotated value.",
        "name": "rol",
        "parent": "bit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "shiftedValue",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The value to be manipulated.",
            "name": "value",
            "type": "number"
          },
          {
            "description": "Amounts of bits to rotate right by.",
            "name": "shiftCount",
            "type": "number"
          }
        ],
        "description": "Returns the right rotated value.",
        "name": "ror",
        "parent": "bit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "shiftedValue",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The value to be manipulated.",
            "name": "value",
            "type": "number"
          },
          {
            "description": "Amounts of bits to shift right by.",
            "name": "shiftCount",
            "type": "number"
          }
        ],
        "description": "Returns the right shifted value.\n<note>The returned value will be clamped to a signed 32-bit integer, even on 64-bit builds.</note>",
        "name": "rshift",
        "parent": "bit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "shiftedValue",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The value to be normalized.",
            "name": "value",
            "type": "number"
          }
        ],
        "description": "Normalizes the specified value and clamps it in the range of a signed 32bit integer.",
        "name": "tobit",
        "parent": "bit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The 32 bits of the provided value.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The value to be normalized.",
            "name": "value",
            "type": "number"
          },
          {
            "default": "8",
            "description": "Maximum number of characters, if set. The absolute maximum is 8.",
            "name": "characters",
            "type": "number"
          }
        ],
        "description": "Returns the hexadecimal representation of the number with the specified number of characters.",
        "name": "tohex",
        "parent": "bit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The hexadecimal representation, such as \"00000001\".",
            "type": "string"
          }
        ]
      }
    ],
    "name": "bit"
  },
  {
    "description": "This directs all drawing to be done to a certain 2D or 3D plane or position, until the corresponding \"End\" function is called.\n\nThe matrix functions exist, but are mostly unusable unless you're familiar with the source engine's layout for each aspect.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Origin of the shake.",
            "name": "pos",
            "type": "Vector"
          },
          {
            "description": "Angles of the shake.",
            "name": "angles",
            "type": "Angle"
          },
          {
            "description": "The shake factor.",
            "name": "factor",
            "type": "number"
          }
        ],
        "description": "Shakes the screen at a certain position.",
        "name": "ApplyShake",
        "parent": "cam",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Switches the renderer back to the previous drawing mode from a 3D context.\n\nThis function is an alias of <page>cam.End3D</page>.",
        "name": "End",
        "parent": "cam",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Switches the renderer back to the previous drawing mode from a 2D context.",
        "name": "End2D",
        "parent": "cam",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Switches the renderer back to the previous drawing mode from a 3D context.",
        "name": "End3D",
        "parent": "cam",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Switches the renderer back to the previous drawing mode from a 3D2D context.",
        "name": "End3D2D",
        "parent": "cam",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Switches the renderer back to the previous drawing mode from a 3D orthographic rendering context.",
        "name": "EndOrthoView",
        "parent": "cam",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Returns a copy of the model matrix that is at the top of the stack.\n<note>Editing the matrix **will not** edit the current view. To do so, you will have to use <page>cam.PushModelMatrix</page>.</note>",
        "name": "GetModelMatrix",
        "parent": "cam",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The currently active matrix.",
            "type": "VMatrix"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Determines whenever to ignore the depth buffer or not.",
            "name": "ignoreZ",
            "type": "boolean"
          }
        ],
        "description": "Tells the renderer to ignore the depth buffer and draw any upcoming operation \"ontop\" of everything that was drawn yet.\n\nThis is identical to calling `render.DepthRange( 0, 0.01 )` for `true` and  `render.DepthRange( 0, 1 )` for `false`. See <page>render.DepthRange</page>.",
        "name": "IgnoreZ",
        "parent": "cam",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Pops the current active rendering matrix from the stack and reinstates the previous one.",
        "name": "PopModelMatrix",
        "parent": "cam",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The matrix to push.",
            "name": "matrix",
            "type": "VMatrix"
          },
          {
            "default": "false",
            "description": "If set, multiplies given matrix with currently active matrix (<page>cam.GetModelMatrix</page>) before pushing.",
            "name": "multiply",
            "type": "boolean"
          }
        ],
        "description": "Pushes the specified matrix onto the render matrix stack. Unlike opengl, this will replace the current model matrix.\n\n<note>This does not work with <page>cam.Start3D2D</page> if `multiply` is false.</note>\n<warning>When used in the Paint function of a panel, if you want to rely on the top-left position of the panel, you must use <page>VMatrix:Translate</page> with the (0, 0) position of the panel relative to the screen.</warning>",
        "name": "PushModelMatrix",
        "parent": "cam",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Render context config. See <page>Structures/RenderCamData</page>",
            "name": "dataTbl",
            "type": "table"
          }
        ],
        "description": "Sets up a new rendering context. This is an extended version of <page>cam.Start3D</page> and <page>cam.Start2D</page>. Must be finished by <page>cam.End3D</page> or <page>cam.End2D</page>.\n\n<bug issue=\"2682\">This will not update current view properties for 3D contexts.</bug>",
        "name": "Start",
        "parent": "cam",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Sets up a new 2D rendering context. Must be finished by <page>cam.End2D</page>.\n\nThis is almost always used with a render target from the <page>render</page>. To set its position use <page>render.SetViewPort</page> with a target already stored.\n\n<note>This will put an identity matrix at the top of the model matrix stack. If you are trying to use <page>cam.PushModelMatrix</page>, call it after this function and not before.</note>\n<rendercontext hook=\"true\" type=\"2D\"></rendercontext>",
        "name": "Start2D",
        "parent": "cam",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/extensions/client/render.lua",
          "lineEnd": 113,
          "lineStart": 109
        }
      },
      {
        "arguments": [
          {
            "default": "<current view pos>",
            "description": "Render cam position.",
            "name": "pos",
            "type": "Vector"
          },
          {
            "default": "<current view angles>",
            "description": "Render cam angles.",
            "name": "angles",
            "type": "Angle"
          },
          {
            "default": "<current view FOV>",
            "description": "Field of view.",
            "name": "fov",
            "type": "number"
          },
          {
            "default": "<current view X>",
            "description": "X coordinate of where to start the new view port.",
            "name": "x",
            "type": "number"
          },
          {
            "default": "<current view Y>",
            "description": "Y coordinate of where to start the new view port.",
            "name": "y",
            "type": "number"
          },
          {
            "default": "<current view width>",
            "description": "Width of the new viewport.",
            "name": "w",
            "type": "number"
          },
          {
            "default": "<current view height>",
            "description": "Height of the new viewport.",
            "name": "h",
            "type": "number"
          },
          {
            "default": "<current view zNear>",
            "description": "Distance to near clipping plane.\n<note>Both `zNear` and `zFar` need a value before any of them work.\n\nzNear also requires a value higher than 0.\n</note>",
            "name": "zNear",
            "type": "number"
          },
          {
            "default": "<current view zFar>",
            "description": "Distance to far clipping plane.",
            "name": "zFar",
            "type": "number"
          }
        ],
        "description": "Sets up a new 3D rendering context. Must be finished by <page>cam.End3D</page>.\n\nFor more advanced settings such as an orthographic view, use <page>cam.Start</page> instead, which this is an alias of basically.\n\n<rendercontext hook=\"true\" type=\"3D\"></rendercontext>\n\n<bug issue=\"1995\">Negative x/y values won't work.</bug>\n\n<bug issue=\"2682\">This will not update current view properties.</bug>",
        "name": "Start3D",
        "parent": "cam",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/extensions/client/render.lua",
          "lineEnd": 144,
          "lineStart": 115
        }
      },
      {
        "arguments": [
          {
            "description": "Origin of the 3D2D context, ie. the top left corner, (0, 0).",
            "name": "pos",
            "type": "Vector"
          },
          {
            "description": "Angles of the 3D2D context.\n+x in the 2d context corresponds to +x of the angle (its forward direction).\n+y in the 2d context corresponds to -y of the angle (its right direction).\n\nIf (dx, dy) are your desired (+x, +y) unit vectors, the angle you want is dx:AngleEx(dx:Cross(-dy)).",
            "name": "angles",
            "type": "Angle"
          },
          {
            "description": "The scale of the render context.\nIf scale is 1 then 1 pixel in 2D context will equal to 1 unit in 3D context.",
            "name": "scale",
            "type": "number"
          }
        ],
        "description": "Sets up the model transformation matrix to draw 2D content in 3D space and pushes it into the stack (<page>cam.PushModelMatrix</page>).\n\nMatrix formula:\n```\nlocal m = Matrix()\nm:SetAngles( angles )\nm:SetTranslation( pos )\nm:SetScale( Vector( scale, -scale, 1 ) )\n```\n<warning>This must be closed by <page>cam.End3D2D</page>. If not done so, unexpected issues might arise.</warning>\n\n<page>render.SetToneMappingScaleLinear</page> may of use when dealing with bloom.",
        "name": "Start3D2D",
        "parent": "cam",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The left plane offset.",
            "name": "leftOffset",
            "type": "number"
          },
          {
            "description": "The top plane offset.",
            "name": "topOffset",
            "type": "number"
          },
          {
            "description": "The right plane offset.",
            "name": "rightOffset",
            "type": "number"
          },
          {
            "description": "The bottom plane offset.",
            "name": "bottomOffset",
            "type": "number"
          }
        ],
        "description": "Sets up a new 3d context using orthographic projection.",
        "name": "StartOrthoView",
        "parent": "cam",
        "realms": [
          "client"
        ]
      }
    ],
    "name": "cam"
  },
  {
    "description": "The chat library's purpose is to interface with the default chatbox.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The arguments. Arguments can be:\n* <page>table</page> - <page>Color</page>. Will set the color for all following strings until the next Color argument.\n* <page>string</page> - Text to be added to the chat box.\n* <page>Player</page> - Adds the name of the player in the player's team color to the chat box.\n* <page>any</page> - Any other type, such as <page>Entity</page> will be converted to string and added as text.",
            "name": "arguments",
            "type": "vararg"
          }
        ],
        "description": "Adds text to the local player's chat box (which only they can read).",
        "name": "AddText",
        "parent": "chat",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Closes the chat window.",
        "name": "Close",
        "parent": "chat",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Returns the chatbox position.",
        "name": "GetChatBoxPos",
        "parent": "chat",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The X coordinate of the chatbox's position.",
            "type": "number"
          },
          {
            "description": "The Y coordinate of the chatbox's position.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the chatbox size.",
        "name": "GetChatBoxSize",
        "parent": "chat",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The width of the chatbox.",
            "type": "number"
          },
          {
            "description": "The height of the chatbox.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "If equals 1, opens public chat, otherwise opens team chat",
            "name": "mode",
            "type": "number"
          }
        ],
        "description": "Opens the chat window.",
        "name": "Open",
        "parent": "chat",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Plays the chat \"tick\" sound.",
        "name": "PlaySound",
        "parent": "chat",
        "realms": [
          "client"
        ]
      }
    ],
    "name": "chat"
  },
  {
    "description": "The cleanup library allows you to control what happens to custom entities when the clean-up buttons are pressed in the Utilities tab of the Spawn menu (default Q).",
    "functions": [
      {
        "arguments": [
          {
            "description": "Who's cleanup list to add the entity to.",
            "name": "pl",
            "type": "Player"
          },
          {
            "description": "The type of cleanup.",
            "name": "type",
            "type": "string"
          },
          {
            "description": "The entity to add to the player's cleanup list.",
            "name": "ent",
            "type": "Entity"
          }
        ],
        "description": "Adds an entity to a player's cleanup list.",
        "name": "Add",
        "parent": "cleanup",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/cleanup.lua",
          "lineEnd": 74,
          "lineStart": 59
        }
      },
      {
        "arguments": [
          {
            "description": "The player that called the console command.",
            "name": "pl",
            "type": "Player"
          },
          {
            "description": "The console command that called this function.",
            "name": "command",
            "type": "string"
          },
          {
            "description": "First and only arg is the cleanup type.",
            "name": "args",
            "type": "table"
          }
        ],
        "description": "<internal></internal> Called by the `gmod_admin_cleanup` console command. Allows admins to clean up the server.",
        "name": "CC_AdminCleanup",
        "parent": "cleanup",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/cleanup.lua",
          "lineEnd": 200,
          "lineStart": 148
        }
      },
      {
        "arguments": [
          {
            "description": "The player that called the console command.",
            "name": "pl",
            "type": "Player"
          },
          {
            "description": "The console command that called this function.",
            "name": "command",
            "type": "string"
          },
          {
            "description": "First and only argument is the cleanup type.",
            "name": "args",
            "type": "table"
          }
        ],
        "description": "<internal></internal> Called by the `gmod_cleanup` console command. Allows players to cleanup their own props.",
        "name": "CC_Cleanup",
        "parent": "cleanup",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/cleanup.lua",
          "lineEnd": 146,
          "lineStart": 98
        }
      },
      {
        "description": "Gets the cleanup list.",
        "name": "GetList",
        "parent": "cleanup",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/cleanup.lua",
          "lineEnd": 42,
          "lineStart": 40
        }
      },
      {
        "description": "Gets the table of cleanup types.",
        "name": "GetTable",
        "parent": "cleanup",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A list of cleanup types.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/cleanup.lua",
          "lineEnd": 33,
          "lineStart": 31
        }
      },
      {
        "arguments": [
          {
            "description": "Name of type.",
            "name": "type",
            "type": "string"
          }
        ],
        "description": "Registers a new cleanup type.",
        "name": "Register",
        "parent": "cleanup",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/cleanup.lua",
          "lineEnd": 29,
          "lineStart": 17
        }
      },
      {
        "arguments": [
          {
            "description": "Old entity",
            "name": "from",
            "type": "Entity"
          },
          {
            "description": "New entity. Can be a `NULL` entity to remove the old entity from the cleanup system.",
            "name": "to",
            "type": "Entity"
          }
        ],
        "description": "Replaces one entity in the cleanup module with another.\n\nYou very likely want to call <page>undo.ReplaceEntity</page> with the same entities as well.",
        "name": "ReplaceEntity",
        "parent": "cleanup",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether any action was taken.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/cleanup.lua",
          "lineEnd": 95,
          "lineStart": 76
        }
      },
      {
        "description": "Repopulates the clients cleanup menu",
        "name": "UpdateUI",
        "parent": "cleanup",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/cleanup.lua",
          "lineEnd": 238,
          "lineStart": 207
        }
      }
    ],
    "name": "cleanup"
  },
  {
    "description": "The concommand library is used to create console commands which can be used to network (basic) information &amp; events between the client and the server.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The command name to be used in console.\n\nThis cannot be a name of existing console command or console variable. It will silently fail if it is.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The function to run when the concommand is executed.\n<callback>\n<arg name=\"ply\" type=\"Player\">The player that ran the concommand. NULL entity if command was entered with the dedicated server console.</arg>\n<arg name=\"cmd\" type=\"string\">The concommand string (if one callback is used for several concommands).</arg>\n<arg name=\"args\" type=\"table\">A table of all string arguments.</arg>\n<arg name=\"argStr\" type=\"string\">The arguments as a string.</arg>\n</callback>",
            "name": "callback",
            "type": "function"
          },
          {
            "default": "nil",
            "description": "The function to call which should return a table of options for autocompletion. (<page text=\"Autocompletion Tutorial\">Console_Command_Auto-completion</page>)\n\nThis only properly works on the client since it is **not** networked.\n\n<callback>\n<arg name=\"cmd\" type=\"string\">The concommand this autocompletion is for.</arg>\n<arg name=\"argStr\" type=\"string\">The arguments typed so far.</arg>\n<arg name=\"args\" type=\"table\">A table of all string arguments.</arg>\n<ret name=\"tbl\" type=\"table\">A table containing the autocomplete options to display.</ret>\n</callback>",
            "name": "autoComplete",
            "type": "function"
          },
          {
            "default": "nil",
            "description": "The text to display should a user run 'help cmdName'.",
            "name": "helpText",
            "type": "string"
          },
          {
            "default": "0",
            "description": "Console command modifier flags. Either a bitflag, or a table of enums. See <page>Enums/FCVAR</page>.",
            "name": "flags",
            "type": "number{FCVAR}|table<number>"
          }
        ],
        "description": "Creates a console command that runs a function in lua with optional autocompletion function and help text.\n\n<bug issue=\"1183\">This will fail if the concommand was previously removed with <page>concommand.Remove</page> in a different realm (creating a command on the client that was removed from the server and vice-versa).</bug>",
        "name": "Add",
        "parent": "concommand",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/concommand.lua",
          "lineEnd": 33,
          "lineStart": 24
        }
      },
      {
        "arguments": [
          {
            "description": "Name of command",
            "name": "command",
            "type": "string"
          },
          {
            "description": "Arguments given to the command",
            "name": "arguments",
            "type": "string"
          }
        ],
        "description": "<internal></internal> Used by the engine to call the autocomplete function for a console command, and retrieve returned options.",
        "name": "AutoComplete",
        "parent": "concommand",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Possibilities for auto-completion. This is the return value of the auto-complete callback.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/concommand.lua",
          "lineEnd": 75,
          "lineStart": 63
        }
      },
      {
        "description": "Returns the tables of all console command callbacks, and autocomplete functions, that were added to the game with <page>concommand.Add</page>.",
        "name": "GetTable",
        "parent": "concommand",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Table of command callback functions.",
            "type": "table<string,function>"
          },
          {
            "description": "Table of command autocomplete functions.",
            "type": "table<string,function>"
          }
        ],
        "source": {
          "file": "lua/includes/modules/concommand.lua",
          "lineEnd": 22,
          "lineStart": 16
        }
      },
      {
        "arguments": [
          {
            "description": "The name of the command to be removed.",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Removes a console command.\n\n<bug issue=\"1183\"><page>concommand.Add</page> will fail if the concommand was previously removed with this function in a different realm (creating a command on the client that was removed from the server and vice-versa).</bug>",
        "name": "Remove",
        "parent": "concommand",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/concommand.lua",
          "lineEnd": 43,
          "lineStart": 35
        }
      },
      {
        "arguments": [
          {
            "description": "Player to run concommand on",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "Command name",
            "name": "cmd",
            "type": "string"
          },
          {
            "description": "Command arguments.\nCan be table or string",
            "name": "args",
            "type": "any"
          },
          {
            "description": "string of all arguments sent to the command",
            "name": "argumentString",
            "type": "string"
          }
        ],
        "description": "<internal>You might be looking for <page>Global.RunConsoleCommand</page> or <page>Player:ConCommand</page>.</internal>\n\nUsed by the engine to run a console command's callback function. This will only be called for commands that were added with <page>Global.AddConsoleCommand</page>, which <page>concommand.Add</page> calls internally. An error is sent to the player's console if no callback is found.\n\nThis will still be called for concommands removed with <page>concommand.Remove</page> but will return false. This will not be called for concommands added by the engine, only those made from Lua.",
        "name": "Run",
        "parent": "concommand",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "`true` if the console command with the given name exists, and `false` if it doesn't.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/concommand.lua",
          "lineEnd": 61,
          "lineStart": 45
        }
      }
    ],
    "name": "concommand"
  },
  {
    "description": "The constraint library allows you to control the constraint system built into the physics engine (rope, weld, ballsockets, etc).",
    "functions": [
      {
        "arguments": [
          {
            "description": "The entity to store the information on.",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "The constraint to store in the entity's table.",
            "name": "constrt",
            "type": "Entity"
          },
          {
            "default": "nil",
            "description": "Optional. If different from `ent1`, the info will also be stored in the table for this entity.",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "default": "nil",
            "description": "Optional. Same as `ent2`.",
            "name": "ent3",
            "type": "Entity"
          },
          {
            "default": "nil",
            "description": "Optional. Same as `ent2`.",
            "name": "ent4",
            "type": "Entity"
          }
        ],
        "description": "<internal></internal>\n\nStores information about constraints in an entity's table.",
        "name": "AddConstraintTable",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 368,
          "lineStart": 352
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to store the information on.",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "The constraint to store in the entity's table.",
            "name": "constrt",
            "type": "Entity"
          },
          {
            "default": "nil",
            "description": "Optional. If different from `ent1`, the info will also be stored in the table for this entity.",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "default": "nil",
            "description": "Optional. Same as `ent2`.",
            "name": "ent3",
            "type": "Entity"
          },
          {
            "default": "nil",
            "description": "Optional. Same as `ent2`.",
            "name": "ent4",
            "type": "Entity"
          }
        ],
        "description": "<internal></internal>\n\nStores info about the constraints on the entity's table.\n\nThe only difference between this and <page>constraint.AddConstraintTable</page> is that the constraint does not get deleted when the entity is removed.",
        "name": "AddConstraintTableNoDelete",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 389,
          "lineStart": 374
        }
      },
      {
        "arguments": [
          {
            "description": "First entity.",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "Second entity.",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "description": "<page>PhysObj</page> number of first entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone1",
            "type": "number"
          },
          {
            "description": "<page>PhysObj</page> number of second entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone2",
            "type": "number"
          },
          {
            "description": "Position relative to the the first physics object to constrain to.",
            "name": "localPos1",
            "type": "Vector"
          },
          {
            "default": "nil",
            "description": "Position relative to the the second physics object to constrain to.\n<warning>Does nothing!</warning>",
            "name": "localPos2",
            "type": "Vector"
          },
          {
            "default": "0",
            "description": "Amount of force until it breaks (0 = unbreakable)",
            "name": "forceLimit",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Amount of torque (rotation speed) until it breaks (0 = unbreakable)",
            "name": "torqueLimit",
            "type": "number"
          },
          {
            "description": "Minimum angle in rotations around the X axis local to the constraint.",
            "name": "xMin",
            "type": "number"
          },
          {
            "description": "Minimum angle in rotations around the Y axis local to the constraint.",
            "name": "yMin",
            "type": "number"
          },
          {
            "description": "Minimum angle in rotations around the Z axis local to the constraint.",
            "name": "zMin",
            "type": "number"
          },
          {
            "description": "Maximum angle in rotations around the X axis local to the constraint.",
            "name": "xMax",
            "type": "number"
          },
          {
            "description": "Maximum angle in rotations around the Y axis local to the constraint.",
            "name": "yMax",
            "type": "number"
          },
          {
            "description": "Maximum angle in rotations around the Z axis local to the constraint.",
            "name": "zMax",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Rotational friction in the X axis local to the constraint.",
            "name": "xFric",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Rotational friction in the Y axis local to the constraint.",
            "name": "yFric",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Rotational friction in the Z axis local to the constraint.",
            "name": "zFric",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Only limit rotation, free movement.",
            "name": "onlyRotation",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Whether the entities should be no-collided.",
            "name": "noCollide",
            "type": "number"
          }
        ],
        "description": "Creates an advanced ballsocket (ragdoll) constraint. See <page>constraint.Ballsocket</page> for the simpler version.",
        "name": "AdvBallsocket",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "A [phys_ragdollconstraint](https://developer.valvesoftware.com/wiki/Phys_ragdollconstraint) entity. Will return `false` if the constraint could not be created.",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 906,
          "lineStart": 837
        }
      },
      {
        "arguments": [
          {
            "description": "First entity.",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "Second entity.",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "description": "<page>PhysObj</page> number of first entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone1",
            "type": "number"
          },
          {
            "description": "<page>PhysObj</page> number of second entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone2",
            "type": "number"
          },
          {
            "description": "Position relative to the the first physics object to constrain to.",
            "name": "localPos1",
            "type": "Vector"
          },
          {
            "description": "Position relative to the the second physics object to constrain to.",
            "name": "localPos2",
            "type": "Vector"
          },
          {
            "default": "0",
            "description": "Amount of force until it breaks (0 = unbreakable)",
            "name": "forceLimit",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Amount of torque (rotational force) until it breaks (0 = unbreakable)",
            "name": "torqueLimit",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Constraint friction.",
            "name": "friction",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Whether the entities should be no-collided.",
            "name": "noCollide",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "If you include the LocalAxis then LPos2 will not be used in the final constraint. However, LPos2 is still a required argument.",
            "name": "localAxis",
            "type": "Vector"
          },
          {
            "default": "false",
            "description": "Whether or not to add the constraint info on the entity table. See <page>constraint.AddConstraintTable</page>.",
            "name": "dontAddTable",
            "type": "boolean"
          }
        ],
        "description": "Creates an axis constraint.",
        "name": "Axis",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The created constraint. ([phys_hinge](https://developer.valvesoftware.com/wiki/Phys_hinge)) Will return `false` if the constraint could not be created.",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 830,
          "lineStart": 773
        }
      },
      {
        "arguments": [
          {
            "description": "First entity.",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "Second entity.",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "description": "<page>PhysObj</page> number of first entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone1",
            "type": "number"
          },
          {
            "description": "<page>PhysObj</page> number of second entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone2",
            "type": "number"
          },
          {
            "description": "Center position of the joint, relative to the **second** entity's physics object.",
            "name": "localPos",
            "type": "Vector"
          },
          {
            "default": "0",
            "description": "Amount of force until it breaks (0 = unbreakable)",
            "name": "forcelimit",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Amount of torque (rotation speed) until it breaks (0 = unbreakable)",
            "name": "torquelimit",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Whether the constrained entities should collided with each other or not.",
            "name": "nocollide",
            "type": "number"
          }
        ],
        "description": "Creates a ballsocket joint. See See <page>constraint.AdvBallsocket</page> if you also wish to limit rotation angles in some way.",
        "name": "Ballsocket",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The created constraint. ([phys_ballsocket](https://developer.valvesoftware.com/wiki/Phys_ballsocket)) Will return `false` if the constraint could not be created.",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 1258,
          "lineStart": 1214
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to check",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "The bone of the entity to check (use 0 for mono boned ents)",
            "name": "bone",
            "type": "number"
          }
        ],
        "description": "Basic checks to make sure that the specified entity and bone are valid. Returns false if we should not be constraining the entity.",
        "name": "CanConstrain",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether a constraint can or should be created.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 259,
          "lineStart": 250
        }
      },
      {
        "arguments": [
          {
            "description": "Position for the rope entity. Unknown effect, probably none.",
            "name": "pos",
            "type": "Vector"
          },
          {
            "description": "Width of the rope.",
            "name": "width",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "Material of the rope. If unset, will be solid black.",
            "name": "material",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "Constraint for the rope. If set, the rope will be deleted when the constraint entity is.",
            "name": "constraint",
            "type": "Entity"
          },
          {
            "description": "First entity.",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "Position relative to the the first physics object to constrain to.",
            "name": "localPos1",
            "type": "Vector"
          },
          {
            "description": "<page>PhysObj</page> number of first entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone1",
            "type": "number"
          },
          {
            "description": "Second entity.",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "description": "Position relative to the the second physics object to constrain to.",
            "name": "localPos2",
            "type": "Vector"
          },
          {
            "description": "<page>PhysObj</page> number of second entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone2",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "Any additional key/values to be set on the rope.",
            "name": "keyValues",
            "type": "table"
          }
        ],
        "description": "Creates a rope without any constraint.",
        "name": "CreateKeyframeRope",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The created rope ([keyframe_rope](https://developer.valvesoftware.com/wiki/Keyframe_rope)), or `nil` or failure.",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 346,
          "lineStart": 296
        }
      },
      {
        "arguments": [
          {
            "description": "The position to spawn the anchor at",
            "name": "pos",
            "type": "Vector"
          }
        ],
        "description": "Creates an invisible, non-moveable anchor point in the world to which things can be attached.\n<note>The entity used internally by this function (`gmod_anchor`) only exists in Sandbox derived gamemodes, meaning this function will only work in these gamemodes.\n\nTo use this in other gamemodes, you may need to create your own [gmod_anchor](https://github.com/Facepunch/garrysmod/blob/master/garrysmod/gamemodes/sandbox/entities/entities/gmod_anchor.lua) entity.</note>",
        "name": "CreateStaticAnchorPoint",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The anchor entity. (`gmod_anchor`)",
            "type": "Entity"
          },
          {
            "description": "The achor entity's physics object. (<page>Entity:GetPhysicsObject</page>)",
            "type": "PhysObj"
          },
          {
            "description": "Always `0`.",
            "type": "number"
          },
          {
            "description": "Always `vector_zero`.",
            "type": "Vector"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 677,
          "lineStart": 665
        }
      },
      {
        "arguments": [
          {
            "description": "First entity.",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "Second entity.",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "description": "<page>PhysObj</page> number of first entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone1",
            "type": "number"
          },
          {
            "description": "<page>PhysObj</page> number of second entity to constrain to. (0 for non-ragdolls). Must be different from `bone1`.\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone2",
            "type": "number"
          },
          {
            "description": "Position relative to the the first physics object to constrain to.",
            "name": "localPos1",
            "type": "Vector"
          },
          {
            "description": "Position relative to the the second physics object to constrain to.",
            "name": "localPos2",
            "type": "Vector"
          },
          {
            "description": "Stiffness of the elastic. The larger the number the less the elastic will stretch.",
            "name": "constant",
            "type": "number"
          },
          {
            "description": "How much energy the elastic loses. The larger the number, the less bouncy the elastic.",
            "name": "damping",
            "type": "number"
          },
          {
            "description": "The amount of energy the elastic loses proportional to the relative velocity of the two objects the elastic is attached to.",
            "name": "relDamping",
            "type": "number"
          },
          {
            "default": "",
            "description": "The material of the rope. If unset, will be solid black.",
            "name": "material",
            "type": "string"
          },
          {
            "description": "Width of rope.",
            "name": "width",
            "type": "number"
          },
          {
            "default": "false",
            "description": "Apply physics forces only on stretch.",
            "name": "stretchOnly",
            "type": "boolean"
          },
          {
            "default": "color_white",
            "description": "The color of the rope. See <page>Global.Color</page>.",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Creates an elastic rope constraint.",
        "name": "Elastic",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The created constraint. ([phys_spring](https://developer.valvesoftware.com/wiki/Phys_spring)) Will return `false` if the constraint could not be created.",
            "type": "Entity"
          },
          {
            "description": "The created rope. ([keyframe_rope](https://developer.valvesoftware.com/wiki/Keyframe_rope)) Will return `nil` if the constraint could not be created.",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 614,
          "lineStart": 546
        }
      },
      {
        "arguments": [
          {
            "description": "The first entity to check",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "The second entity to check",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "description": "The type of constraint, case sensitive. List of default constrains is as follows:\n* `Weld`\n* `Axis`\n* `AdvBallsocket`\n* `Rope`\n* `Elastic`\n* `NoCollide`\n* `Motor`\n* `Pulley`\n* `Ballsocket`\n* `Winch`\n* `Hydraulic`\n* `Muscle`\n* `Keepupright`\n* `Slider`",
            "name": "type",
            "type": "string"
          },
          {
            "description": "The bone number for the first entity (0 for monoboned entities)",
            "name": "bone1",
            "type": "number"
          },
          {
            "description": "The bone number for the second entity",
            "name": "bone2",
            "type": "number"
          }
        ],
        "description": "Returns the constraint of a specified type between two entities, if it exists",
        "name": "Find",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "constraint",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 244,
          "lineStart": 222
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to check",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "The type of constraint, case sensitive. List of default constrains is as follows:\n* `Weld`\n* `Axis`\n* `AdvBallsocket`\n* `Rope`\n* `Elastic`\n* `NoCollide`\n* `Motor`\n* `Pulley`\n* `Ballsocket`\n* `Winch`\n* `Hydraulic`\n* `Muscle`\n* `Keepupright`\n* `Slider`",
            "name": "type",
            "type": "string"
          }
        ],
        "description": "Returns the first constraint of a specific type directly connected to the entity found",
        "name": "FindConstraint",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The constraint table, set with <page>constraint.AddConstraintTable</page>",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 1619,
          "lineStart": 1605
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to check",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "The type of constraint, case sensitive. List of default constrains is as follows:\n* `Weld`\n* `Axis`\n* `AdvBallsocket`\n* `Rope`\n* `Elastic`\n* `NoCollide`\n* `Motor`\n* `Pulley`\n* `Ballsocket`\n* `Winch`\n* `Hydraulic`\n* `Muscle`\n* `Keepupright`\n* `Slider`",
            "name": "type",
            "type": "string"
          }
        ],
        "description": "Returns the other entity involved in the first constraint of a specific type directly connected to the entity",
        "name": "FindConstraintEntity",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The other entity.",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 1638,
          "lineStart": 1624
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to check",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "The type of constraint, case sensitive. List of default constrains is as follows:\n* `Weld`\n* `Axis`\n* `AdvBallsocket`\n* `Rope`\n* `Elastic`\n* `NoCollide`\n* `Motor`\n* `Pulley`\n* `Ballsocket`\n* `Winch`\n* `Hydraulic`\n* `Muscle`\n* `Keepupright`\n* `Slider`",
            "name": "type",
            "type": "string"
          }
        ],
        "description": "Returns a table of all constraints of a specific type directly connected to the entity.\n\nIf you are looking for a list of all constraints, use <page>constraint.GetTable</page>.",
        "name": "FindConstraints",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "All the constraints of this entity.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 1600,
          "lineStart": 1584
        }
      },
      {
        "arguments": [
          {
            "description": "The entity that will forget its constraints.",
            "name": "ent",
            "type": "Entity"
          }
        ],
        "description": "Make this entity forget any constraints it knows about. Note that this will not actually remove the constraints.",
        "name": "ForgetConstraints",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 1578,
          "lineStart": 1574
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to check",
            "name": "ent",
            "type": "Entity"
          },
          {
            "default": "nil",
            "description": "Table used to return result. Optional.",
            "name": "resultTable",
            "type": "table"
          }
        ],
        "description": "Returns a table of all entities recursively constrained to an entitiy.",
        "name": "GetAllConstrainedEntities",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "A table containing all of the constrained entities. This includes all entities constrained to entities constrained to the supplied entity, etc.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 1666,
          "lineStart": 1643
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to check",
            "name": "ent",
            "type": "Entity"
          }
        ],
        "description": "Returns a table of all constraints directly connected to the entity.\n\nIf you are looking for a list of specific constraint(s), use <page>constraint.FindConstraints</page>.",
        "name": "GetTable",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "A list of all constraints connected to the entity.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 1569,
          "lineStart": 1531
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to check",
            "name": "ent",
            "type": "Entity"
          }
        ],
        "description": "Returns true if the entity has constraints attached to it",
        "name": "HasConstraints",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether the entity has any constraints or not.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 1524,
          "lineStart": 1502
        }
      },
      {
        "arguments": [
          {
            "description": "The player that will be able to control the constraint. Used to call <page>numpad.OnDown</page>.",
            "name": "player",
            "type": "Player"
          },
          {
            "description": "First entity.",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "Second entity.",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "description": "<page>PhysObj</page> number of first entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone1",
            "type": "number"
          },
          {
            "description": "<page>PhysObj</page> number of second entity to constrain to. (0 for non-ragdolls). Must be different from `bone1`.\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone2",
            "type": "number"
          },
          {
            "description": "Position relative to the the first physics object to constrain to.",
            "name": "localPos1",
            "type": "Vector"
          },
          {
            "description": "Position relative to the the second physics object to constrain to.",
            "name": "localPos2",
            "type": "Vector"
          },
          {
            "description": "Minimum length of the constraint.",
            "name": "length1",
            "type": "number"
          },
          {
            "description": "Maximum length of the constraint.",
            "name": "length2",
            "type": "number"
          },
          {
            "description": "The width of the rope.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "The key binding, corresponding to an <page>Enums/KEY</page>",
            "name": "key",
            "type": "number"
          },
          {
            "description": "Whether the hydraulic is fixed, i.e. cannot bend. Must be `1` to act as `true`.",
            "name": "slider",
            "type": "number"
          },
          {
            "description": "How fast it changes the length from `length1` to `length2` and backwards.",
            "name": "speed",
            "type": "number"
          },
          {
            "default": "",
            "description": "The material of the rope. If unset, will be solid black.",
            "name": "material",
            "type": "string"
          },
          {
            "default": "true",
            "description": "Whether the hydraulic should be a toggle, not a \"hold key to extend\" action.",
            "name": "toggle",
            "type": "boolean"
          },
          {
            "default": "color_white",
            "description": "The color of the rope. See <page>Global.Color</page>.",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Creates a controllable <page>constraint.Elastic</page>, aka a Hydraulic constraint.",
        "name": "Hydraulic",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The created constraint. ([phys_spring](https://developer.valvesoftware.com/wiki/Phys_spring)) Will return `false` if the constraint could not be created.",
            "type": "Entity"
          },
          {
            "description": "The created rope. ([keyframe_rope](https://developer.valvesoftware.com/wiki/Keyframe_rope)) Will return `nil` if the constraint could not be created.",
            "type": "Entity"
          },
          {
            "description": "The muscle controller. (`gmod_winch_controller`) Will return `nil` if the constraint could not be created.",
            "type": "Entity"
          },
          {
            "description": "The slider ([phys_slideconstraint](https://developer.valvesoftware.com/wiki/Phys_slideconstraint)) if `fixed` was exactly `1`. Will return nil otherwise, or if the constraint could not be created.",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 1415,
          "lineStart": 1337
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to keep upright",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "The angle defined as \"upright\"",
            "name": "ang",
            "type": "Angle"
          },
          {
            "description": "The bone of the entity to constrain (0 for boneless)",
            "name": "bone",
            "type": "number"
          },
          {
            "description": "Basically, the strength of the constraint. Must be above 0.",
            "name": "angularLimit",
            "type": "number"
          }
        ],
        "description": "Creates a keep upright constraint.",
        "name": "Keepupright",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The created constraint, if any or false if the constraint failed to set",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 662,
          "lineStart": 621
        }
      },
      {
        "arguments": [
          {
            "description": "First entity.",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "Second entity.",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "description": "<page>PhysObj</page> number of first entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone1",
            "type": "number"
          },
          {
            "description": "<page>PhysObj</page> number of second entity to constrain to. (0 for non-ragdolls). Must be different from `bone1`.\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone2",
            "type": "number"
          },
          {
            "description": "Position relative to the the first physics object to constrain to.",
            "name": "localPos1",
            "type": "Vector"
          },
          {
            "description": "Position relative to the the second physics object to constrain to.",
            "name": "localPos2",
            "type": "Vector"
          },
          {
            "description": "Motor friction.",
            "name": "friction",
            "type": "number"
          },
          {
            "description": "Motor torque.",
            "name": "torque",
            "type": "number"
          },
          {
            "description": "Automatic shut-off after this time has passed. A value of 0 means to stay on forever or until deactivated.",
            "name": "forcetime",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Whether the entities should be no-collided.",
            "name": "nocollide",
            "type": "number"
          },
          {
            "default": "false",
            "description": "Whether the constraint is on toggle.",
            "name": "toggle",
            "type": "number"
          },
          {
            "default": "NULL",
            "description": "The player that will control the motor. Used to to call <page>numpad.OnDown</page> and <page>numpad.OnUp</page>.",
            "name": "player",
            "type": "Player"
          },
          {
            "default": "0",
            "description": "Amount of force until it breaks (0 = unbreakable)",
            "name": "forcelimit",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "The key binding for \"forward\", corresponding to an <page>Enums/KEY</page>",
            "name": "key_fwd",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "The key binding for \"backwards\", corresponding to an <page>Enums/KEY</page>",
            "name": "key_bwd",
            "type": "number"
          },
          {
            "default": "1",
            "description": "Either `1` or `-1` signifying which direction the motor should spin.",
            "name": "direction",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "Overrides axis of rotation?\n<validate></validate>",
            "name": "localAxis",
            "type": "Vector"
          }
        ],
        "description": "Creates a motor constraint, a player controllable <page>constraint.Axis</page>.",
        "name": "Motor",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The created constraint. ([phys_torque](https://developer.valvesoftware.com/wiki/Phys_torque)) Will return `false` if the constraint could not be created.",
            "type": "Entity"
          },
          {
            "description": "The created axis constraint. ([phys_hinge](https://developer.valvesoftware.com/wiki/Phys_hinge)) Will return `nil` if the constraint could not be created.",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 1130,
          "lineStart": 1037
        }
      },
      {
        "arguments": [
          {
            "description": "The player that will be able to control the constraint. Used to call <page>numpad.OnDown</page>.",
            "name": "player",
            "type": "Player"
          },
          {
            "description": "First entity.",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "Second entity.",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "description": "<page>PhysObj</page> number of first entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone1",
            "type": "number"
          },
          {
            "description": "<page>PhysObj</page> number of second entity to constrain to. (0 for non-ragdolls). Must be different from `bone1`.\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone2",
            "type": "number"
          },
          {
            "description": "Position relative to the the first physics object to constrain to.",
            "name": "localPos1",
            "type": "Vector"
          },
          {
            "description": "Position relative to the the second physics object to constrain to.",
            "name": "localPos2",
            "type": "Vector"
          },
          {
            "description": "Minimum length of the constraint.",
            "name": "length1",
            "type": "number"
          },
          {
            "description": "Maximum length of the constraint.",
            "name": "length2",
            "type": "number"
          },
          {
            "description": "Width of the rope.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "The key binding, corresponding to an <page>Enums/KEY</page>.",
            "name": "key",
            "type": "number"
          },
          {
            "description": "Whether the constraint is fixed, i.e. cannot bend. Must be `1` to act as `true`.",
            "name": "fixed",
            "type": "number"
          },
          {
            "description": "How often the \"contractions\" should happen.",
            "name": "period",
            "type": "number"
          },
          {
            "description": "Amplification of the \"contractions\"?",
            "name": "amplitude",
            "type": "number"
          },
          {
            "default": "false",
            "description": "Whether the constraint should start activated. (i.e. spazzing)",
            "name": "startOn",
            "type": "boolean"
          },
          {
            "default": "",
            "description": "Material of the rope. If left unset, will be solid black.",
            "name": "material",
            "type": "string"
          },
          {
            "default": "color_white",
            "description": "The color of the rope. See <page>Global.Color</page>.",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Creates a muscle constraint.\n\nVery similar to <page>constraint.Hydraulic</page>, but instead of a toggle between fully expanded and contracted, it will continuously alternate between the 2 states while enabled.",
        "name": "Muscle",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The created constraint. ([phys_spring](https://developer.valvesoftware.com/wiki/Phys_spring)) Will return `false` if the constraint could not be created.",
            "type": "Entity"
          },
          {
            "description": "The created rope. ([keyframe_rope](https://developer.valvesoftware.com/wiki/Keyframe_rope)) Will return `nil` if the constraint could not be created.",
            "type": "Entity"
          },
          {
            "description": "The muscle controller. (`gmod_winch_controller`) Will return `nil` if the constraint could not be created.",
            "type": "Entity"
          },
          {
            "description": "The slider ([phys_slideconstraint](https://developer.valvesoftware.com/wiki/Phys_slideconstraint)) if `fixed` was exactly `1`. Will return nil otherwise, or if the constraint could not be created.",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 1496,
          "lineStart": 1422
        }
      },
      {
        "arguments": [
          {
            "description": "First entity.",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "Second entity.",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "description": "<page>PhysObj</page> number of first entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone1",
            "type": "number"
          },
          {
            "description": "<page>PhysObj</page> number of second entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone2",
            "type": "number"
          },
          {
            "default": "false",
            "description": "If set, the nocollide will be reversed if the constraint is removed.",
            "name": "disableOnRemove",
            "type": "boolean"
          }
        ],
        "description": "Creates an no-collide \"constraint\". Disables collision between two entities.\n<note>Does not work with players.</note>",
        "name": "NoCollide",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The created constraint. ([logic_collision_pair](https://developer.valvesoftware.com/wiki/Logic_collision_pair)) Will return `false` if the constraint could not be created.",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 954,
          "lineStart": 913
        }
      },
      {
        "arguments": [
          {
            "description": "First entity to constrain.",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "The other entity to attach to.",
            "name": "ent4",
            "type": "Entity"
          },
          {
            "description": "<page>PhysObj</page> number of first entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone1",
            "type": "number"
          },
          {
            "description": "<page>PhysObj</page> number of second entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone4",
            "type": "number"
          },
          {
            "description": "Position relative to the the first physics object to constrain to.",
            "name": "localPos1",
            "type": "Vector"
          },
          {
            "description": "Position relative to the the second physics object to constrain to.",
            "name": "localPos4",
            "type": "Vector"
          },
          {
            "description": "World position constrain the first entity to. This point will be static.",
            "name": "worldPos2",
            "type": "Vector"
          },
          {
            "description": "World position constrain the second entity to. This point will be static.",
            "name": "worldPos3",
            "type": "Vector"
          },
          {
            "description": "Amount of force until it breaks (0 = unbreakable)",
            "name": "forceLimit",
            "type": "number"
          },
          {
            "default": "false",
            "description": "Whether the constraint is rigid, i.e. cannot bend.",
            "name": "rigid",
            "type": "boolean"
          },
          {
            "description": "Width of the rope. If below or at `0`, visual rope segments will not be created.",
            "name": "width",
            "type": "number"
          },
          {
            "default": "",
            "description": "Material of the rope. If unset, will be solid black.",
            "name": "material",
            "type": "string"
          },
          {
            "default": "color_white",
            "description": "The color of the rope. See <page>Global.Color</page>.",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Creates a pulley constraint.\n\nIt consists of 3 rope segments, 2 of which have variable length, visually connected by a 3rd. Reducing length of one end will increase the length of the other end.\n\nYou can visualize the pulley like so\n```\nWPos2 --- WPos3\n|\t\t\t|\n|\t\t\t|\nEnt1\t   Ent4\n```",
        "name": "Pulley",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The created constraint. ([phys_pulleyconstraint](https://developer.valvesoftware.com/wiki/Phys_pulleyconstraint)) Will return `false` if the constraint could not be created.",
            "type": "Entity"
          },
          {
            "description": "The first rope segment. ([keyframe_rope](https://developer.valvesoftware.com/wiki/Keyframe_rope)) Will return `nil` if the constraint or this rope segment could not be created.",
            "type": "Entity"
          },
          {
            "description": "The second rope segment. ([keyframe_rope](https://developer.valvesoftware.com/wiki/Keyframe_rope)) Will return `nil` if the constraint or this rope segment could not be created.",
            "type": "Entity"
          },
          {
            "description": "The third rope segment. ([keyframe_rope](https://developer.valvesoftware.com/wiki/Keyframe_rope)) Will return `nil` if the constraint or this rope segment could not be created.",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 1207,
          "lineStart": 1137
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to remove constraints from",
            "name": "ent",
            "type": "Entity"
          }
        ],
        "description": "Attempts to remove all constraints associated with an entity",
        "name": "RemoveAll",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether any constraints were removed",
            "type": "boolean"
          },
          {
            "description": "Number of constraints removed",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 216,
          "lineStart": 189
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to check",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "The constraint type to remove (eg. `\"Weld\"`, `\"Elastic\"`, `\"NoCollide\"`)",
            "name": "type",
            "type": "string"
          }
        ],
        "description": "Attempts to remove all constraints of a specified type associated with an entity",
        "name": "RemoveConstraints",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether we removed any constraints or not",
            "type": "boolean"
          },
          {
            "description": "The amount of constraints removed",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 182,
          "lineStart": 146
        }
      },
      {
        "arguments": [
          {
            "description": "First entity",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "Second entity",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "description": "<page>PhysObj</page> number of first entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone1",
            "type": "number"
          },
          {
            "description": "<page>PhysObj</page> number of second entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone2",
            "type": "number"
          },
          {
            "description": "Position relative to the the first physics object to constrain to.",
            "name": "localPos1",
            "type": "Vector"
          },
          {
            "description": "Position relative to the the second physics object to constrain to.",
            "name": "localPos2",
            "type": "Vector"
          },
          {
            "description": "Length of the rope.",
            "name": "length",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Amount to add to the length of the rope. Works as it does in the Rope tool.",
            "name": "addLength",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Amount of force until it breaks (0 = unbreakable).",
            "name": "forceLimit",
            "type": "number"
          },
          {
            "description": "Width of the rope.",
            "name": "width",
            "type": "number"
          },
          {
            "default": "",
            "description": "Material of the rope. If unset, will be solid black.",
            "name": "material",
            "type": "string"
          },
          {
            "default": "false",
            "description": "Whether the constraint is rigid.",
            "name": "rigid",
            "type": "boolean"
          },
          {
            "default": "color_white",
            "description": "The color of the rope. See <page>Global.Color</page>.",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Creates a simple rope (length) based constraint.",
        "name": "Rope",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The constraint entity ([phys_lengthconstraint](https://developer.valvesoftware.com/wiki/Phys_lengthconstraint)).\n\nWill be a `keyframe_rope` if you are roping to the same bone on the same entity. Will return `false` if the constraint could not be created.",
            "name": "constraint",
            "type": "Entity"
          },
          {
            "description": "The rope entity. Will return `nil` if `constraint` return value is a [keyframe_rope](https://developer.valvesoftware.com/wiki/Keyframe_rope) or if the constraint could not be created.",
            "name": "rope",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 540,
          "lineStart": 468
        }
      },
      {
        "arguments": [
          {
            "description": "First entity.",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "Second entity.",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "description": "<page>PhysObj</page> number of first entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone1",
            "type": "number"
          },
          {
            "description": "<page>PhysObj</page> number of second entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone2",
            "type": "number"
          },
          {
            "description": "Position relative to the the first physics object to constrain to.",
            "name": "localPos1",
            "type": "Vector"
          },
          {
            "description": "Position relative to the the second physics object to constrain to.",
            "name": "localPos2",
            "type": "Vector"
          },
          {
            "description": "The width of the rope.",
            "name": "width",
            "type": "number"
          },
          {
            "default": "",
            "description": "The material of the rope. If unset, will be solid black.",
            "name": "material",
            "type": "string"
          },
          {
            "default": "color_white",
            "description": "The color of the rope. See <page>Global.Color</page>.",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Creates a slider constraint. A slider is like a rope, but allows the constrained object to move only in 1 direction.",
        "name": "Slider",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The created constraint entity. ([phys_slideconstraint](https://developer.valvesoftware.com/wiki/Phys_slideconstraint)) Will return `false` if the constraint could not be created.",
            "type": "Entity"
          },
          {
            "description": "The created rope. ([keyframe_rope](https://developer.valvesoftware.com/wiki/Keyframe_rope)) Will return `nil` if the constraint or the rope could not be created.",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 767,
          "lineStart": 684
        }
      },
      {
        "arguments": [
          {
            "description": "The first entity",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "The second entity",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "description": "<page>PhysObj</page> number of first entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone1",
            "type": "number"
          },
          {
            "description": "<page>PhysObj</page> number of second entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone2",
            "type": "number"
          },
          {
            "default": "0",
            "description": "The amount of force appliable to the constraint before it will break (0 is never)",
            "name": "forceLimit",
            "type": "number"
          },
          {
            "default": "false",
            "description": "Should `ent1` be nocollided to `ent2` via this constraint",
            "name": "noCollide",
            "type": "boolean"
          },
          {
            "default": "false",
            "description": "If true, when `ent2` is removed, `ent1` will also be removed",
            "name": "deleteEnt1OnBreak",
            "type": "boolean"
          }
        ],
        "description": "Creates a weld constraint.",
        "name": "Weld",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The created constraint entity. ([phys_constraint](https://developer.valvesoftware.com/wiki/Phys_constraint))",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 461,
          "lineStart": 396
        }
      },
      {
        "arguments": [
          {
            "description": "The player that will be used to call <page>numpad.OnDown</page> and <page>numpad.OnUp</page>.",
            "name": "player",
            "type": "Player"
          },
          {
            "description": "First entity.",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "Second entity.",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "description": "<page>PhysObj</page> number of first entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone1",
            "type": "number"
          },
          {
            "description": "<page>PhysObj</page> number of second entity to constrain to. (0 for non-ragdolls).\n\nSee <page>Entity:TranslateBoneToPhysBone</page>.",
            "name": "bone2",
            "type": "number"
          },
          {
            "description": "Position relative to the the first physics object to constrain to.",
            "name": "localPos1",
            "type": "Vector"
          },
          {
            "description": "Position relative to the the second physics object to constrain to.",
            "name": "localPos2",
            "type": "Vector"
          },
          {
            "description": "The width of the rope.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "The key binding for \"forward\", corresponding to an <page>Enums/KEY</page>",
            "name": "fwdBind",
            "type": "number"
          },
          {
            "description": "The key binding for \"backwards\", corresponding to an <page>Enums/KEY</page>",
            "name": "bwdBind",
            "type": "number"
          },
          {
            "description": "Forward speed.",
            "name": "fwdSpeed",
            "type": "number"
          },
          {
            "description": "Backwards speed.",
            "name": "bwdSpeed",
            "type": "number"
          },
          {
            "default": "",
            "description": "The material of the rope. If unset, will be solid black.",
            "name": "material",
            "type": "string"
          },
          {
            "default": "false",
            "description": "Whether the winch should be on toggle.",
            "name": "toggle",
            "type": "boolean"
          },
          {
            "default": "color_white",
            "description": "The color of the rope. See <page>Global.Color</page>.",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Creates a winch constraint, a player controllable <page>constraint.Elastic</page>, allowing gradually increasing or decreasing the length.",
        "name": "Winch",
        "parent": "constraint",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The created constraint. ([phys_spring](https://developer.valvesoftware.com/wiki/Phys_spring)) Can return `nil`. Will return `false` if the constraint could not be created.",
            "type": "Entity"
          },
          {
            "description": "The created rope. ([keyframe_rope](https://developer.valvesoftware.com/wiki/Keyframe_rope)) Will return `nil` if the constraint could not be created.",
            "type": "Entity"
          },
          {
            "description": "The winch controller. (`gmod_winch_controller`) Can return `nil`.",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/constraint.lua",
          "lineEnd": 1330,
          "lineStart": 1265
        }
      }
    ],
    "name": "constraint"
  },
  {
    "description": "The construct library is used to control the physical properties of entities.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Player that will have the numpad control over the magnet",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The position of the magnet",
            "name": "pos",
            "type": "Vector"
          },
          {
            "description": "The angles of the magnet",
            "name": "ang",
            "type": "Angle"
          },
          {
            "description": "The model of the maget",
            "name": "model",
            "type": "string"
          },
          {
            "description": "Material of the magnet ( texture )",
            "name": "material",
            "type": "string"
          },
          {
            "description": "The key to toggle the magnet, see <page>Enums/KEY</page>",
            "name": "key",
            "type": "number"
          },
          {
            "description": "Maximum amount of objects the magnet can hold",
            "name": "maxObjects",
            "type": "number"
          },
          {
            "description": "Strength of the magnet",
            "name": "strength",
            "type": "number"
          },
          {
            "default": "0",
            "description": "If &gt; 0, disallows the magnet to pull objects towards it",
            "name": "nopull",
            "type": "number"
          },
          {
            "default": "0",
            "description": "If &gt; 0, allows rotation of the objects attached",
            "name": "allowrot",
            "type": "number"
          },
          {
            "default": "0",
            "description": "If &gt; 0, enabled from spawn",
            "name": "startOn",
            "type": "number"
          },
          {
            "description": "If != 0, pressing the key toggles the magnet, otherwise you'll have to hold the key to keep it enabled",
            "name": "toggle",
            "type": "number"
          },
          {
            "default": "Vector( 0, 0, 0 )",
            "description": "Velocity to set on spawn",
            "name": "vel",
            "type": "Vector"
          },
          {
            "default": "Angle( 0, 0, 0 )",
            "description": "Angular velocity to set on spawn",
            "name": "aVel",
            "type": "Angle"
          },
          {
            "default": "false",
            "description": "Freeze the magnet on start",
            "name": "frozen",
            "type": "boolean"
          }
        ],
        "description": "Creates a magnet.",
        "name": "Magnet",
        "parent": "construct",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The magnet",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/construct.lua",
          "lineEnd": 149,
          "lineStart": 95
        }
      },
      {
        "arguments": [
          {
            "description": "The player. This variable is not used and can be left out.",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The entity to apply properties to",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "You can use this or the argument below. This will be used in case you don't provide argument below.",
            "name": "physObjID",
            "type": "number"
          },
          {
            "description": "The physics object to apply the properties to",
            "name": "physObj",
            "type": "PhysObj"
          },
          {
            "description": "The table containing properties to apply. See <page>Structures/PhysProperties</page>",
            "name": "data",
            "type": "table"
          }
        ],
        "description": "Sets props physical properties.",
        "name": "SetPhysProp",
        "parent": "construct",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/construct.lua",
          "lineEnd": 51,
          "lineStart": 13
        }
      }
    ],
    "name": "construct"
  },
  {
    "description": "The controlpanel library.",
    "functions": [
      {
        "description": "Clears ALL the control panels ( for tools )",
        "name": "Clear",
        "parent": "controlpanel",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/controlpanel.lua",
          "lineEnd": 47,
          "lineStart": 43
        }
      },
      {
        "arguments": [
          {
            "description": "The name of the panel. For normal tools this will be equal to `TOOL.Mode` (the tool's filename without the extension).\n\nWhen you create a tool/option via <page>spawnmenu.AddToolMenuOption</page>, the internal control panel name is `TOOL.Mode .. \"_\" .. tool_tab:lower() .. \"_\" .. tool_category:lower()`.",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Returns (or creates if not exists) a control panel.",
        "name": "Get",
        "parent": "controlpanel",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The <page>ControlPanel</page> panel.",
            "type": "Panel"
          }
        ],
        "source": {
          "file": "lua/includes/modules/controlpanel.lua",
          "lineEnd": 41,
          "lineStart": 21
        }
      }
    ],
    "name": "controlpanel"
  },
  {
    "description": "Functions to persist data on a user's computer.\n\nThe data will be read / written to / from a database\ncorresponding to the realm the library was used in.\n\n\n| Realm | Database File |\n|:-----:|:-----|\n| [Server] | `garrysmod/sv.db`\n| [Client] | `garrysmod/cl.db`\n|  [Menu]  | `garrysmod/mn.db`\n\n[Server]: /gmod/States#server\n[Client]: /gmod/States#client\n[Menu]: /gmod/States#menu",
    "functions": [
      {
        "arguments": [
          {
            "description": "The name of the cookie that you want to delete.",
            "name": "key",
            "type": "string"
          }
        ],
        "description": "Removes any cookie with the given name.\n\nDoes nothing if the cookie doesn't exist.",
        "name": "Delete",
        "parent": "cookie",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/cookie.lua",
          "lineEnd": 114,
          "lineStart": 105
        }
      },
      {
        "arguments": [
          {
            "description": "The name of the cookie that you want to get.",
            "name": "name",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "Value to return if the cookie does not exist.",
            "name": "default",
            "type": "any"
          }
        ],
        "description": "Gets the value of a cookie on the client as a number.",
        "name": "GetNumber",
        "parent": "cookie",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The cookie value",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/cookie.lua",
          "lineEnd": 103,
          "lineStart": 95
        }
      },
      {
        "arguments": [
          {
            "description": "The name of the cookie that you want to get.",
            "name": "name",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "Value to return if the cookie does not exist.",
            "name": "default",
            "type": "any"
          }
        ],
        "description": "Gets the value of a cookie on the client as a string.",
        "name": "GetString",
        "parent": "cookie",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The cookie value",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/modules/cookie.lua",
          "lineEnd": 93,
          "lineStart": 85
        }
      },
      {
        "arguments": [
          {
            "description": "The name of the cookie.",
            "name": "key",
            "type": "string"
          },
          {
            "description": "The data stored in the cookie.",
            "name": "value",
            "type": "string"
          }
        ],
        "description": "Creates / updates a cookie in the <page text=\"Database\">cookie</page>.",
        "name": "Set",
        "parent": "cookie",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/cookie.lua",
          "lineEnd": 121,
          "lineStart": 116
        }
      }
    ],
    "name": "cookie"
  },
  {
    "description": "Coroutines are similar to threads, however they do not run simultaneously. They offer a way to split up tasks and dynamically pause &amp; resume functions.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The function for the coroutine to use.",
            "name": "func",
            "type": "function"
          }
        ],
        "description": "Creates a coroutine of the given function.",
        "name": "create",
        "parent": "coroutine",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "coroutine",
            "type": "thread"
          }
        ]
      },
      {
        "description": "Returns whether the running coroutine can yield.\nA running coroutine is yieldable if it is not in the main thread, and it is not inside a non-yieldable C&nbsp;function.\n<note>This is only available on the x86-64 versions, because of the difference in the LuaJIT version. [See here](jit.version)</note>",
        "name": "isyieldable",
        "parent": "coroutine",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns true when the running coroutine can yield.",
            "name": "canyield",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Coroutine to resume.",
            "name": "coroutine",
            "type": "thread"
          },
          {
            "description": "Arguments to be returned by <page>coroutine.yield</page>.",
            "name": "args",
            "type": "vararg"
          }
        ],
        "description": "Resumes the given coroutine and passes the given vararg to either the function arguments or the <page>coroutine.yield</page> that is inside that function and returns whatever yield is called with the next time or by the final return in the function.",
        "name": "resume",
        "parent": "coroutine",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "If the executed thread code had no errors occur within it.",
            "type": "boolean"
          },
          {
            "description": "If an error occurred, this will be a string containing the error message. Otherwise, this will be arguments that were yielded.",
            "type": "vararg"
          }
        ]
      },
      {
        "description": "Returns the active coroutine or nil if we are not within a coroutine.",
        "name": "running",
        "parent": "coroutine",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "coroutine",
            "type": "thread"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Coroutine to check the status of.",
            "name": "coroutine",
            "type": "thread"
          }
        ],
        "description": "Returns the status of the coroutine passed to it, the possible statuses are \"suspended\", \"running\", and \"dead\".",
        "name": "status",
        "parent": "coroutine",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "status",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The number of seconds to wait",
            "name": "duration",
            "type": "number"
          }
        ],
        "description": "Repeatedly yields the coroutine for the given duration before continuing.\n\nOnly works inside a coroutine. Only useful in nextbot coroutine think function.\n\nThis function uses <page>Global.CurTime</page> instead of <page>Global.RealTime</page>.",
        "name": "wait",
        "parent": "coroutine",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/coroutine.lua",
          "lineEnd": 26,
          "lineStart": 15
        }
      },
      {
        "arguments": [
          {
            "description": "Coroutine to resume.",
            "name": "coroutine",
            "type": "function"
          }
        ],
        "description": "Returns a function which calling is equivalent with calling <page>coroutine.resume</page> with the coroutine and all extra parameters.\n\nThe values returned by the returned function only contain the values passed to the inner <page>coroutine.yield</page> call and do not include the *no error* status that <page>coroutine.resume</page> provides. In case of failure, an error is thrown instead.",
        "name": "wrap",
        "parent": "coroutine",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "type": "function"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Arguments to be returned by the last call of <page>coroutine.resume</page>.",
            "name": "returnValue",
            "type": "vararg"
          }
        ],
        "description": "Pauses the active coroutine and passes all additional variables to the call of <page>coroutine.resume</page> that resumed the coroutine last time, and returns all additional variables that were passed to the previous call of resume.",
        "name": "yield",
        "parent": "coroutine",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Arguments that were set previously by <page>coroutine.resume</page>.",
            "type": "vararg"
          }
        ]
      }
    ],
    "name": "coroutine"
  },
  {
    "description": "The cvars library allows you to control what happens when a cvar (console variable) is changed.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The name of the convar to add the change callback to.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The function to be called when the convar changes.\n<callback>\n<arg type=\"string\" name=\"convar\">The name of the convar.</arg>\n<arg type=\"string\" name=\"oldValue\">The old value of the convar.</arg>\n<arg type=\"string\" name=\"newValue\">The new value of the convar.</arg>\n</callback>",
            "name": "callback",
            "type": "function"
          },
          {
            "default": "nil",
            "description": "If set, you will be able to remove the callback using <page>cvars.RemoveChangeCallback</page>.\n\nThe identifier is not required to be globally unique, as it's paired with the actual name of the convar.",
            "name": "identifier",
            "type": "string"
          }
        ],
        "description": "Adds a callback to be called when the named convar changes.\n\n<bug issue=\"1440\">This does not callback convars in the menu state.</bug>\n<bug issue=\"3503\">This does not callback convars on the client with FCVAR_GAMEDLL and convars on the server without FCVAR_GAMEDLL.</bug>\n<bug issue=\"3740\">This does not callback convars on the client with FCVAR_REPLICATED.</bug>",
        "name": "AddChangeCallback",
        "parent": "cvars",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/cvars.lua",
          "lineEnd": 81,
          "lineStart": 54
        }
      },
      {
        "arguments": [
          {
            "description": "Name of console variable",
            "name": "cvar",
            "type": "string"
          },
          {
            "default": "false",
            "description": "The value to return if the console variable does not exist",
            "name": "default",
            "type": "boolean"
          }
        ],
        "description": "Retrieves console variable as a boolean.",
        "name": "Bool",
        "parent": "cvars",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Retrieved value",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/cvars.lua",
          "lineEnd": 147,
          "lineStart": 138
        }
      },
      {
        "arguments": [
          {
            "description": "The name of the <page>ConVar</page>.",
            "name": "name",
            "type": "string"
          },
          {
            "default": "false",
            "description": "Whether or not to create the internal callback table for given <page>ConVar</page> if there isn't one yet.\n\n\nThis argument is internal and should not be used.",
            "name": "createIfNotFound",
            "type": "boolean"
          }
        ],
        "description": "Returns a table of the given <page>ConVar</page>s callbacks.",
        "name": "GetConVarCallbacks",
        "parent": "cvars",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of the convar's callbacks, or nil if the convar doesn't exist.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/cvars.lua",
          "lineEnd": 31,
          "lineStart": 21
        }
      },
      {
        "arguments": [
          {
            "description": "Name of console variable",
            "name": "cvar",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "The value to return if the console variable does not exist",
            "name": "default",
            "type": "any"
          }
        ],
        "description": "Retrieves console variable as a number.",
        "name": "Number",
        "parent": "cvars",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Retrieved value or the second argument if the console variable does not exist. Will return 0 if the console variable exists and has a string value.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/cvars.lua",
          "lineEnd": 132,
          "lineStart": 123
        }
      },
      {
        "arguments": [
          {
            "description": "Convar name",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The old value of the convar",
            "name": "oldVal",
            "type": "string"
          },
          {
            "description": "The new value of the convar",
            "name": "newVal",
            "type": "string"
          }
        ],
        "description": "<internal>You are probably looking for <page>cvars.AddChangeCallback</page>.</internal>\n\nCalled by the engine when a convar value changes.",
        "name": "OnConVarChanged",
        "parent": "cvars",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/cvars.lua",
          "lineEnd": 52,
          "lineStart": 38
        }
      },
      {
        "arguments": [
          {
            "description": "The name of the convar to remove the callback from.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The callback's identifier.",
            "name": "indentifier",
            "type": "string"
          }
        ],
        "description": "Removes a callback for a convar using the the callback's identifier. The identifier should be the third argument specified for <page>cvars.AddChangeCallback</page>.",
        "name": "RemoveChangeCallback",
        "parent": "cvars",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/cvars.lua",
          "lineEnd": 102,
          "lineStart": 87
        }
      },
      {
        "arguments": [
          {
            "description": "Name of console variable",
            "name": "cvar",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "The value to return if the console variable does not exist",
            "name": "default",
            "type": "any"
          }
        ],
        "description": "Retrieves console variable as a string.",
        "name": "String",
        "parent": "cvars",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Retrieved value",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/modules/cvars.lua",
          "lineEnd": 117,
          "lineStart": 108
        }
      }
    ],
    "name": "cvars"
  },
  {
    "description": "The debug library is intended to help you debug your scripts, however it also has several other powerful uses. Some builtin debug function were removed in GMod due to security reasons",
    "functions": [
      {
        "description": "<deprecated></deprecated>\n\n<note> This only works on the source dedicated server. </note>\n\nEnters an interactive mode with the user, running each string that the user enters. Using simple commands and other debug facilities, the user can inspect global and local variables, change their values, evaluate expressions, and so on. A line containing only the word cont finishes this function, so that the caller continues its execution.\n\n* Commands for debug.debug are not lexically nested within any function, and so have no direct access to local variables.\n* To exit this interactive mode, you can press Ctrl + Z then Enter OR type the word 'cont' on a single line and press enter.",
        "name": "debug",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Object to get environment of",
            "name": "object",
            "type": "table"
          }
        ],
        "description": "<deprecated></deprecated>\n\nReturns the environment of the passed object. This can be set with <page>debug.setfenv</page>",
        "name": "getfenv",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Environment",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "default": "nil",
            "description": "Which thread to retrieve it's hook from, doesn't seem to actually work.",
            "name": "thread",
            "type": "thread"
          }
        ],
        "description": "<deprecated></deprecated>\n\nReturns the current hook settings of the passed thread. The thread argument can be omitted. This is completely different to gamemode hooks. More information on hooks can be found at http://www.lua.org/pil/23.2.html. This function will simply return the function, mask, and count of the last called <page>debug.sethook</page>.",
        "name": "gethook",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Hook function.",
            "type": "function"
          },
          {
            "description": "Hook mask. This is reversed of the <page>debug.sethook</page> mask (\"clr\" would be \"rlc\").",
            "type": "string"
          },
          {
            "description": "Hook count.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Takes either a function or a number representing the stack level as an argument. Stack level 0 always corresponds to the debug.getinfo call, 1 would be the function calling debug.getinfo in most cases, and so on.\n\nReturns useful information about that function in a table.",
            "name": "funcOrStackLevel",
            "type": "function"
          },
          {
            "default": "flnSu>",
            "description": "A string whose characters specify the information to be retrieved.\n\n* `f` - Populates the func field.\n* `l` - Populates the currentline field.\n* `L` - Populates the activelines field.\n* `n` - Populates the name and namewhat fields - only works if stack level is passed rather than function pointer.\n* `S` - Populates the location fields (lastlinedefined, linedefined, short_src, source and what).\n* `u` - Populates the argument and upvalue fields (isvararg, nparams, nups).\n* `&gt;` - Causes this function to use the last argument to get the data from",
            "name": "fields",
            "type": "string"
          },
          {
            "description": "Function to use. (Only used by the `&gt;` field)",
            "name": "function",
            "type": "function|nil"
          }
        ],
        "description": "Returns debug information about a function.",
        "name": "getinfo",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table as a <page>Structures/DebugInfo</page> containing information about the function you passed. Can return nil if the stack level didn't point to a valid stack frame.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "default": "Current thread",
            "description": "The thread",
            "name": "thread",
            "type": "thread"
          },
          {
            "description": "The level above the thread.\n* 0 = the function that was called (most always this function)'s arguments\n* 1 = the thread that had called this function.\n* 2 = the thread that had called the function that started the thread that called this function.\n\nA function defined in Lua can also be passed as the level. The index will specify the parameter's name to be returned (a parameter will have a value of nil).",
            "name": "level",
            "type": "number"
          },
          {
            "description": "The variable's index you want to get.\n* 1 = the first local defined in the thread\n* 2 = the second local defined in the thread\n* etc...",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "<deprecated></deprecated>\n\nGets the name and value of a local variable indexed from the level.\n<warning>When a function has a tailcall return, you cannot access the locals of this function.</warning>",
        "name": "getlocal",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The name of the variable.\n\nSometimes this will be `(*temporary)` if the local variable had no name.\n\n<note>Variables with names starting with **(** are **internal variables**.</note>",
            "type": "string"
          },
          {
            "description": "The value of the local variable.",
            "type": "any"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The object to retrieve the metatable from.",
            "name": "object",
            "type": "any"
          }
        ],
        "description": "<deprecated></deprecated>\n\nReturns the metatable of an object. This function ignores the metatable's __metatable field.",
        "name": "getmetatable",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The metatable of the given object.",
            "type": "table"
          }
        ]
      },
      {
        "description": "<deprecated>\nThis function **will** return an empty table.\nIf you get an error because of this see the example below for a workaround\n</deprecated>\n\nReturns the internal Lua registry table.\n\nThe Lua registry is used by the engine and binary modules to create references to Lua values. The registry contains every global ran and used in the Lua environment. Avoid creating entries into the registry with a number as the key, as they are reserved for the reference system.\n\n<warning>Improper editing of the registry can result in unintended side effects, including crashing the game.</warning>",
        "name": "getregistry",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The Lua registry",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/util.lua",
          "lineEnd": 19,
          "lineStart": 2
        }
      },
      {
        "arguments": [
          {
            "description": "Function to get the upvalue indexed from.",
            "name": "func",
            "type": "function"
          },
          {
            "description": "The index in the upvalue array. The max number of entries can be found in <page>debug.getinfo</page>'s \"<page text=\"nups\">Structures/DebugInfo</page>\" key.",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "<deprecated></deprecated>\n\nUsed for getting variable values in an index from the passed function. This does nothing for C functions.",
        "name": "getupvalue",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Name of the upvalue. Will be nil if the index was out of range (&lt; 1 or &gt; <page>debug.getinfo</page>.nups), or the function was defined in C.",
            "type": "string"
          },
          {
            "description": "Value of the upvalue.",
            "type": "any"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Object to set environment of",
            "name": "object",
            "type": "table"
          },
          {
            "description": "Environment to set",
            "name": "env",
            "type": "table"
          }
        ],
        "description": "<deprecated></deprecated>\n\nSets the environment of the passed object.",
        "name": "setfenv",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The object",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Thread to set the hook on. This argument can be omited",
            "name": "thread",
            "type": "thread"
          },
          {
            "description": "Function for the hook to call. First argument in this function will be the mask event that called the hook as a full string (not as 'c' but instead as 'call').",
            "name": "hook",
            "type": "function"
          },
          {
            "description": "The hook's mask. Can be one or more of the following events:\n* c - Triggers the hook on each function call made from Lua.\n* r - Triggers the hook on each function return made from Lua.\n* l - Triggers the hook on each line compiled of code.",
            "name": "mask",
            "type": "string"
          },
          {
            "description": "How often to call the hook (in instructions). 0 for every instruction. Can be omitted.",
            "name": "count",
            "type": "number"
          }
        ],
        "description": "<deprecated></deprecated>\n\nSets the given function as a Lua hook. This is completely different to gamemode hooks. The thread argument can be completely omitted and calling this function with no arguments will remove the current hook. This is used by default for infinite loop detection. More information on hooks can be found at http://www.lua.org/pil/23.2.html and https://www.gammon.com.au/scripts/doc.php?lua=debug.sethook\n\nHooks are not always ran when code that has been compiled by LuaJIT's JIT compiler is being executed, this is due to Intermediate Representation internally storing constantly running bytecode for performance reasons.",
        "name": "sethook",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "default": "Current Thread",
            "description": "The thread",
            "name": "thread",
            "type": "thread"
          },
          {
            "description": "The level above the thread.\n0 is the function that was called (most always this function)'s arguments\n\n1 is the thread that had called this function.\n\n2 is the thread that had called the function that started the thread that called this function.",
            "name": "level",
            "type": "number"
          },
          {
            "description": "The variable's index you want to get.\n\n1 = the first local defined in the thread\n\n2 = the second local defined in the thread",
            "name": "index",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "The value to set the local to",
            "name": "value",
            "type": "any"
          }
        ],
        "description": "<removed>This function was removed due to security concerns.</removed>\n\nSets a local variable's value.",
        "name": "setlocal",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The name of the local variable if the local at the index exists, otherwise nil is returned.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Object to set the metatable for.",
            "name": "object",
            "type": "any"
          },
          {
            "description": "The metatable to set for the object.\nIf this argument is nil, then the object's metatable is removed.",
            "name": "metatable",
            "type": "table"
          }
        ],
        "description": "<deprecated></deprecated>\n\nSets the object's metatable. Unlike <page>Global.setmetatable</page>, this function works regardless of whether the first object passed is a valid table or not; this function even works on primitive datatypes such as numbers, functions, and even nil.",
        "name": "setmetatable",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "true if the object's metatable was set successfully.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The function to index the upvalue from",
            "name": "func",
            "type": "function"
          },
          {
            "description": "The index from func",
            "name": "index",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "The value to set the upvalue to.",
            "name": "val",
            "type": "any"
          }
        ],
        "description": "<removed>This function was removed due to security concerns.</removed>\n\nSets the variable indexed from func",
        "name": "setupvalue",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns nil if there is no upvalue with the given index, otherwise it returns the upvalue's name.",
            "type": "string"
          }
        ]
      },
      {
        "description": "Prints out the lua function call stack to the console.",
        "name": "Trace",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/debug.lua",
          "lineEnd": 51,
          "lineStart": 24
        }
      },
      {
        "arguments": [
          {
            "default": "current thread",
            "description": "Thread (ie. error object from xpcall error handler) to build traceback for. If this argument is not set to a proper <page>thread</page> it will act as the next argument.",
            "name": "thread",
            "type": "thread"
          },
          {
            "default": "nil",
            "description": "Appended at the beginning of the traceback.",
            "name": "message",
            "type": "string"
          },
          {
            "default": "1",
            "description": "Which level to start the traceback.",
            "name": "level",
            "type": "number"
          }
        ],
        "description": "<deprecated></deprecated>\n\nReturns a full execution stack trace.",
        "name": "traceback",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A dump of the execution stack.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The function to index the upvalue from",
            "name": "func",
            "type": "function"
          },
          {
            "description": "The index from func",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "<removed>This function was removed due to security concerns.</removed>\n\nReturns an unique identifier for the upvalue indexed from func",
        "name": "upvalueid",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A unique identifier",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "",
            "name": "f1",
            "type": "function"
          },
          {
            "description": "",
            "name": "n1",
            "type": "number"
          },
          {
            "description": "",
            "name": "f2",
            "type": "function"
          },
          {
            "description": "",
            "name": "n2",
            "type": "number"
          }
        ],
        "description": "<removed>This function was removed due to security concerns.</removed>\n\nMake the n1-th upvalue of the Lua closure f1 refer to the n2-th upvalue of the Lua closure f2.",
        "name": "upvaluejoin",
        "parent": "debug",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      }
    ],
    "name": "debug"
  },
  {
    "description": "The debugoverlay library is mainly useful for 3D debugging, it can be used to draw shapes on the screen for debug purposes.\n\n<note>These functions will not do anything unless the **developer** console variable is set to non 0.</note>",
    "functions": [
      {
        "arguments": [
          {
            "description": "Position origin",
            "name": "origin",
            "type": "Vector"
          },
          {
            "description": "Angle of the axis",
            "name": "ang",
            "type": "Angle"
          },
          {
            "description": "Size of the axis",
            "name": "size",
            "type": "number"
          },
          {
            "default": "1",
            "description": "Number of seconds to appear",
            "name": "lifetime",
            "type": "number"
          },
          {
            "default": "false",
            "description": "If true, will draw on top of everything; ignoring the Z buffer",
            "name": "ignoreZ",
            "type": "boolean"
          }
        ],
        "description": "Displays an axis indicator at the specified position.\n\n<note>This function will silently fail if the `developer` <page>ConVar</page> is set to `0`.\nIt is not networked to clients, except for the <page text=\"listen server host\">Player:IsListenServerHost</page>.\nIt will not work when the game is paused.</note>",
        "name": "Axis",
        "parent": "debugoverlay",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Position origin",
            "name": "origin",
            "type": "Vector"
          },
          {
            "description": "Minimum bounds of the box",
            "name": "mins",
            "type": "Vector"
          },
          {
            "description": "Maximum bounds of the box",
            "name": "maxs",
            "type": "Vector"
          },
          {
            "default": "1",
            "description": "Number of seconds to appear",
            "name": "lifetime",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255, 255 )",
            "description": "The color of the box. Uses the <page>Color</page>",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Displays a solid coloured box at the specified position.\n\n<note>This function will silently fail if the `developer` <page>ConVar</page> is set to `0`.\nIt is not networked to clients, except for the <page text=\"listen server host\">Player:IsListenServerHost</page>.\nIt will not work when the game is paused.</note>",
        "name": "Box",
        "parent": "debugoverlay",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "World position",
            "name": "pos",
            "type": "Vector"
          },
          {
            "description": "The mins of the box (lowest corner)",
            "name": "mins",
            "type": "Vector"
          },
          {
            "description": "The maxs of the box (highest corner)",
            "name": "maxs",
            "type": "Vector"
          },
          {
            "description": "The angle to draw the box at",
            "name": "ang",
            "type": "Angle"
          },
          {
            "default": "1",
            "description": "Amount of seconds to show the box",
            "name": "lifetime",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255, 255 )",
            "description": "The color of the box. Uses the <page>Color</page>",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Displays a solid colored rotated box at the specified position.\n\n<note>This function will silently fail if the `developer` <page>ConVar</page> is set to `0`.\nIt is not networked to clients, except for the <page text=\"listen server host\">Player:IsListenServerHost</page>.\nIt will not work when the game is paused.</note>",
        "name": "BoxAngles",
        "parent": "debugoverlay",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Position origin",
            "name": "position",
            "type": "Vector"
          },
          {
            "description": "Size of the cross",
            "name": "size",
            "type": "number"
          },
          {
            "default": "1",
            "description": "Number of seconds the cross will appear for",
            "name": "lifetime",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255 )",
            "description": "The color of the cross. Uses the <page>Color</page>",
            "name": "color",
            "type": "table"
          },
          {
            "default": "false",
            "description": "If true, will draw on top of everything; ignoring the Z buffer",
            "name": "ignoreZ",
            "type": "boolean"
          }
        ],
        "description": "Creates a coloured cross at the specified position for the specified time.\n\n<note>This function will silently fail if the `developer` <page>ConVar</page> is set to `0`.\nIt is not networked to clients, except for the <page text=\"listen server host\">Player:IsListenServerHost</page>.\nIt will not work when the game is paused.</note>",
        "name": "Cross",
        "parent": "debugoverlay",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The position in 3D to display the text.",
            "name": "pos",
            "type": "Vector"
          },
          {
            "description": "Line of text, will offset text on the to display the new line unobstructed",
            "name": "line",
            "type": "number"
          },
          {
            "description": "The text to display",
            "name": "text",
            "type": "string"
          },
          {
            "default": "1",
            "description": "Number of seconds to appear",
            "name": "lifetime",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255 )",
            "description": "The color of the box. Uses the <page>Color</page>",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Displays 2D text at the specified coordinates.\n\n<note>This function will silently fail if the `developer` <page>ConVar</page> is set to `0`.\nIt is not networked to clients, except for the <page text=\"listen server host\">Player:IsListenServerHost</page>.\nIt will not work when the game is paused.</note>",
        "name": "EntityTextAtPosition",
        "parent": "debugoverlay",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "",
            "name": "position",
            "type": "Vector"
          }
        ],
        "description": "Draws a 3D grid of limited size in given position.\n\n<note>This function will silently fail if the `developer` <page>ConVar</page> is set to `0`.\nIt is not networked to clients, except for the <page text=\"listen server host\">Player:IsListenServerHost</page>.\nIt will not work when the game is paused.</note>",
        "name": "Grid",
        "parent": "debugoverlay",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "First position of the line",
            "name": "pos1",
            "type": "Vector"
          },
          {
            "description": "Second position of the line",
            "name": "pos2",
            "type": "Vector"
          },
          {
            "default": "1",
            "description": "Number of seconds to appear",
            "name": "lifetime",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255 )",
            "description": "The color of the line. Uses the <page>Color</page>",
            "name": "color",
            "type": "table"
          },
          {
            "default": "false",
            "description": "If true, will draw on top of everything; ignoring the Z buffer",
            "name": "ignoreZ",
            "type": "boolean"
          }
        ],
        "description": "Displays a coloured line at the specified position.\n\n<note>This function will silently fail if the `developer` <page>ConVar</page> is set to `0`.\nIt is not networked to clients, except for the <page text=\"listen server host\">Player:IsListenServerHost</page>.\nIt will not work when the game is paused.</note>",
        "name": "Line",
        "parent": "debugoverlay",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The position of the text, from 0 ( left ) to 1 ( right ).",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The position of the text, from 0 ( top ) to 1 ( bottom ).",
            "name": "y",
            "type": "number"
          },
          {
            "description": "The text to display",
            "name": "text",
            "type": "string"
          },
          {
            "default": "1",
            "description": "Number of seconds to appear",
            "name": "lifetime",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255 )",
            "description": "The color of the box. Uses the <page>Color</page>",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Displays text triangle at the specified coordinates.\n\n<note>This function will silently fail if the `developer` <page>ConVar</page> is set to `0`.\nIt is not networked to clients, except for the <page text=\"listen server host\">Player:IsListenServerHost</page>.\nIt will not work when the game is paused.</note>",
        "name": "ScreenText",
        "parent": "debugoverlay",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Position origin",
            "name": "origin",
            "type": "Vector"
          },
          {
            "description": "Size of the sphere",
            "name": "size",
            "type": "number"
          },
          {
            "default": "1",
            "description": "Number of seconds to appear",
            "name": "lifetime",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255 )",
            "description": "The color of the sphere. Uses the <page>Color</page>",
            "name": "color",
            "type": "table"
          },
          {
            "default": "false",
            "description": "If true, will draw on top of everything; ignoring the Z buffer",
            "name": "ignoreZ",
            "type": "boolean"
          }
        ],
        "description": "Displays a coloured sphere at the specified position.\n\n<note>This function will silently fail if the `developer` <page>ConVar</page> is set to `0`.\nIt is not networked to clients, except for the <page text=\"listen server host\">Player:IsListenServerHost</page>.\nIt will not work when the game is paused.</note>",
        "name": "Sphere",
        "parent": "debugoverlay",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The start position of the box.",
            "name": "vStart",
            "type": "Vector"
          },
          {
            "description": "The end position of the box.",
            "name": "vEnd",
            "type": "Vector"
          },
          {
            "description": "The \"minimum\" edge of the box.",
            "name": "vMins",
            "type": "Vector"
          },
          {
            "description": "The \"maximum\" edge of the box.",
            "name": "vMaxs",
            "type": "Vector"
          },
          {
            "description": "",
            "name": "ang",
            "type": "Angle"
          },
          {
            "default": "1",
            "description": "Number of seconds to appear",
            "name": "lifetime",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255 )",
            "description": "The color of the box. Uses the <page>Color</page>",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Displays \"swept\" box, two boxes connected with lines by their vertices.\n\n<note>This function will silently fail if the `developer` <page>ConVar</page> is set to `0`.\nIt is not networked to clients, except for the <page text=\"listen server host\">Player:IsListenServerHost</page>.\nIt will not work when the game is paused.</note>",
        "name": "SweptBox",
        "parent": "debugoverlay",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Position origin",
            "name": "origin",
            "type": "Vector"
          },
          {
            "description": "String message to display",
            "name": "text",
            "type": "string"
          },
          {
            "default": "1",
            "description": "Number of seconds to appear",
            "name": "lifetime",
            "type": "number"
          },
          {
            "default": "false",
            "description": "Clip text that is obscured",
            "name": "viewCheck",
            "type": "boolean"
          }
        ],
        "description": "Displays text at the specified position.\n\n<note>This function will silently fail if the `developer` <page>ConVar</page> is set to `0`.\nIt is not networked to clients, except for the <page text=\"listen server host\">Player:IsListenServerHost</page>.\nIt will not work when the game is paused.</note>",
        "name": "Text",
        "parent": "debugoverlay",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "First point of the triangle",
            "name": "pos1",
            "type": "Vector"
          },
          {
            "description": "Second point of the triangle",
            "name": "pos2",
            "type": "Vector"
          },
          {
            "description": "Third point of the triangle",
            "name": "pos3",
            "type": "Vector"
          },
          {
            "default": "1",
            "description": "Number of seconds to appear",
            "name": "lifetime",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255 )",
            "description": "The color of the box. Uses the <page>Color</page>",
            "name": "color",
            "type": "table"
          },
          {
            "default": "false",
            "description": "If true, will draw on top of everything; ignoring the Z buffer",
            "name": "ignoreZ",
            "type": "boolean"
          }
        ],
        "description": "Displays a colored triangle at the specified coordinates.\n\n<note>This function will silently fail if the `developer` <page>ConVar</page> is set to `0`.\nIt is not networked to clients, except for the <page text=\"listen server host\">Player:IsListenServerHost</page>.\nIt will not work when the game is paused.</note>",
        "name": "Triangle",
        "parent": "debugoverlay",
        "realms": [
          "client",
          "server"
        ]
      }
    ],
    "name": "debugoverlay"
  },
  {
    "description": "The derma library allows you to add custom derma controls and create &amp; modify derma skins.",
    "functions": [
      {
        "arguments": [
          {
            "description": "",
            "name": "name",
            "type": "string"
          },
          {
            "description": "",
            "name": "pnl",
            "type": "Panel"
          },
          {
            "description": "The default color in case of failure.",
            "name": "default",
            "type": "table"
          }
        ],
        "description": "Gets the color from a Derma skin of a panel and returns default color if not found",
        "name": "Color",
        "parent": "derma",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/derma/derma.lua",
          "lineEnd": 229,
          "lineStart": 222
        }
      },
      {
        "description": "This is NOT a function, it's a variable containing all derma controls, registered with <page>derma.DefineControl</page>.\n\nUse <page>derma.GetControlList</page> to retrieve this list.\n\nIt's a list of tables, each having 3 keys, all from <page>derma.DefineControl</page> arguments:\n* <page>string</page> ClassName - The class name of the panel\n* <page>string</page> Description - The description of the panel\n* <page>string</page> BaseClass - The base class of the panel",
        "name": "Controls",
        "parent": "derma",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The list of all registered derma controls.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Name of the newly created control",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Description of the control",
            "name": "description",
            "type": "string"
          },
          {
            "description": "Table containing control methods and properties",
            "name": "tab",
            "type": "table"
          },
          {
            "description": "Derma control to base the new control off of",
            "name": "base",
            "type": "string"
          }
        ],
        "description": "Defines a new Derma control with an optional base.\n\nThis calls <page>vgui.Register</page> internally, but also does the following:\n* Adds the control to <page>derma.GetControlList</page>\n* Adds a key \"Derma\" - This is returned by <page>derma.GetControlList</page>\n* Makes a global table with the name of the control (This is technically deprecated and should not be relied upon)\n* If reloading (i.e. called this function with name of an existing panel), updates all existing instances of panels with this name. (Updates functions, calls <page>PANEL:PreAutoRefresh</page> and <page>PANEL:PostAutoRefresh</page>, etc.)",
        "name": "DefineControl",
        "parent": "derma",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "A table containing the new control's methods and properties",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/derma/derma.lua",
          "lineEnd": 127,
          "lineStart": 99
        }
      },
      {
        "arguments": [
          {
            "description": "Name of the skin",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Description of the skin",
            "name": "descriptions",
            "type": "string"
          },
          {
            "description": "Table containing skin data",
            "name": "skin",
            "type": "table"
          }
        ],
        "description": "Defines a new skin so that it is usable by Derma. The default skin can be found in `garrysmod/lua/skins/default.lua`",
        "name": "DefineSkin",
        "parent": "derma",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/derma/derma.lua",
          "lineEnd": 149,
          "lineStart": 132
        }
      },
      {
        "description": "Returns the <page>derma.Controls</page> table, a list of all derma controls registered with <page>derma.DefineControl</page>.",
        "name": "GetControlList",
        "parent": "derma",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "A listing of all available derma-based controls. See <page>derma.Controls</page> for structure and contents.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/derma/derma.lua",
          "lineEnd": 94,
          "lineStart": 90
        }
      },
      {
        "description": "Returns the default skin table, which can be changed with the hook <page>GM:ForceDermaSkin</page>",
        "name": "GetDefaultSkin",
        "parent": "derma",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Skin table",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/derma/derma.lua",
          "lineEnd": 178,
          "lineStart": 163
        }
      },
      {
        "arguments": [
          {
            "description": "Name of skin",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Returns the skin table of the skin with the supplied name",
        "name": "GetNamedSkin",
        "parent": "derma",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Skin table",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/derma/derma.lua",
          "lineEnd": 187,
          "lineStart": 183
        }
      },
      {
        "description": "Returns a copy of the table containing every Derma skin",
        "name": "GetSkinTable",
        "parent": "derma",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Table of every Derma skin",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/derma/derma.lua",
          "lineEnd": 158,
          "lineStart": 154
        }
      },
      {
        "description": "Clears all cached panels so that they reassess which skin they should be using.",
        "name": "RefreshSkins",
        "parent": "derma",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/derma/derma.lua",
          "lineEnd": 247,
          "lineStart": 243
        }
      },
      {
        "description": "Returns how many times <page>derma.RefreshSkins</page> has been called.",
        "name": "SkinChangeIndex",
        "parent": "derma",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Amount of times <page>derma.RefreshSkins</page> has been called.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/derma/derma.lua",
          "lineEnd": 238,
          "lineStart": 234
        }
      },
      {
        "arguments": [
          {
            "description": "The type of hook to run, usually `Paint`.",
            "name": "type",
            "type": "string"
          },
          {
            "description": "The name of the hook/panel to run. Example: `Button`.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The panel to call the hook for",
            "name": "panel",
            "type": "Panel"
          },
          {
            "default": "nil",
            "description": "First parameter for the panel hook. i.e. width of the panel for <page text=\"Paint\">PANEL:Paint</page> hooks.",
            "name": "vararg1",
            "type": "any"
          },
          {
            "default": "nil",
            "description": "Second parameter for the panel hook. i.e. height of the panel for <page text=\"Paint\">PANEL:Paint</page> hooks.",
            "name": "vararg2",
            "type": "any"
          }
        ],
        "description": "Checks if a matching hook function exists in the skin _(based on the concatenation of type and name args)_, Then calls it.\n\nThis function is used dynamically inside <page>Global.Derma_Hook</page>",
        "name": "SkinHook",
        "parent": "derma",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The returned variable from the skin hook",
            "type": "any"
          }
        ],
        "source": {
          "file": "lua/derma/derma.lua",
          "lineEnd": 200,
          "lineStart": 187
        }
      },
      {
        "description": "This is NOT a function, it's a variable containing all registered via <page>derma.DefineSkin</page> derma skins.",
        "name": "SkinList",
        "parent": "derma",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The list of all registered derma skins.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The identifier of the texture",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Panel to get the skin of.",
            "name": "pnl",
            "type": "Panel"
          },
          {
            "default": "nil",
            "description": "What to return if we failed to retrieve the texture",
            "name": "fallback",
            "type": "function"
          }
        ],
        "description": "Returns a function to draw a specified texture of panels skin.\n\nThese are usually generated via <page>GWEN.CreateTextureBorder</page> and similar.",
        "name": "SkinTexture",
        "parent": "derma",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "A function that is created with the <page>GWEN</page> library to draw a texture.\n\n<callback>\n<arg name=\"x\" type=\"number\">X coordinate for the box.</arg>\n<arg name=\"y\" type=\"number\">Y coordinate for the box.</arg>\n<arg name=\"w\" type=\"number\">Width of the box.</arg>\n<arg name=\"h\" type=\"number\">Height of the box.</arg>\n<arg name=\"clr\" type=\"table\" default=\"color_white\">Optional color, default is white. Uses the <page>Color</page>.</arg>\n</callback>",
            "type": "function"
          }
        ],
        "source": {
          "file": "lua/derma/derma.lua",
          "lineEnd": 217,
          "lineStart": 207
        }
      }
    ],
    "name": "derma"
  },
  {
    "description": "The drag'n'drop library, used internally by certain base panels to allow for drag'n'drop functionality, like spawnmenu's customizations.",
    "functions": [
      {
        "arguments": [
          {
            "description": "true if the mouse was released, false if we right clicked.",
            "name": "bDoDrop",
            "type": "boolean"
          },
          {
            "description": "The command value. This should be the ID of the clicked dropdown menu ( if right clicked, or nil )",
            "name": "command",
            "type": "number"
          },
          {
            "description": "The local to the panel mouse cursor X position when the click happened.",
            "name": "mx",
            "type": "number"
          },
          {
            "description": "The local to the panel  mouse cursor Y position when the click happened.",
            "name": "my",
            "type": "number"
          }
        ],
        "description": "<internal></internal>\nCalls the receiver function of hovered panel.",
        "name": "CallReceiverFunction",
        "parent": "dragndrop",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/dragdrop.lua",
          "lineEnd": 192,
          "lineStart": 175
        }
      },
      {
        "description": "Clears all the internal drag'n'drop variables.",
        "name": "Clear",
        "parent": "dragndrop",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/dragdrop.lua",
          "lineEnd": 19,
          "lineStart": 6
        }
      },
      {
        "description": "<internal></internal>Handles the drop action of drag'n'drop library.",
        "name": "Drop",
        "parent": "dragndrop",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/dragdrop.lua",
          "lineEnd": 76,
          "lineStart": 37
        }
      },
      {
        "arguments": [
          {
            "default": "nil",
            "description": "If set, the function will return only the panels with this <page>Panel:Droppable</page> name.",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Returns a table of currently dragged panels.",
        "name": "GetDroppable",
        "parent": "dragndrop",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "A table of all panels that are being currently dragged, if any.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/dragdrop.lua",
          "lineEnd": 173,
          "lineStart": 162
        }
      },
      {
        "description": "Allows you to capture the panel that was dropped into the game (dropped onto the root panel). This function is meant to be overridden.",
        "name": "HandleDroppedInGame",
        "parent": "dragndrop",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/dragdrop.lua",
          "lineEnd": 35,
          "lineStart": 29
        }
      },
      {
        "description": "<internal></internal>\nHandles the hover think. Called from <page>dragndrop.Think</page>.",
        "name": "HoverThink",
        "parent": "dragndrop",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/dragdrop.lua",
          "lineEnd": 581,
          "lineStart": 557
        }
      },
      {
        "description": "Returns whether the user is dragging something with the drag'n'drop system.",
        "name": "IsDragging",
        "parent": "dragndrop",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "True if the user is dragging something with the drag'n'drop system.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/dragdrop.lua",
          "lineEnd": 27,
          "lineStart": 21
        }
      },
      {
        "description": "<internal></internal>\nStarts the drag'n'drop.",
        "name": "StartDragging",
        "parent": "dragndrop",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/dragdrop.lua",
          "lineEnd": 111,
          "lineStart": 78
        }
      },
      {
        "description": "Stops the drag'n'drop and calls <page>dragndrop.Clear</page>.",
        "name": "StopDragging",
        "parent": "dragndrop",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/dragdrop.lua",
          "lineEnd": 129,
          "lineStart": 113
        }
      },
      {
        "description": "<internal></internal>\nHandles all the drag'n'drop processes. Calls <page>dragndrop.UpdateReceiver</page> and <page>dragndrop.HoverThink</page>.",
        "name": "Think",
        "parent": "dragndrop",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/dragdrop.lua",
          "lineEnd": 231,
          "lineStart": 194
        }
      },
      {
        "description": "<internal></internal>\nUpdates the receiver to drop the panels onto. Called from <page>dragndrop.Think</page>.",
        "name": "UpdateReceiver",
        "parent": "dragndrop",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/dragdrop.lua",
          "lineEnd": 157,
          "lineStart": 131
        }
      }
    ],
    "name": "dragndrop"
  },
  {
    "description": "The draw library's purpose is to simplify the usage of the <page>surface</page> library.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Text to be drawn.",
            "name": "text",
            "type": "string"
          },
          {
            "default": "DermaDefault",
            "description": "Name of font to draw the text in. See <page>surface.CreateFont</page> to create your own, or <page>Default Fonts</page> for a list of default fonts.",
            "name": "font",
            "type": "string"
          },
          {
            "default": "0",
            "description": "The X Coordinate.",
            "name": "x",
            "type": "number"
          },
          {
            "default": "0",
            "description": "The Y Coordinate.",
            "name": "y",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255, 255 )",
            "description": "Color to draw the text in. Uses the <page>Color</page>.",
            "name": "color",
            "type": "table"
          },
          {
            "default": "TEXT_ALIGN_LEFT",
            "description": "Where to align the text horizontally. Uses the <page>Enums/TEXT_ALIGN</page>.",
            "name": "xAlign",
            "type": "number"
          }
        ],
        "description": "Simple draw text at position, but this will expand newlines and tabs.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>\n\nSee also <page>MarkupObject</page> for limited width and markup support.",
        "name": "DrawText",
        "parent": "draw",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/modules/draw.lua",
          "lineEnd": 160,
          "lineStart": 119
        }
      },
      {
        "arguments": [
          {
            "description": "Name of the font to get the height of.",
            "name": "font",
            "type": "string"
          }
        ],
        "description": "Returns the height of the specified font in pixels. This is equivalent to the height of the character `W`. See <page>surface.GetTextSize</page>.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "GetFontHeight",
        "parent": "draw",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The font height",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/draw.lua",
          "lineEnd": 49,
          "lineStart": 33
        }
      },
      {
        "description": "Sets drawing texture to a default white texture (vgui/white) via <page>surface.SetMaterial</page>. Useful for resetting the drawing texture.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "NoTexture",
        "parent": "draw",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/modules/draw.lua",
          "lineEnd": 314,
          "lineStart": 312
        }
      },
      {
        "arguments": [
          {
            "description": "Radius of the rounded corners, works best with a multiple of 2.\n\nFor values 0 or below, <page>surface.DrawRect</page> will be used instead for performance.",
            "name": "cornerRadius",
            "type": "number"
          },
          {
            "description": "The x coordinate of the top left of the rectangle.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The y coordinate of the top left of the rectangle.",
            "name": "y",
            "type": "number"
          },
          {
            "description": "The width of the rectangle.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "The height of the rectangle.",
            "name": "height",
            "type": "number"
          },
          {
            "description": "The color to fill the rectangle with. Uses the <page>Color</page>.",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Draws a rounded rectangle.\n\n<note>This function actually draws rectangles with 'gui/cornerX' textures applied to it's rounded corners. It means that this function will fail (or will be drawn not as expected) with any vertex operations, such as model matrices like <page>cam.Start3D2D</page> (corners would be pixelated) or stencil operations. Consider using <page>surface.DrawPoly</page> or <page>mesh</page> library\n</note>\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "RoundedBox",
        "parent": "draw",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/modules/draw.lua",
          "lineEnd": 171,
          "lineStart": 162
        }
      },
      {
        "arguments": [
          {
            "description": "Radius of the rounded corners, works best with a power of 2 number.",
            "name": "cornerRadius",
            "type": "number"
          },
          {
            "description": "The x coordinate of the top left of the rectangle.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The y coordinate of the top left of the rectangle.",
            "name": "y",
            "type": "number"
          },
          {
            "description": "The width of the rectangle.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "The height of the rectangle.",
            "name": "height",
            "type": "number"
          },
          {
            "description": "The color to fill the rectangle with. Uses the <page>Color</page>.",
            "name": "color",
            "type": "table"
          },
          {
            "default": "false",
            "description": "Whether the top left corner should be rounded.",
            "name": "roundTopLeft",
            "type": "boolean"
          },
          {
            "default": "false",
            "description": "Whether the top right corner should be rounded.",
            "name": "roundTopRight",
            "type": "boolean"
          },
          {
            "default": "false",
            "description": "Whether the bottom left corner should be rounded.",
            "name": "roundBottomLeft",
            "type": "boolean"
          },
          {
            "default": "false",
            "description": "Whether the bottom right corner should be rounded.",
            "name": "roundBottomRight",
            "type": "boolean"
          }
        ],
        "description": "Draws a rounded rectangle. This function also lets you specify which corners are drawn rounded.\n\n\n<note>This function actually draws rectangles with 'gui/cornerX' textures applied to it's rounded corners. It means that this function will fail (or will be drawn not as expected) with any vertex operations, such as model matrices like <page>cam.Start3D2D</page> (corners would be pixelated) or stencil operations. Consider using <page>surface.DrawPoly</page> or <page>mesh</page> library\n</note>\n\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "RoundedBoxEx",
        "parent": "draw",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/modules/draw.lua",
          "lineEnd": 231,
          "lineStart": 173
        }
      },
      {
        "arguments": [
          {
            "description": "The text to be drawn.",
            "name": "text",
            "type": "string"
          },
          {
            "default": "DermaDefault",
            "description": "The font. See <page>surface.CreateFont</page> to create your own, or see <page>Default Fonts</page> for a list of default fonts.",
            "name": "font",
            "type": "string"
          },
          {
            "default": "0",
            "description": "The X Coordinate.",
            "name": "x",
            "type": "number"
          },
          {
            "default": "0",
            "description": "The Y Coordinate.",
            "name": "y",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255, 255 )",
            "description": "The color of the text. Uses the <page>Color</page>.",
            "name": "color",
            "type": "table"
          },
          {
            "default": "TEXT_ALIGN_LEFT",
            "description": "The alignment of the X coordinate using <page>Enums/TEXT_ALIGN</page>.",
            "name": "xAlign",
            "type": "number"
          },
          {
            "default": "TEXT_ALIGN_TOP",
            "description": "The alignment of the Y coordinate using <page>Enums/TEXT_ALIGN</page>.",
            "name": "yAlign",
            "type": "number"
          }
        ],
        "description": "Draws text on the screen.\n<note>This function does not handle newlines properly. See <page>draw.DrawText</page> for a function that does.</note>\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "SimpleText",
        "parent": "draw",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The width of the text. Same value as if you were calling <page>surface.GetTextSize</page>.",
            "type": "number"
          },
          {
            "description": "The height of the text. Same value as if you were calling <page>surface.GetTextSize</page>.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/draw.lua",
          "lineEnd": 94,
          "lineStart": 51
        }
      },
      {
        "arguments": [
          {
            "description": "The text to draw.",
            "name": "Text",
            "type": "string"
          },
          {
            "default": "DermaDefault",
            "description": "The font name to draw with. See <page>surface.CreateFont</page> to create your own, or <page text=\"here\">Default_Fonts</page> for a list of default fonts.",
            "name": "font",
            "type": "string"
          },
          {
            "default": "0",
            "description": "The X Coordinate.",
            "name": "x",
            "type": "number"
          },
          {
            "default": "0",
            "description": "The Y Coordinate.",
            "name": "y",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255, 255 )",
            "description": "The color of the text. Uses the <page>Color</page>.",
            "name": "color",
            "type": "table"
          },
          {
            "default": "TEXT_ALIGN_LEFT",
            "description": "The alignment of the X Coordinate using <page>Enums/TEXT_ALIGN</page>.",
            "name": "xAlign",
            "type": "number"
          },
          {
            "default": "TEXT_ALIGN_TOP",
            "description": "The alignment of the Y Coordinate using <page>Enums/TEXT_ALIGN</page>.",
            "name": "yAlign",
            "type": "number"
          },
          {
            "description": "Width of the outline.",
            "name": "outlinewidth",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255, 255 )",
            "description": "Color of the outline. Uses the <page>Color</page>.",
            "name": "outlinecolor",
            "type": "table"
          }
        ],
        "description": "Creates a simple line of text that is outlined.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "SimpleTextOutlined",
        "parent": "draw",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The width of the text. Same value as if you were calling <page>surface.GetTextSize</page>.",
            "type": "number"
          },
          {
            "description": "The height of the text. Same value as if you were calling <page>surface.GetTextSize</page>.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/draw.lua",
          "lineEnd": 114,
          "lineStart": 96
        }
      },
      {
        "arguments": [
          {
            "description": "The text properties. See the <page>Structures/TextData</page>",
            "name": "textdata",
            "type": "table"
          }
        ],
        "description": "Works like <page>draw.SimpleText</page> but uses a table structure instead.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "Text",
        "parent": "draw",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Width of drawn text",
            "type": "number"
          },
          {
            "description": "Height of drawn text",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/draw.lua",
          "lineEnd": 273,
          "lineStart": 269
        }
      },
      {
        "arguments": [
          {
            "description": "The text properties. See <page>Structures/TextData</page>",
            "name": "textdata",
            "type": "table"
          },
          {
            "description": "How far away the shadow appears.",
            "name": "distance",
            "type": "number"
          },
          {
            "default": "200",
            "description": "How visible the shadow is (0-255).",
            "name": "alpha",
            "type": "number"
          }
        ],
        "description": "Works like <page>draw.Text</page>, but draws the text with a shadow.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "TextShadow",
        "parent": "draw",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The width of drawn text.",
            "name": "textWidth",
            "type": "number"
          },
          {
            "description": "The height of drawn text.",
            "name": "textHeight",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/draw.lua",
          "lineEnd": 295,
          "lineStart": 279
        }
      },
      {
        "arguments": [
          {
            "description": "The texture properties. See <page>Structures/TextureData</page>.",
            "name": "texturedata",
            "type": "table"
          }
        ],
        "description": "Draws a texture with a table structure.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "TexturedQuad",
        "parent": "draw",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/modules/draw.lua",
          "lineEnd": 310,
          "lineStart": 302
        }
      },
      {
        "arguments": [
          {
            "description": "Size of border, should be multiple of 2. Ideally this will be 8 or 16.",
            "name": "bordersize",
            "type": "number"
          },
          {
            "description": "The X Coordinate.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The Y Coordinate.",
            "name": "y",
            "type": "number"
          },
          {
            "description": "Text to draw.",
            "name": "text",
            "type": "string"
          },
          {
            "description": "Font to draw in. See <page>surface.CreateFont</page> to create your own, or <page text=\"here\">Default_Fonts</page> for a list of default fonts.",
            "name": "font",
            "type": "string"
          },
          {
            "description": "The box color. Uses the <page>Color</page>.",
            "name": "boxcolor",
            "type": "table"
          },
          {
            "description": "The text color. Uses the <page>Color</page>.",
            "name": "textcolor",
            "type": "table"
          },
          {
            "default": "TEXT_ALIGN_LEFT",
            "description": "The alignment of the X coordinate using <page>Enums/TEXT_ALIGN</page>.",
            "name": "xalign",
            "type": "number"
          },
          {
            "default": "TEXT_ALIGN_TOP",
            "description": "The alignment of the Y coordinate using <page>Enums/TEXT_ALIGN</page>.",
            "name": "yalign",
            "type": "number"
          }
        ],
        "description": "Draws a rounded box with text in it.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "WordBox",
        "parent": "draw",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The width of the word box.",
            "type": "number"
          },
          {
            "description": "The height of the word box.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/draw.lua",
          "lineEnd": 263,
          "lineStart": 238
        }
      }
    ],
    "name": "draw"
  },
  {
    "description": "The drive library is for adding custom control modes to the new \"remote control\" entity piloting system in Garry's Mod 13. See <page>Entity Driving</page>.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The player",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The view, see <page>Structures/ViewData</page>",
            "name": "view",
            "type": "table{ViewData}"
          }
        ],
        "description": "<internal></internal>\n\nUsed internally to make <page>DRIVE:CalcView</page> work, called by default from `base` gamemode's <page>GM:CalcView</page> hook.",
        "name": "CalcView",
        "parent": "drive",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "true if succeeded",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/drive.lua",
          "lineEnd": 162,
          "lineStart": 154
        }
      },
      {
        "arguments": [
          {
            "description": "The user command",
            "name": "cmd",
            "type": "CUserCmd"
          }
        ],
        "description": "<internal></internal>\nClientside, the client creates the cmd (usercommand) from their input device (mouse, keyboard) and then it's sent to the server. Restrict view angles here.",
        "name": "CreateMove",
        "parent": "drive",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "true if succeeded",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/drive.lua",
          "lineEnd": 149,
          "lineStart": 141
        }
      },
      {
        "arguments": [
          {
            "description": "The player to affect",
            "name": "ply",
            "type": "Player"
          }
        ],
        "description": "<internal></internal>\nDestroys players current driving method.",
        "name": "DestroyMethod",
        "parent": "drive",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/drive.lua",
          "lineEnd": 109,
          "lineStart": 103
        }
      },
      {
        "arguments": [
          {
            "description": "The player",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The entity",
            "name": "ent",
            "type": "Entity"
          }
        ],
        "description": "Player has stopped driving the entity.",
        "name": "End",
        "parent": "drive",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/drive.lua",
          "lineEnd": 240,
          "lineStart": 214
        }
      },
      {
        "arguments": [
          {
            "description": "The player",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The move data",
            "name": "mv",
            "type": "CMoveData"
          }
        ],
        "description": "<internal></internal>\nThe move is finished. Copy mv back into the target.",
        "name": "FinishMove",
        "parent": "drive",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "true if succeeded",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/drive.lua",
          "lineEnd": 209,
          "lineStart": 196
        }
      },
      {
        "arguments": [
          {
            "description": "The player",
            "name": "ply",
            "type": "Player"
          }
        ],
        "description": "<internal></internal>\nReturns ( or creates if inexistent ) a driving method.",
        "name": "GetMethod",
        "parent": "drive",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A method object.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/drive.lua",
          "lineEnd": 101,
          "lineStart": 56
        }
      },
      {
        "arguments": [
          {
            "description": "The player",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The move data",
            "name": "mv",
            "type": "CMoveData"
          }
        ],
        "description": "<internal></internal>\nThe move is executed here.",
        "name": "Move",
        "parent": "drive",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "true if succeeded",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/drive.lua",
          "lineEnd": 191,
          "lineStart": 183
        }
      },
      {
        "arguments": [
          {
            "description": "The player to affect",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The entity to drive",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "The driving mode",
            "name": "mode",
            "type": "string"
          }
        ],
        "description": "Starts driving for the player.",
        "name": "PlayerStartDriving",
        "parent": "drive",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/drive.lua",
          "lineEnd": 48,
          "lineStart": 39
        }
      },
      {
        "arguments": [
          {
            "description": "The player to affect",
            "name": "ply",
            "type": "Player"
          }
        ],
        "description": "Stops the player from driving anything. ( For example a prop in sandbox )",
        "name": "PlayerStopDriving",
        "parent": "drive",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/drive.lua",
          "lineEnd": 54,
          "lineStart": 50
        }
      },
      {
        "arguments": [
          {
            "description": "The name of the drive mode/method.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The data required to create the drive mode/method. This includes the functions used by the drive. See <page>DRIVE_Hooks</page>.",
            "name": "data",
            "type": "table"
          },
          {
            "default": "nil",
            "description": "The name of a drive mode/method to inherit code from.",
            "name": "base",
            "type": "string"
          }
        ],
        "description": "Registers a new entity drive mode/method.",
        "name": "Register",
        "parent": "drive",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/drive.lua",
          "lineEnd": 37,
          "lineStart": 14
        }
      },
      {
        "arguments": [
          {
            "description": "The player",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The entity",
            "name": "ent",
            "type": "Entity"
          }
        ],
        "description": "Called when the player first starts driving this entity",
        "name": "Start",
        "parent": "drive",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/drive.lua",
          "lineEnd": 134,
          "lineStart": 114
        }
      },
      {
        "arguments": [
          {
            "description": "The player",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The move data",
            "name": "mv",
            "type": "CMoveData"
          },
          {
            "description": "The user command",
            "name": "cmd",
            "type": "CUserCmd"
          }
        ],
        "description": "<internal></internal>\nThe user command is received by the server and then converted into a move. This is also run clientside when in multiplayer, for prediction to work.",
        "name": "StartMove",
        "parent": "drive",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "true if succeeded",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/drive.lua",
          "lineEnd": 177,
          "lineStart": 169
        }
      }
    ],
    "name": "drive"
  },
  {
    "description": "The duplicator library allows you to specify what should be saved when someone attempts to duplicate your custom entity with the duplicator tool. It can also be used by 3rd party duplicator tools to make use of the built in system.",
    "functions": [
      {
        "arguments": [
          {
            "description": "An entity's classname to allow duplicating.",
            "name": "classname",
            "type": "string"
          }
        ],
        "description": "Allow entities with given class name to be duplicated. See <page>duplicator.Disallow</page> for the opposite effect.",
        "name": "Allow",
        "parent": "duplicator",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 335,
          "lineStart": 331
        }
      },
      {
        "arguments": [
          {
            "description": "The player whose entity this is",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The entity in question",
            "name": "ent",
            "type": "Entity"
          }
        ],
        "description": "Calls every function registered with <page>duplicator.RegisterBoneModifier</page> on each bone the ent has.",
        "name": "ApplyBoneModifiers",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 912,
          "lineStart": 885
        }
      },
      {
        "arguments": [
          {
            "description": "The player whose entity this is",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The entity in question",
            "name": "ent",
            "type": "Entity"
          }
        ],
        "description": "Calls every function registered with <page>duplicator.RegisterEntityModifier</page> on the entity.",
        "name": "ApplyEntityModifiers",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 879,
          "lineStart": 865
        }
      },
      {
        "description": "A list of all entity bone modifiers registered with <page>duplicator.RegisterBoneModifier</page>.",
        "name": "BoneModifiers",
        "parent": "duplicator",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The list of all entity bone modifiers.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The entity the modification is stored on",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "The key of the stored entity modifier",
            "name": "key",
            "type": "any"
          }
        ],
        "description": "Clears/removes the chosen entity modifier from the entity.",
        "name": "ClearEntityModifier",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 534,
          "lineStart": 527
        }
      },
      {
        "description": "A list of all <page>constraint</page>s that can be duplicated. Registered with <page>duplicator.RegisterConstraint</page>.",
        "name": "ConstraintType",
        "parent": "duplicator",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The list of all constraints that can be duplicated. Key = classname, Value = table.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The entity to duplicate. The function will automatically copy all constrained entities.",
            "name": "ent",
            "type": "Entity"
          },
          {
            "default": "{}",
            "description": "A preexisting table to add entities and constraints in from.\nUses the same table format as the table returned from this function.",
            "name": "tableToAdd",
            "type": "table"
          }
        ],
        "description": "Copies the entity, and all of its constraints and entities, then returns them in a table.",
        "name": "Copy",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "A table containing duplication info which includes the following members:\n* <page>table</page> Entities\n* <page>table</page> Constraints\n* <page>Vector</page> Mins\n* <page>Vector</page> Maxs\n\nThe values of Mins &amp; Maxs from the table are returned from <page>duplicator.WorkoutSize</page>",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 645,
          "lineStart": 615
        }
      },
      {
        "arguments": [
          {
            "description": "A table of entities to save/copy.",
            "name": "ents",
            "type": "table"
          }
        ],
        "description": "Copies the passed table of entities to save for later.",
        "name": "CopyEnts",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "A table containing duplication info which includes the following members:\n* <page>table</page> Entities\n* <page>table</page> Constraints\n* <page>Vector</page> Mins\n* <page>Vector</page> Maxs",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 659,
          "lineStart": 647
        }
      },
      {
        "arguments": [
          {
            "description": "The entity table to save",
            "name": "ent",
            "type": "Entity"
          }
        ],
        "description": "Returns a table with some entity data that can be used to create a new entity with <page>duplicator.CreateEntityFromTable</page>",
        "name": "CopyEntTable",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "See <page>Structures/EntityCopyData</page>",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 564,
          "lineStart": 558
        }
      },
      {
        "arguments": [
          {
            "description": "Saved/copied constraint table",
            "name": "constraint",
            "type": "table"
          },
          {
            "description": "The list of entities that are to be constrained",
            "name": "entityList",
            "type": "table"
          }
        ],
        "description": "<internal></internal> Creates a constraint from a saved/copied constraint table.",
        "name": "CreateConstraintFromTable",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The newly created constraint entity",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 763,
          "lineStart": 722
        }
      },
      {
        "arguments": [
          {
            "description": "The player who wants to create something",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The duplication data to build the entity with. See <page>Structures/EntityCopyData</page>",
            "name": "entTable",
            "type": "table"
          }
        ],
        "description": "\"Create an entity from a table.\"\n\n\nThis creates an entity using the data in EntTable.\n\n\nIf an entity factory has been registered for the entity's Class, it will be called.\n\n\nOtherwise, <page>duplicator.GenericDuplicatorFunction</page> will be called instead.",
        "name": "CreateEntityFromTable",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The newly created entity",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 716,
          "lineStart": 664
        }
      },
      {
        "arguments": [
          {
            "description": "An entity's classname to disallow duplicating.",
            "name": "classname",
            "type": "string"
          }
        ],
        "description": "Disallow this entity to be duplicated. Opposite of <page>duplicator.Allow</page>.\n\nBy default, all classes are disallowed to be duplicated. This function is useful for temporarily disabling duplication of certain entity classes that may have been previously allowed.",
        "name": "Disallow",
        "parent": "duplicator",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 344,
          "lineStart": 340
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to be bone manipulated",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "Table with a <page>Structures/BoneManipulationData</page> for every bone (that has manipulations applied) using the bone ID as the table index.",
            "name": "bones",
            "type": "table"
          }
        ],
        "description": "\"Restores the bone's data.\"\n\n\nLoops through Bones and calls <page>Entity:ManipulateBoneScale</page>, <page>Entity:ManipulateBoneAngles</page> and <page>Entity:ManipulateBonePosition</page> on ent with the table keys and the subtable values s, a and p respectively.",
        "name": "DoBoneManipulator",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 467,
          "lineStart": 454
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to restore the flexes on",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "The flexes to restore",
            "name": "flex",
            "type": "table"
          },
          {
            "default": "nil",
            "description": "The flex scale to apply. (Flex scale is unchanged if omitted)",
            "name": "scale",
            "type": "number"
          }
        ],
        "description": "Restores the flex data using <page>Entity:SetFlexWeight</page> and <page>Entity:SetFlexScale</page>",
        "name": "DoFlex",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 449,
          "lineStart": 436
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to be applied upon",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "The data to be applied onto the entity",
            "name": "data",
            "type": "table"
          }
        ],
        "description": "\"Applies generic every-day entity stuff for ent from table data.\"\n\n\nDepending on the values of Model, Angle, Pos, Skin, Flex, Bonemanip, ModelScale, ColGroup, Name, and BodyG (<page>table</page> of multiple values) in the data table, this calls <page>Entity:SetModel</page>, <page>Entity:SetAngles</page>, <page>Entity:SetPos</page>, <page>Entity:SetSkin</page>, <page>duplicator.DoFlex</page>, <page>duplicator.DoBoneManipulator</page>, <page>Entity:SetModelScale</page>, <page>Entity:SetCollisionGroup</page>, <page>Entity:SetName</page>, <page>Entity:SetBodygroup</page> on ent.\n\n\nIf ent has a RestoreNetworkVars function, it is called with data.DT.",
        "name": "DoGeneric",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 1020,
          "lineStart": 1016
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to be applied upon",
            "name": "ent",
            "type": "Entity"
          },
          {
            "default": "nil",
            "description": "The player who owns the entity. Unused in function as of early 2013",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The data to be applied onto the entity",
            "name": "data",
            "type": "table"
          }
        ],
        "description": "\"Applies bone data, generically.\"\n\n\nIf data contains a PhysicsObjects table, it moves, re-angles and if relevent freezes all specified bones, first converting from local coordinates to world coordinates.",
        "name": "DoGenericPhysics",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 1014,
          "lineStart": 1008
        }
      },
      {
        "description": "A list of all entity classes have a custom duplication spawn function. Registered with <page>duplicator.RegisterEntityClass</page>.\n\nIf you wish to get a specific entity class table, use <page>duplicator.FindEntityClass</page>.",
        "name": "EntityClasses",
        "parent": "duplicator",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The list of all entity classes with a custom duplication handler. Key = classname, Value = table.",
            "type": "table"
          }
        ]
      },
      {
        "description": "A list of all entity modifiers registered with <page>duplicator.RegisterEntityModifier</page>.",
        "name": "EntityModifiers",
        "parent": "duplicator",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The list of all entity modifiers.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The duplication table to process, for example from <page>duplicator.Copy</page>.\n\nThe provided table will have `RequiredAddons` key added.",
            "name": "dupe",
            "type": "table"
          }
        ],
        "description": "Checks the given duplication table and tries to figure out any addons that might be required to correctly spawn the duplication. Currently this is limited to models and material overrides saved in the duplication.",
        "name": "FigureOutRequiredAddons",
        "parent": "duplicator",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the entity class factory",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Returns the entity class factory registered with <page>duplicator.RegisterEntityClass</page>.",
        "name": "FindEntityClass",
        "parent": "duplicator",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Is compromised of the following members:\n* <page>function</page> Func - The function that creates the entity\n* <page>table</page> Args - Arguments to pass to the function",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 400,
          "lineStart": 395
        }
      },
      {
        "arguments": [
          {
            "description": "The player who wants to create something",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The duplication data to build the entity with",
            "name": "data",
            "type": "table"
          }
        ],
        "description": "\"Generic function for duplicating stuff\"\n\n\nThis is called when <page>duplicator.CreateEntityFromTable</page> can't find an entity factory to build with. It calls <page>duplicator.DoGeneric</page> and <page>duplicator.DoGenericPhysics</page> to apply standard duplicator stored things such as the model and position.",
        "name": "GenericDuplicatorFunction",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The newly created entity",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 505,
          "lineStart": 472
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to start from",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "The table the entities will be inserted into",
            "name": "entStorageTable",
            "type": "table"
          },
          {
            "description": "The table the constraints will be inserted into",
            "name": "constraintStorageTable",
            "type": "table"
          }
        ],
        "description": "<internal></internal> Fills entStorageTable with all of the entities in a group connected with constraints. Fills constraintStorageTable with all of the constrains constraining the group.",
        "name": "GetAllConstrainedEntitiesAndConstraints",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "entStorageTable",
            "type": "table"
          },
          {
            "description": "constraintStorageTable",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 969,
          "lineStart": 921
        }
      },
      {
        "arguments": [
          {
            "description": "An entity's classname",
            "name": "classname",
            "type": "string"
          }
        ],
        "description": "Returns whether the entity can be duplicated or not",
        "name": "IsAllowed",
        "parent": "duplicator",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns true if the entity can be duplicated (nil otherwise)",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 353,
          "lineStart": 349
        }
      },
      {
        "arguments": [
          {
            "description": "The player who wants to create something",
            "name": "Player",
            "type": "Player"
          },
          {
            "description": "A table of duplicator data to create the entities from",
            "name": "EntityList",
            "type": "table"
          },
          {
            "description": "A table of duplicator data to create the constraints from",
            "name": "ConstraintList",
            "type": "table"
          }
        ],
        "description": "\"Given entity list and constraint list, create all entities and return their tables\"\n\nCalls <page>duplicator.CreateEntityFromTable</page> on each sub-table of EntityList. If an entity is actually created, it calls <page>ENTITY:OnDuplicated</page> with the entity's duplicator data, then <page>duplicator.ApplyEntityModifiers</page>, <page>duplicator.ApplyBoneModifiers</page> and finally  <page>ENTITY:PostEntityPaste</page> is called.\n\nThe constraints are then created with <page>duplicator.CreateConstraintFromTable</page>.",
        "name": "Paste",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "List of created entities",
            "type": "table"
          },
          {
            "description": "List of created constraints",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 859,
          "lineStart": 769
        }
      },
      {
        "arguments": [
          {
            "description": "The type of the key doesn't appear to matter, but it is preferable to use a string.",
            "name": "key",
            "type": "any"
          },
          {
            "description": "Function called on each bone that an ent has. Called during <page>duplicator.ApplyBoneModifiers</page>.\n\n<callback>\n<arg type=\"Player\" name=\"ply\">The player that is spawning the entity.</arg>\n<arg type=\"Entity\" name=\"ent\">The entity being spawned in.</arg>\n<arg type=\"number\" name=\"boneID\"></arg>\n<arg type=\"PhysObj\" name=\"bone\"></arg>\n<arg type=\"table\" name=\"data\">What you pass to <page>duplicator.StoreBoneModifier</page>.</arg>\n</callback>",
            "name": "boneModifier",
            "type": "function"
          }
        ],
        "description": "Registers a function to be called on each of an entity's bones when <page>duplicator.ApplyBoneModifiers</page> is called.\n\n<note>This function is available to call on the client, but registered functions aren't used anywhere!</note>",
        "name": "RegisterBoneModifier",
        "parent": "duplicator",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineStart": 405
        }
      },
      {
        "arguments": [
          {
            "description": "The unique name of new constraint",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Function to be called when this constraint is created",
            "name": "callback",
            "type": "function"
          },
          {
            "description": "Arguments passed to the callback function",
            "name": "customData",
            "type": "vararg"
          }
        ],
        "description": "Register a function used for creating a duplicated constraint.",
        "name": "RegisterConstraint",
        "parent": "duplicator",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 374,
          "lineStart": 367
        }
      },
      {
        "arguments": [
          {
            "description": "The ClassName of the entity you wish to register a factory for",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The factory function you want to have called.\n\n\n<callback>\n<arg type=\"Player\" name=\"ply\">The player that is spawning the entity.</arg>\n<arg type=\"vararg\" name=\"...\">Whatever arguments you request to be passed.</arg>\n<ret type=\"Entity\" name=\"ent\">It also should return the entity created, otherwise <page>duplicator.Paste</page> result will not include it!</ret>\n</callback>",
            "name": "function",
            "type": "function"
          },
          {
            "description": "Strings of the names of arguments you want passed to function the from the <page>Structures/EntityCopyData</page>. As a special case, \"Data\" will pass the whole structure.",
            "name": "args",
            "type": "vararg"
          }
        ],
        "description": "This allows you to specify a specific function to be run when your SENT is pasted with the duplicator, instead of relying on the generic automatic functions.\n\n<note>Automatically calls <page>duplicator.Allow</page> for the entity class.</note>",
        "name": "RegisterEntityClass",
        "parent": "duplicator",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 390,
          "lineStart": 381
        }
      },
      {
        "arguments": [
          {
            "description": "An identifier for your modification. This is not limited, so be verbose. `Person's 'Unbreakable' mod` is far less likely to cause conflicts than `unbreakable`",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The function to be called for your modification.\n\n<callback>\n<arg type=\"Player\" name=\"ply\">The player that is spawning the entity.</arg>\n<arg type=\"Entity\" name=\"ent\">The entity being spawned in.</arg>\n<arg type=\"table\" name=\"data\">What you pass to <page>duplicator.StoreEntityModifier</page>.</arg>\n</callback>",
            "name": "func",
            "type": "function"
          }
        ],
        "description": "This allows you to register tweaks to entities. For instance, if you were making an \"unbreakable\" addon, you would use this to enable saving the \"unbreakable\" state of entities between duplications.\n\nThis function registers a piece of generic code that is run on all entities with this modifier. In order to have it actually run, use <page>duplicator.StoreEntityModifier</page>.\n\nThis function does nothing when run clientside.",
        "name": "RegisterEntityModifier",
        "parent": "duplicator",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineStart": 406
        }
      },
      {
        "description": "Help to remove certain map created entities before creating the saved entities\nThis is obviously so we don't get duplicate props everywhere.\nIt should be called before calling Paste.",
        "name": "RemoveMapCreatedEntities",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 1003,
          "lineStart": 993
        }
      },
      {
        "arguments": [
          {
            "description": "The angle to offset all pastes from",
            "name": "v",
            "type": "Angle"
          }
        ],
        "description": "\"When a copy is copied it will be translated according to these.\nIf you set them - make sure to set them back to 0 0 0!\"",
        "name": "SetLocalAng",
        "parent": "duplicator",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineStart": 362
        }
      },
      {
        "arguments": [
          {
            "description": "The position to offset all pastes from",
            "name": "v",
            "type": "Vector"
          }
        ],
        "description": "\"When a copy is copied it will be translated according to these.\nIf you set them - make sure to set them back to 0 0 0!\"",
        "name": "SetLocalPos",
        "parent": "duplicator",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineStart": 361
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to add bone mod data to",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "The bone ID.\nSee <page>Entity:GetPhysicsObjectNum</page>",
            "name": "boneID",
            "type": "number"
          },
          {
            "description": "The key for the bone modification",
            "name": "key",
            "type": "any"
          },
          {
            "description": "The bone modification data that is passed to the bone modification function",
            "name": "data",
            "type": "table"
          }
        ],
        "description": "Stores bone mod data for a registered bone modification function",
        "name": "StoreBoneModifier",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 553,
          "lineStart": 539
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to store modifier in",
            "name": "entity",
            "type": "Entity"
          },
          {
            "description": "Unique modifier name as defined in <page>duplicator.RegisterEntityModifier</page>",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Modifier data",
            "name": "data",
            "type": "table"
          }
        ],
        "description": "Stores an entity modifier into an entity for saving",
        "name": "StoreEntityModifier",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 522,
          "lineStart": 510
        }
      },
      {
        "arguments": [
          {
            "description": "A table of entity duplication datums.",
            "name": "Ents",
            "type": "table"
          }
        ],
        "description": "Works out the AABB size of the duplication",
        "name": "WorkoutSize",
        "parent": "duplicator",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "AABB mins vector",
            "name": "Mins",
            "type": "Vector"
          },
          {
            "description": "AABB maxs vector",
            "name": "Maxs",
            "type": "Vector"
          }
        ],
        "source": {
          "file": "lua/includes/modules/duplicator.lua",
          "lineEnd": 609,
          "lineStart": 569
        }
      }
    ],
    "name": "duplicator"
  },
  {
    "description": "The effects library allows you to manually add scripted effects.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The origin position of the effect.",
            "name": "pos",
            "type": "Vector"
          },
          {
            "description": "How long the effect will be drawing for, in seconds.",
            "name": "lifetime",
            "type": "number"
          },
          {
            "description": "Initial radius of the effect.",
            "name": "startRad",
            "type": "number"
          },
          {
            "description": "Final radius of the effect, at the end of the effect's lifetime.",
            "name": "endRad",
            "type": "number"
          },
          {
            "description": "How thick the beam should be.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "How noisy the beam should be.",
            "name": "amplitude",
            "type": "number"
          },
          {
            "description": "Beam's <page>Global.Color</page>.",
            "name": "color",
            "type": "table"
          },
          {
            "description": "Extra info, all optional. A table with the following keys: (any combination)\n* <page>number</page> speed - ?\n* <page>number</page> spread - ?\n* <page>number</page> delay - Delay in seconds after which the effect should appear.\n* <page>number</page> flags- Beam flags.\n* <page>number</page> framerate - texture framerate.\n* <page>string</page> material - The material to use instead of the default one.",
            "name": "extra",
            "type": "table"
          }
        ],
        "description": "Creates a \"beam ring point\" effect.",
        "name": "BeamRingPoint",
        "parent": "effects",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The lowest extents of the box.",
            "name": "mins",
            "type": "Vector"
          },
          {
            "description": "The highest extents of the box.",
            "name": "maxs",
            "type": "Vector"
          },
          {
            "description": "How many bubbles to spawn. There's a hard limit of 500 tempents at any time.",
            "name": "count",
            "type": "number"
          },
          {
            "description": "How high the bubbles can fly up before disappearing.",
            "name": "height",
            "type": "number"
          },
          {
            "default": "0",
            "description": "How quickly the bubbles move.",
            "name": "speed",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Delay in seconds after the function call and before the effect actually spawns.",
            "name": "delay",
            "type": "number"
          }
        ],
        "description": "Creates a bunch of bubbles inside a defined box.",
        "name": "Bubbles",
        "parent": "effects",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The start position of the effect.",
            "name": "startPos",
            "type": "Vector"
          },
          {
            "description": "The end position of the effects.",
            "name": "endPos",
            "type": "Vector"
          },
          {
            "description": "How many bubbles to spawn. There's a hard limit of 500 tempents at any time.",
            "name": "count",
            "type": "number"
          },
          {
            "description": "How high the bubbles can fly up before disappearing.",
            "name": "height",
            "type": "number"
          },
          {
            "default": "0",
            "description": "How quickly the bubbles move.",
            "name": "speed",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Delay in seconds after the function call and before the effect actually spawns.",
            "name": "delay",
            "type": "number"
          }
        ],
        "description": "Creates a bubble trail effect, the very same you get when shooting underwater.",
        "name": "BubbleTrail",
        "parent": "effects",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Effect name.",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "<internal>You are looking for <page>util.Effect</page>.</internal>Returns the table of the effect specified.",
        "name": "Create",
        "parent": "effects",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Effect table.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/effects.lua",
          "lineEnd": 71,
          "lineStart": 51
        }
      },
      {
        "description": "<internal></internal>Returns a list of all Lua-defined effects.",
        "name": "GetList",
        "parent": "effects",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The effects table.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/effects.lua",
          "lineEnd": 81,
          "lineStart": 73
        }
      },
      {
        "arguments": [
          {
            "description": "Effect table.",
            "name": "effect_table",
            "type": "table"
          },
          {
            "description": "Effect name.",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "<internal></internal>Registers a new effect.",
        "name": "Register",
        "parent": "effects",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/effects.lua",
          "lineEnd": 45,
          "lineStart": 18
        }
      }
    ],
    "name": "effects"
  },
  {
    "description": "The engine library provides functions to access various features in the game's engine, most are related to the demo and save systems.",
    "functions": [
      {
        "description": "Returns non paused <page>Global.FrameTime</page>.",
        "name": "AbsoluteFrameTime",
        "parent": "engine",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Frame time.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the name of the currently running gamemode.",
        "name": "ActiveGamemode",
        "parent": "engine",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The active gamemode's name. This is the name of the gamemode's folder.",
            "type": "string"
          }
        ]
      },
      {
        "description": "Closes the server and completely exits.\n\nTo enable this function for use on your server, add `-allowquit` to your commandline, which will make this function run `quit keep_players` when executed, this also does not forcibly disconnect players.\n\nThis is also available when running in server test mode (launch option `-systemtest`). Server test mode is used internally at Facepunch as part of the build process to make sure that the dedicated servers aren't crashing on startup.",
        "name": "CloseServer",
        "parent": "engine",
        "realms": [
          "server"
        ]
      },
      {
        "description": "Returns a list of addons the player have subscribed to on the workshop.\n\nThis list will also include \"Floating\" .gma addons that are mounted by the game, but not the folder addons.",
        "name": "GetAddons",
        "parent": "engine",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of tables containing 8 keys (downloaded, models, title, file, mounted, wsid, size, updated).",
            "type": "table"
          }
        ]
      },
      {
        "description": "When starting playing a demo, <page>engine.GetDemoPlaybackTick</page> will be reset and its old value will be added to this functions return value.",
        "name": "GetDemoPlaybackStartTick",
        "parent": "engine",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "type": "number"
          }
        ]
      },
      {
        "description": "Current tick of currently loaded demo.\n\nIf not playing a demo, it will return amount of ticks since last demo playback.",
        "name": "GetDemoPlaybackTick",
        "parent": "engine",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The amount of ticks of currently loaded demo.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns time scale of demo playback.\n\nIf not during demo playback, returns 1.",
        "name": "GetDemoPlaybackTimeScale",
        "parent": "engine",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The time scale of demo playback, value of demo_timescale console variable.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns total amount of ticks of currently loaded demo.\n\nIf not playing a demo, returns 0 or the value of last played demo.",
        "name": "GetDemoPlaybackTotalTicks",
        "parent": "engine",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Total amount of ticks of currently loaded demo.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns a table containing info for all installed gamemodes",
        "name": "GetGamemodes",
        "parent": "engine",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "gamemodes",
            "type": "table"
          }
        ]
      },
      {
        "description": "Returns an array of tables corresponding to all games from which Garry's Mod supports mounting content.",
        "name": "GetGames",
        "parent": "engine",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of tables containing all mountable games",
            "type": "table"
          }
        ]
      },
      {
        "description": "<deprecated>Used internally for in-game menus, may be merged in the future into <page>engine.GetAddons</page>.</deprecated>\n\nReturns the UGC (demos, saves and dupes) the player have subscribed to on the workshop.",
        "name": "GetUserContent",
        "parent": "engine",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Returns a table with 5 keys (title, type, tags, wsid, timeadded)",
            "type": "table"
          }
        ]
      },
      {
        "description": "Returns true if we're currently playing a demo.\n\nYou will notice that there's no server-side version of this. That's because there is no server when playing a demo. Demos are both recorded and played back purely clientside.",
        "name": "IsPlayingDemo",
        "parent": "engine",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whether the game is currently playing a demo or not.",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Returns true if the game is currently recording a demo file (.dem) using gm_demo",
        "name": "IsRecordingDemo",
        "parent": "engine",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whether the game is currently recording a demo or not.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The lightstyle to edit. 0 to 63. If you want to edit map lighting, you want to set this to 0.",
            "name": "lightstyle",
            "type": "number"
          },
          {
            "description": "The pattern to change the lightstyle to. `a` is the darkest, `z` is the brightest. You can use stuff like \"abcxyz\" to make flashing patterns. The normal brightness for a map is `m`. Values over `z` are allowed, `~` for instance.",
            "name": "pattern",
            "type": "string"
          }
        ],
        "description": "This is a direct binding to the function `engine-&gt;LightStyle`. This function allows you to change the default light style of the map - so you can make lighting lighter or darker. You’ll need to call <page>render.RedownloadAllLightmaps</page> clientside to refresh the lightmaps to this new color.\n\n<bug issue=\"3626\">Calling this function with arguments 0 and \"a\" will cause dynamic lights such as those produced by the Light tool to stop working.</bug>",
        "name": "LightStyle",
        "parent": "engine",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Name of the file. e.g, `engine.OpenDupe(\"dupes/8b809dd7a1a9a375e75be01cdc12e61f.dupe\")`",
            "name": "dupeName",
            "type": "string"
          }
        ],
        "description": "Loads a duplication from the local filesystem.",
        "name": "OpenDupe",
        "parent": "engine",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "A table with a simple field:\n* <page>string</page> `data` - Compressed dupe data. Use util.JSONToTable to make it into a format useable by the duplicator tool.",
            "type": "table"
          }
        ]
      },
      {
        "description": "Returns an estimate of the server's performance. Equivalent to calling <page>Global.FrameTime</page> from the server, according to source code.",
        "name": "ServerFrameTime",
        "parent": "engine",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Frame time.",
            "type": "number"
          },
          {
            "description": "Server framerate [standard deviation](https://en.wikipedia.org/wiki/Standard_deviation).",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The depot id of the game to mount.",
            "name": "depotID",
            "type": "string"
          },
          {
            "description": "The mount state, true to mount, false to unmount",
            "name": "doMount",
            "type": "boolean"
          }
        ],
        "description": "Sets the mounting options for mountable content.",
        "name": "SetMounted",
        "parent": "engine",
        "realms": [
          "menu"
        ]
      },
      {
        "description": "Returns the number of ticks since the game server started.",
        "name": "TickCount",
        "parent": "engine",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Number of ticks since the game server started.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the time interval between each game tick in seconds.\n\nThis function is useful for making animations (usually serverside, such as doors rotating) and similar things to be independent of the tickrate in hooks that run at the tick rate, such as <page>GM:Tick</page>.\n\nClientside you'd want to use <page>Global.FrameTime</page> for this purpose in hooks that run every frame.\n\nThe default tickrate is `66.6666`, aka `16` milliseconds interval between each game tick.\nThe tickrate can be adjusted via the `-tickrate` [command line option](Command_Line_Parameters).",
        "name": "TickInterval",
        "parent": "engine",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Number of seconds between each gametick.",
            "type": "number"
          }
        ]
      },
      {
        "description": "<internal></internal>\n\nReturns video recording settings set by <page>video.Record</page>. Used by Demo-To-Video feature.",
        "name": "VideoSettings",
        "parent": "engine",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The video recording settings, see <page>Structures/VideoData</page>.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Dupe table, encoded by <page>util.TableToJSON</page> and compressed by <page>util.Compress</page>",
            "name": "dupe",
            "type": "string"
          },
          {
            "description": "The dupe icon, created by <page>render.Capture</page>",
            "name": "jpeg",
            "type": "string"
          }
        ],
        "description": "<internal>Do not use.</internal>\n\nSaves a duplication as a file.",
        "name": "WriteDupe",
        "parent": "engine",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Data generated by <page>gmsave.SaveMap</page>.",
            "name": "saveData",
            "type": "string"
          },
          {
            "description": "Name the save will have.",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "<internal>Do not use.</internal>\nStores savedata into the game (can be loaded using the LoadGame menu)",
        "name": "WriteSave",
        "parent": "engine",
        "realms": [
          "client"
        ]
      }
    ],
    "name": "engine"
  },
  {
    "description": "The ents library provides functions for creating and finding entities in the game.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The classname of the entity to create.",
            "name": "class",
            "type": "string"
          }
        ],
        "description": "Creates an entity. This function will fail and return `NULL` if the networked-edict limit is hit (around **8176**), or the provided entity class doesn't exist.\n\n<warning>Do not use before <page>GM:InitPostEntity</page> has been called, otherwise the server will crash!\nIf you need to perform entity creation when the game starts, create a hook for <page>GM:InitPostEntity</page> and do it there.</warning>",
        "name": "Create",
        "parent": "ents",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The created entity, or `NULL` if failed.",
            "type": "Entity"
          }
        ]
      },
      {
        "arguments": [
          {
            "default": "models/error.mdl",
            "description": "The model for the entity to be created.",
            "name": "model",
            "type": "string"
          }
        ],
        "description": "Creates a clientside only prop with optional physics. See also <page>Global.ClientsideModel</page> if physics is not needed.\n\n\nFor physics to work you **must** use the _model_ argument, a simple `SetModel` call will not be enough.\n<bug issue=\"861\">Parented clientside prop will become detached if the parent entity leaves the PVS. **A workaround is available on its github page.**</bug>",
        "name": "CreateClientProp",
        "parent": "ents",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Created entity (`C_PhysPropClientside`).",
            "type": "Entity"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The first entity to attach the rope to.",
            "name": "ent1",
            "type": "Entity"
          },
          {
            "description": "The attachment ID on the first entity to attach the rope to.",
            "name": "ent1attach",
            "type": "number"
          },
          {
            "description": "The second entity to attach the rope to.",
            "name": "ent2",
            "type": "Entity"
          },
          {
            "description": "The attachment ID on the second entity to attach the rope to.",
            "name": "ent2attach",
            "type": "Entity"
          },
          {
            "default": "nil",
            "description": "Extra optional settings for the rope. Possible values are:\n* slack - How much extra rope to add to the length (default: 0)\n* width - Width of the rope (default: 2)\n* segments - How many segments the rope should have (default: 8)\n* material - Which material should the rope have (default: `\"cable/cable\"`)\n* nogravity - If set, the rope should have no gravity. (default: 0)",
            "name": "extra",
            "type": "table"
          }
        ],
        "description": "Creates a clientside only rope, similar to those used by the DOG model from Half-Life 2.",
        "name": "CreateClientRope",
        "parent": "ents",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Created entity (`C_RopeKeyframe`).",
            "type": "Entity"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The class name of the entity to create.",
            "name": "class",
            "type": "string"
          }
        ],
        "description": "Creates a clientside only scripted entity. The scripted entity must be of \"anim\" type.",
        "name": "CreateClientside",
        "parent": "ents",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Created entity.",
            "type": "Entity"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The start position of the ray",
            "name": "start",
            "type": "Vector"
          },
          {
            "description": "The end position of the ray",
            "name": "end",
            "type": "Vector"
          },
          {
            "default": "nil",
            "description": "The mins corner of the ray",
            "name": "mins",
            "type": "Vector"
          },
          {
            "default": "nil",
            "description": "The maxs corner of the ray",
            "name": "maxs",
            "type": "Vector"
          }
        ],
        "description": "Returns a table of all entities along the ray. The ray does not stop on collisions, meaning it will go through walls/entities.\n\nThis function is capable of detecting clientside only entities by default.\n\nThis internally uses [spatial partitioning](https://en.wikipedia.org/wiki/Space_partitioning) to avoid looping through all entities.",
        "name": "FindAlongRay",
        "parent": "ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Table of the found entities. There's a limit of 1024 entities.",
            "type": "table<Entity>"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The class of the entities to find, supports wildcards.\n\nAsterisks (`*`) are the only wildcard supported.",
            "name": "class",
            "type": "string"
          }
        ],
        "description": "Gets all entities with the given class, supports wildcards.\n\nThis function returns a sequential table, meaning it should be looped with <page>Global.ipairs</page> instead of <page>Global.pairs</page> for efficiency reasons.\n\nThis works internally by iterating over <page>ents.GetAll</page>. `ents.FindByClass` is always faster than <page>ents.GetAll</page> or <page>ents.Iterator</page>.",
        "name": "FindByClass",
        "parent": "ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table containing all found entities",
            "type": "table<Entity>"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The class of entities to search for",
            "name": "class",
            "type": "string"
          },
          {
            "description": "Parent of entities that are being searched for",
            "name": "parent",
            "type": "Entity"
          }
        ],
        "description": "Finds all entities that are of given class and are children of given entity. This works internally by iterating over <page>ents.FindByClass</page>.",
        "name": "FindByClassAndParent",
        "parent": "ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of found entities or nil if none are found",
            "type": "table<Entity>"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/ents.lua",
          "lineEnd": 26,
          "lineStart": 2
        }
      },
      {
        "arguments": [
          {
            "description": "The model of the entities to find.",
            "name": "model",
            "type": "string"
          }
        ],
        "description": "Gets all entities with the given model, supports wildcards.\n\nThis works internally by iterating over <page>ents.GetAll</page>.",
        "name": "FindByModel",
        "parent": "ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of all found entities.",
            "type": "table<Entity>"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The targetname to look for",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Gets all entities with the given hammer targetname. This works internally by iterating over <page>ents.GetAll</page>.\n\nDoesn't do anything on client.",
        "name": "FindByName",
        "parent": "ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of all found entities",
            "type": "table<Entity>"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The box minimum coordinates.",
            "name": "boxMins",
            "type": "Vector"
          },
          {
            "description": "The box maximum coordinates.",
            "name": "boxMaxs",
            "type": "Vector"
          }
        ],
        "description": "Returns all entities within the specified box.\n\nThis internally uses a Spatial Partition to avoid looping through all entities, so it is more efficient than using <page>ents.GetAll</page> for this purpose.\n\n<note>Clientside entities will not be returned by this function. Serverside only entities without networked edicts (entity indexes), such as point logic or Constraints are not returned either</note>",
        "name": "FindInBox",
        "parent": "ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of all found entities.",
            "type": "table<Entity>"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The tip of the cone.",
            "name": "origin",
            "type": "Vector"
          },
          {
            "description": "Direction of the cone.",
            "name": "normal",
            "type": "Vector"
          },
          {
            "description": "The range of the cone/box around the origin.\n<note> The function internally adds 1 to this argument before using it. </note>",
            "name": "range",
            "type": "number"
          },
          {
            "description": "The <page text=\"cosine\">math.cos</page> of the angle between the center of the cone to its edges, which is half the overall angle of the cone.\n\n1 makes a 0° cone, 0.707 makes approximately 90°, 0 makes 180°, and so on.",
            "name": "angle_cos",
            "type": "number"
          }
        ],
        "description": "Finds and returns all entities within the specified cone. Only entities whose <page>Entity:WorldSpaceCenter</page> is within the cone are considered to be in it.\n\nThe \"cone\" is actually a conical \"slice\" of an axis-aligned box (see: <page>ents.FindInBox</page>). The image to the right shows approximately how this function would look in 2D. Due to this, the entity may be farther than the specified range!\n\n<img src=\"ents.FindInCone.png\" alt=\"2D_visualization_of_the_actual_shape_of_the_cone,_click_to_enlarge\">\n\n<note>Clientside entities will not be returned by this function.</note>",
        "name": "FindInCone",
        "parent": "ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of all found <page>Entity</page>s.",
            "type": "table<Entity>"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "<page>Entity</page> or <page>Vector</page> to find entities within the PVS of. If a player is given, this function will use the player's view entity.",
            "name": "viewPoint",
            "type": "Entity|Vector"
          }
        ],
        "description": "Finds all entities that lie within a [PVS (Potential Visibility Set)](https://developer.valvesoftware.com/wiki/PVS \"PVS - Valve Developer Community\").\n\n<note>The function won't take in to account <page>Global.AddOriginToPVS</page> and the like.</note>",
        "name": "FindInPVS",
        "parent": "ents",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The found <page>Entity</page>s.",
            "type": "table<Entity>"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Center of the sphere.",
            "name": "origin",
            "type": "Vector"
          },
          {
            "description": "Radius of the sphere.",
            "name": "radius",
            "type": "number"
          }
        ],
        "description": "Gets all entities within the specified sphere.\n\nThis function internally calls <page>util.IsBoxIntersectingSphere</page> for every entity on the map based on their Orientated Bounding Box.",
        "name": "FindInSphere",
        "parent": "ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of all found <page>Entity</page>s.",
            "type": "table<Entity>"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Name of the target entity.",
            "name": "target",
            "type": "string"
          },
          {
            "description": "Activator of the event.",
            "name": "activator",
            "type": "Entity"
          },
          {
            "description": "Caller of the event.",
            "name": "caller",
            "type": "Entity"
          },
          {
            "description": "Use type. See the <page>Enums/USE</page>.",
            "name": "usetype",
            "type": "number{USE}"
          },
          {
            "description": "This value is passed to <page>ENTITY:Use</page>, but isn't used by any default entities in the engine.",
            "name": "value",
            "type": "number"
          }
        ],
        "description": "Fires a use event.",
        "name": "FireTargets",
        "parent": "ents",
        "realms": [
          "server"
        ]
      },
      {
        "description": "Returns a table of all existing entities.\n\nConsider using <page>ents.Iterator</page> instead for better performance.\n\nThis function returns a sequential table, meaning it should be looped with <page>Global.ipairs</page> instead of <page>Global.pairs</page> for efficiency reasons.",
        "name": "GetAll",
        "parent": "ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Table of all existing <page>Entity</page>s.",
            "type": "table<Entity>"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The index of the entity.",
            "name": "entIdx",
            "type": "number"
          }
        ],
        "description": "Returns an entity by its index. Same as <page>Global.Entity</page>.",
        "name": "GetByIndex",
        "parent": "ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The entity if it exists, or `NULL` if it doesn't.",
            "type": "Entity"
          }
        ]
      },
      {
        "arguments": [
          {
            "default": "false",
            "description": "Include entities with the FL_KILLME flag. This will skip an internal loop, and the function will be more efficient as a byproduct.",
            "name": "IncludeKillMe",
            "type": "boolean"
          }
        ],
        "description": "Gives you the amount of currently existing entities.\n\nSimilar to **#**<page>ents.GetAll</page>() but with better performance since the entity table doesn't have to be generated.\nIf <page>ents.GetAll</page> is already being called for iteration, than using the **#** operator on the table will be faster than calling this function since it is JITted.",
        "name": "GetCount",
        "parent": "ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Number of entities",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the amount of networked entities, which is limited to 8192. <page>ents.Create</page> will fail somewhere between 8064 and 8176 - this can vary based on the amount of existing temp ents.",
        "name": "GetEdictCount",
        "parent": "ents",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "Number of networked entities",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Entity's creation id.",
            "name": "id",
            "type": "number"
          }
        ],
        "description": "Returns entity that has given <page>Entity:MapCreationID</page>.",
        "name": "GetMapCreatedEntity",
        "parent": "ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Found entity, `nil` otherwise.",
            "type": "Entity|nil"
          }
        ]
      },
      {
        "description": "Returns a [Stateless Iterator](https://www.lua.org/pil/7.3.html) for all entities.\nIntended for use in [Generic For Loops](https://www.lua.org/pil/4.3.5.html).\nSee <page>player.Iterator</page> for a similar function for all players.\n\nInternally, this function uses cached values that exist entirely within lua, as opposed to <page>ents.GetAll</page>, which is a C++ function.\nBecause switching from lua to C++ (and vice versa) incurs a performance cost, this function will be somewhat more efficient than <page>ents.GetAll</page>.\n<note>The <page>GM:OnEntityCreated</page> and <page>GM:EntityRemoved</page> hooks are used internally to invalidate this function's cache. Using this function inside those hooks is not guaranteed to use an up-to-date cache because hooks are currently executed in an arbitrary order.</note>\n<warning>An error being thrown inside the <page>GM:OnEntityCreated</page> or <page>GM:EntityRemoved</page> hooks is likely to break this function. Make it certain that no addons are causing any errors in those hooks.</warning>",
        "name": "Iterator",
        "parent": "ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The Iterator Function from <page text=\"ipairs\">Global.ipairs</page>",
            "type": "function"
          },
          {
            "description": "Table of all existing <page text=\"Entities\">Entity</page>.  This is a cached copy of <page>ents.GetAll</page>\n<warning>This table is intended to be read-only.\n\nModifying the return table will affect all subsequent calls to this function until the cache is refreshed, replacing all of your ents.GetAll usages may come with unintended side effects because of this.</warning>",
            "type": "table<Entity>"
          },
          {
            "description": "The starting index for the table of players.\nThis is always `0` and is returned for the benefit of [Generic For Loops](https://www.lua.org/pil/4.3.5.html)",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/ents.lua",
          "lineEnd": null,
          "lineStart": 27
        }
      }
    ],
    "name": "ents"
  },
  {
    "description": "The file library provides functions for finding, reading and writing to files. <br>\nThe following path values are most commonly used:\n* `LUA` searches the lua files (in /lua/, in your gamemodes, in all the addons).\n* `GAME` searches all the mounted content (main folder, addons, mounted games etc).\n* `MOD` searches only the garrysmod folder.\n* `DATA` searches in the data folder.\n\nSee <page>File Search Paths</page> for the descriptive list of path values.\nFor the full list of path values, type `path` in the console.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The file's name.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The content which should be appended to the file.",
            "name": "content",
            "type": "string"
          }
        ],
        "description": "Appends a file relative to the `data` folder.",
        "name": "Append",
        "parent": "file",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "If the operation was successful",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/file.lua",
          "lineEnd": 39,
          "lineStart": 31
        }
      },
      {
        "arguments": [
          {
            "description": "The name of the file.",
            "name": "fileName",
            "type": "string"
          },
          {
            "description": "The path to look for the files and directories in. See <page text=\"this list\">File_Search_Paths</page> for a list of valid paths.",
            "name": "gamePath",
            "type": "string"
          },
          {
            "description": "A callback function that will be called when the file read operation finishes.\n\n<callback>\n<arg type=\"string\" name=\"fileName\">The `fileName` argument above.</arg>\n<arg type=\"string\" name=\"gamePath\">The `gamePath` argument above.</arg>\n<arg type=\"number\" name=\"status\">The status of the operation. The list can be found in <page>Enums/FSASYNC</page>.</arg>\n<arg type=\"string\" name=\"data\">The entirety of the data of the file.</arg>\n</callback>",
            "name": "callback",
            "type": "function"
          },
          {
            "default": "false",
            "description": "If `true` the file will be read synchronously.",
            "name": "sync",
            "type": "boolean"
          }
        ],
        "description": "Returns the content of a file asynchronously.\n\nAll limitations of <page>file.Read</page> also apply.",
        "name": "AsyncRead",
        "parent": "file",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "<page text=\"FSASYNC_OK\">Enums/FSASYNC</page> on success, <page text=\"FSASYNC_ERR_\">Enums/FSASYNC</page> on failure.",
            "name": "status",
            "type": "number{FSASYNC}"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The directory's name.",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Creates a directory that is relative to the `data` folder.",
        "name": "CreateDir",
        "parent": "file",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The file name.",
            "name": "name",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "The path to look for the files and directories in. See <page text=\"this list\">File_Search_Paths</page> for a list of valid paths.\n<note>This is only available in the menu state.</note>",
            "name": "path",
            "type": "string"
          }
        ],
        "description": "Deletes a file or `empty` folder that is relative to the **data** folder. You can't remove any files outside of **data** folder.\n<note>You are able to delete **any** file in the Menu state.</note>",
        "name": "Delete",
        "parent": "file",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "name": "success",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The file or directory's name. ( You must include the file extension for files, for example \"data.txt\" )",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The path to look for the files and directories in. See <page text=\"this list\">File_Search_Paths</page> for a list of valid paths.",
            "name": "gamePath",
            "type": "string"
          }
        ],
        "description": "Returns a boolean of whether the file or directory exists or not.\nIf you want to check for a directory, <page>file.IsDir</page> will be faster since it won't check for files.",
        "name": "Exists",
        "parent": "file",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns `true` if the file exists and `false` if it does not.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The wildcard to search for. `models/*.mdl` will list **.mdl** files in the `models/` folder.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The path to look for the files and directories in. See <page text=\"this list\">File_Search_Paths</page> for a list of valid paths.",
            "name": "path",
            "type": "string"
          },
          {
            "default": "nameasc",
            "description": "The sorting to be used, **optional**.\n\n* `nameasc` sort the files ascending by name.\n* `namedesc` sort the files descending by name.\n* `dateasc` sort the files ascending by date.\n* `datedesc` sort the files descending by date.",
            "name": "sorting",
            "type": "string"
          }
        ],
        "description": "Returns a list of files and directories inside a single folder.\n<warning>It seems that paths with capital letters (e.g. lua/MyFolder/*) don't work as expected on Linux.</warning>",
        "name": "Find",
        "parent": "file",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of found files, or `nil` if the path is invalid",
            "type": "table"
          },
          {
            "description": "A table of found directories, or `nil` if the path is invalid",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The file or directory's name.",
            "name": "fileName",
            "type": "string"
          },
          {
            "description": "The path to look for the files and directories in. See <page text=\"this list\">File_Search_Paths</page> for a list of valid paths.",
            "name": "gamePath",
            "type": "string"
          }
        ],
        "description": "Returns whether the given file is a directory or not.",
        "name": "IsDir",
        "parent": "file",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "`true` if the given path is a directory or `false` if it's a file.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The files name. See <page>file.Write</page> for details on filename restrictions when writing to files.",
            "name": "fileName",
            "type": "string"
          },
          {
            "description": "The mode to open the file in. Possible values are:\n* **r** - read mode\n* **w** - write mode\n* **a** - append mode\n* **rb** - binary read mode\n* **wb** - binary write mode\n* **ab** - binary append mode",
            "name": "fileMode",
            "type": "string"
          },
          {
            "description": "The path to look for the files and directories in. See <page text=\"this list\">File_Search_Paths</page> for a list of valid paths.",
            "name": "gamePath",
            "type": "string"
          }
        ],
        "description": "Attempts to open a file with the given mode.",
        "name": "Open",
        "parent": "file",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The opened file object, or `nil` if it failed to open due to it not existing or being used by another process.",
            "name": "File",
            "type": "file_class"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the file.",
            "name": "fileName",
            "type": "string"
          },
          {
            "default": "GAME or DATA",
            "description": "The path to look for the files and directories in. If this argument is set to `true` then the path will be `GAME`, otherwise if the argument is `false` or `nil` then the path will be `DATA`. See <page text=\"this list\">File_Search_Paths</page> for a list of valid paths.",
            "name": "gamePath",
            "type": "string"
          }
        ],
        "description": "Returns the content of a file.\n\n<warning>Beware of casing -- some filesystems are case-sensitive. SRCDS on Linux seems to force file/directory creation to lowercase, but will not modify read operations.</warning>",
        "name": "Read",
        "parent": "file",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The data from the file as a string, or `nil` if the file isn't found.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/file.lua",
          "lineEnd": 19,
          "lineStart": 4
        }
      },
      {
        "arguments": [
          {
            "description": "The original file or folder name. See <page>file.Write</page> for details on filename restrictions when writing to files.\n\n**This argument will be forced lowercase.**",
            "name": "orignalFileName",
            "type": "string"
          },
          {
            "description": "The target file or folder name. See <page>file.Write</page> for details on filename restrictions when writing to files.\n\n**This argument will be forced lowercase.**",
            "name": "targetFileName",
            "type": "string"
          }
        ],
        "description": "Attempts to rename a file with the given name to another given name.\n\nThis function is constrained to the `data/` folder.",
        "name": "Rename",
        "parent": "file",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "`true` on success, `false` otherwise.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The file's name.",
            "name": "fileName",
            "type": "string"
          },
          {
            "description": "The path to look for the files and directories in. See <page text=\"this list\">File_Search_Paths</page> for a list of valid paths.",
            "name": "gamePath",
            "type": "string"
          }
        ],
        "description": "Returns the file's size in bytes.",
        "name": "Size",
        "parent": "file",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The file size in bytes, or `-1` if the file is not found.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The **file** or **folder** path.",
            "name": "path",
            "type": "string"
          },
          {
            "description": "The path to look for the files and directories in. See <page text=\"this list\">File_Search_Paths</page> for a list of valid paths.",
            "name": "gamePath",
            "type": "string"
          }
        ],
        "description": "Returns when the file or folder was last modified in Unix time.",
        "name": "Time",
        "parent": "file",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Seconds passed since Unix epoch, or `0` if the file is not found.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the file being written into. The path is relative to the `data/` folder.\n\nThis argument will be forced lowercase.\n\nThe filename **must** end with one of the following:\n* .txt\n* .dat\n* .json\n* .xml\n* .csv\n* .dem\n* .vcd\n* .gma\n* .mdl\n* .phy\n* .vvd\n* .vtx\n* .ani\n* .vtf\n* .vmt\n* .png\n* .jpg\n* .jpeg\n* .mp3\n* .wav\n* .ogg\n\nRestricted symbols are: `\":`, and multiple consecutive spaces",
            "name": "fileName",
            "type": "string"
          },
          {
            "description": "The content that will be written into the file.",
            "name": "content",
            "type": "string"
          }
        ],
        "description": "Writes the given string to a file. Erases all previous data in the file. To add data without deleting previous data, use <page>file.Append</page>.",
        "name": "Write",
        "parent": "file",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "If the operation was successful",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/file.lua",
          "lineEnd": 29,
          "lineStart": 21
        }
      }
    ],
    "name": "file"
  },
  {
    "description": "The frame blending library.",
    "functions": [
      {
        "description": "<internal></internal>\n\nAdds a frame to the blend. Calls <page>frame_blend.CompleteFrame</page> once enough frames have passed since last <page>frame_blend.CompleteFrame</page> call.",
        "name": "AddFrame",
        "parent": "frame_blend",
        "realms": [
          "client"
        ]
      },
      {
        "description": "<internal></internal>\n\nBlends the frame(s).",
        "name": "BlendFrame",
        "parent": "frame_blend",
        "realms": [
          "client"
        ]
      },
      {
        "description": "<internal></internal>\n\nRenders the frame onto internal render target.",
        "name": "CompleteFrame",
        "parent": "frame_blend",
        "realms": [
          "client"
        ]
      },
      {
        "description": "<internal></internal>\n\nActually draws the frame blend effect.",
        "name": "DrawPreview",
        "parent": "frame_blend",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Returns whether frame blend post processing effect is enabled or not.",
        "name": "IsActive",
        "parent": "frame_blend",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Is frame blend enabled or not",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "<internal></internal>\n\n\nReturns whether the current frame is the last frame?",
        "name": "IsLastFrame",
        "parent": "frame_blend",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Whether the current frame is the last frame?",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "<internal></internal>\n\nReturns amount of frames needed to render?",
        "name": "RenderableFrames",
        "parent": "frame_blend",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Amount of frames needed to render?",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns whether we should skip frame or not",
        "name": "ShouldSkipFrame",
        "parent": "frame_blend",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Should the frame be skipped or not",
            "type": "boolean"
          }
        ]
      }
    ],
    "name": "frame_blend"
  },
  {
    "description": "The game library provides functions to access various features in the game's engine, most of it's functions are related to controlling the map.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The attributes of the ammo. See the <page>Structures/AmmoData</page>.",
            "name": "ammoData",
            "type": "table{AmmoData}"
          }
        ],
        "description": "Adds a new ammo type to the game.\n\nYou can find a list of default ammo types [here](https://wiki.facepunch.com/gmod/Default_Ammo_Types).\n\n<warning>This function **must** be called on both the client and server in <page>GM:Initialize</page> or you will have unexpected problems.</warning>\n<note>There is a limit of 256 ammo types, including the default ones.</note>",
        "name": "AddAmmoType",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/game.lua",
          "lineEnd": 40,
          "lineStart": 2
        }
      },
      {
        "arguments": [
          {
            "description": "The name of the decal.",
            "name": "decalName",
            "type": "string"
          },
          {
            "description": "The material to be used for the decal. May also be a list of material names, in which case a random material from that list will be chosen every time the decal is placed.",
            "name": "materialName",
            "type": "string"
          }
        ],
        "description": "Registers a new decal.\n\n<warning>There's a rather low limit of around 256 for decal materials that may be registered and they are not cleared on map load.</warning>",
        "name": "AddDecal",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The path of the file to add. Must be `(file).pcf`.",
            "name": "particleFileName",
            "type": "string"
          }
        ],
        "description": "Loads a particle file. Individual particle systems will still need to be precached with <page>Global.PrecacheParticleSystem</page>.\n\n<note>You will still need to call this function clientside regardless if you create the particle effects serverside.</note>",
        "name": "AddParticles",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "description": "<internal>Consider using <page>game.GetAmmoTypes</page> and <page>game.GetAmmoData</page> instead.</internal>\nCalled by the engine to retrieve the ammo types.",
        "name": "BuildAmmoTypes",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "All ammo types registered via <page>game.AddAmmoType</page>, sorted by its name value.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/game.lua",
          "lineEnd": 54,
          "lineStart": 46
        }
      },
      {
        "arguments": [
          {
            "default": "false",
            "description": "If set to `true`, don't run this functions on all clients.",
            "name": "dontSendToClients",
            "type": "boolean"
          },
          {
            "default": "{}",
            "description": "Entity classes not to reset during cleanup.",
            "name": "extraFilters",
            "type": "table"
          },
          {
            "default": "nil",
            "description": "If set, delays the map cleanup until the end of a server tick, allowing bypassing the entity limit on maps with large amounts of them. Otherwise the entities will not be cleaned up until the end of the server tick.\n\nThe callback function will be called after the map cleanup has been performed.",
            "name": "callback",
            "type": "function"
          }
        ],
        "description": "Removes most entities, and then respawns entities created by the map, as if the map was just loaded.\n\nThere are certain exclusions, such as players or weapons held by players, soundscapes and others.\n<page text=\"EFL_KEEP_ON_RECREATE_ENTITIES\">enums/EFL</page> can be set on entities to preserve them through a map cleanup.\n\nOn the client it will remove decals, sounds, gibs, dead NPCs, and entities created via <page>ents.CreateClientProp</page>. This function is ran on all clients from server automatically, when it is called on the server.\n\nThis function calls <page>GM:PreCleanupMap</page> before cleaning up the map and <page>GM:PostCleanupMap</page> after cleaning up the map.\n\nBeware of calling this function in hooks that may be called on map clean up (such as <page>ENTITY:StartTouch</page>) to avoid infinite loops.\n\n<bug issue=\"2874\">Calling this destroys all BASS streams.</bug>\n<bug issue=\"3637\">This can crash when removing `_firesmoke` entities. **You can use the example below to workaround this issue.**</bug>\n<bug issue=\"6105\">The EFL_KEEP_ON_RECREATE_ENTITIES flag doesn't prevent an entity from being recreated, which means flagged entities will be duplicated since they are both kept and recreated.</bug>",
        "name": "CleanUpMap",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "String containing the command and arguments to be ran.",
            "name": "stringCommand",
            "type": "string"
          }
        ],
        "description": "Runs a console command.\nMake sure to add a newline (\"\\n\") at the end of the command.\n\n<warning>If you use data that were received from a client, you should avoid using this function because newline and semicolon (at least) allow the client to run arbitrary commands!\n\nFor safety, you are urged to prefer using <page>Global.RunConsoleCommand</page> in this case.</warning>",
        "name": "ConsoleCommand",
        "parent": "game",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Ammo ID to retrieve the damage type of. Starts from 1.",
            "name": "id",
            "type": "number"
          }
        ],
        "description": "Returns the damage type of given ammo type.",
        "name": "GetAmmoDamageType",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "See <page>Enums/DMG</page>",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "ID of the ammo type to look up the data for",
            "name": "id",
            "type": "number"
          }
        ],
        "description": "Returns the <page>Structures/AmmoData</page> for given ID.",
        "name": "GetAmmoData",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The <page>Structures/AmmoData</page> containing all ammo data",
            "type": "table{AmmoData}"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Ammo ID to retrieve the force of. Starts from 1.",
            "name": "id",
            "type": "number"
          }
        ],
        "description": "Returns the ammo bullet force that is applied when an entity is hit by a bullet of given ammo type.",
        "name": "GetAmmoForce",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Name of the ammo type to look up ID of",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Returns the ammo type ID for given ammo type name.\n\nSee <page>game.GetAmmoName</page> for reverse.",
        "name": "GetAmmoID",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The ammo type ID of given ammo type name, or -1 if not found",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Ammo type ID",
            "name": "id",
            "type": "number"
          }
        ],
        "description": "Returns the real maximum amount of ammo of given ammo ID, regardless of the setting of `gmod_maxammo` convar.",
        "name": "GetAmmoMax",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The maximum amount of reserve ammo a player can hold of this ammo type.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Ammo ID to retrieve the name of. Starts from 1.",
            "name": "id",
            "type": "number"
          }
        ],
        "description": "Returns the ammo name for given ammo type ID.\n\nSee <page>game.GetAmmoID</page> for reverse.",
        "name": "GetAmmoName",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The name of given ammo type ID or nil if ammo type ID is invalid.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Ammo ID to retrieve the damage info of. Starts from 1.",
            "name": "id",
            "type": "number"
          }
        ],
        "description": "Returns the damage given ammo type should do to NPCs.",
        "name": "GetAmmoNPCDamage",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Ammo ID to retrieve the damage info of. Starts from 1.",
            "name": "id",
            "type": "number"
          }
        ],
        "description": "Returns the damage given ammo type should do to players.",
        "name": "GetAmmoPlayerDamage",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns a list of all ammo types currently registered.",
        "name": "GetAmmoTypes",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table containing all ammo types. The keys are ammo IDs, the values are the names associated with those IDs.",
            "type": "table<number,string>"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the Global State to set.\n\nIf the Global State by that name does not exist, it will be created.\n\nSee <page>Global States</page> for a list of default global states.",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Returns the counter of a Global State.\n\nSee <page>Global States</page> for more information.",
        "name": "GetGlobalCounter",
        "parent": "game",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The value of the given Global State, 0 if the global state doesn't exist.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the Global State to retrieve the state of.\n\nIf the Global State by that name does not exist, **GLOBAL_DEAD** will be returned.\n\nSee <page>Global States</page> for a list of default global states.",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Returns whether a Global State is off, active or dead ( inactive )\n\nSee <page>Global States</page> for more information.",
        "name": "GetGlobalState",
        "parent": "game",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The state of the Global State. See <page>Enums/GLOBAL</page>",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the public IP address and port of the current server. This will return the IP/port that you are connecting through when ran clientside.\n<note>Returns \"loopback\" in singleplayer.</note>\n\n<bug issue=\"3001\">Returns \"0.0.0.0:`port`\" on the server when called too early, including in <page>GM:Initialize</page> and <page>GM:InitPostEntity</page>. This bug seems to only happen the first time a server is launched, and will return the correct value after switching maps.</bug>",
        "name": "GetIPAddress",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The IP address and port in the format \"x.x.x.x:x\"",
            "type": "string"
          }
        ]
      },
      {
        "description": "Returns the name of the current map, without a file extension.\nOn the menu state, returns \"menu\".\n<warning>In Multiplayer this does not return the current map in the CLIENT realm before <page>GM:Initialize</page>.</warning>",
        "name": "GetMap",
        "parent": "game",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The name of the current map, without a file extension.",
            "type": "string"
          }
        ]
      },
      {
        "description": "Returns the next map that would be loaded according to the file that is set by the mapcyclefile convar.",
        "name": "GetMapNext",
        "parent": "game",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "nextMap or nil if called too early",
            "type": "string"
          }
        ]
      },
      {
        "description": "Returns the revision (Not to be confused with [VBSP Version](https://developer.valvesoftware.com/wiki/Source_BSP_File_Format#Versions)) of the current map.",
        "name": "GetMapVersion",
        "parent": "game",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "Revision of the currently loaded map.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the difficulty level of the game.\n\n**TIP:** You can use this function in your scripted NPCs or Nextbots to make them stronger, however, it is a good idea to lock powerful attacks behind the highest difficulty instead of just increasing the health.\n\n<note>Internally this is tied to the gamerules entity, so you'll have to wait until <page>GM:InitPostEntity</page> is called to return the skill level</note>",
        "name": "GetSkillLevel",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The difficulty level, Easy (1), Normal (2), Hard (3).",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the time scale set with <page>game.SetTimeScale</page>.\n\nIf you want to get the value of `host_timescale` use\n```lua\nlocal timescale = GetConVar( \"host_timescale\" ):GetFloat()\n```",
        "name": "GetTimeScale",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The time scale",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the worldspawn entity.",
        "name": "GetWorld",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The world",
            "type": "Entity"
          }
        ]
      },
      {
        "description": "Returns true if the server is a dedicated server, false if it is a listen server or a singleplayer game.",
        "name": "IsDedicated",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Is the server dedicated or not.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "UserID or SteamID of the player to kick. Uses SteamID32 eg STEAM_0:0:00000000",
            "name": "id",
            "type": "string"
          },
          {
            "default": "No reason given",
            "description": "Reason to display to the player. This can span across multiple lines.\n\n<warning>This will be shortened to ~512 chars, though this includes the command itself and the player index so will realistically be more around ~498. It is recommended to avoid going near the limit to avoid truncation.</warning>",
            "name": "reason",
            "type": "string"
          }
        ],
        "description": "Kicks a player from the server. This can be ran before the player has spawned.",
        "name": "KickID",
        "parent": "game",
        "realms": [
          "server"
        ]
      },
      {
        "description": "Loads the next map according to the `nextlevel` convar, or from the current `mapcyclefile` set by the respective convar.",
        "name": "LoadNextMap",
        "parent": "game",
        "realms": [
          "server"
        ]
      },
      {
        "description": "Returns the map load type of the current map.\n\nAfter changing the map with the console command `changelevel`, \"newgame\" is returned. With `changelevel2` (single player only), \"transition\" is returned.",
        "name": "MapLoadType",
        "parent": "game",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The load type. Possible values are: \"newgame\", \"loadgame\", \"transition\", \"background\".",
            "type": "string"
          }
        ]
      },
      {
        "description": "Returns the maximum amount of players (including bots) that the server can have.",
        "name": "MaxPlayers",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The maximum amount of players",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Location of the GMA file to mount, retrieved from <page>steamworks.DownloadUGC</page> or relative to the `garrysmod/` directory (ignores mounting). This file does not have to end with the .gma extension, but will be interpreted as a GMA.",
            "name": "path",
            "type": "string"
          }
        ],
        "description": "Mounts a GMA addon from the disk.\nCan be used with <page>steamworks.DownloadUGC</page>\n\n<note>Any error models currently loaded that the mounted addon provides will be reloaded.\n\n\nAny error materials currently loaded that the mounted addon provides will NOT be reloaded. That means that this cannot be used to fix missing map materials, as the map materials are loaded before you are able to call this.</note>",
        "name": "MountGMA",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "success",
            "type": "boolean"
          },
          {
            "description": "If successful, a table of files that have been mounted",
            "type": "table"
          }
        ]
      },
      {
        "description": "Removes all the clientside ragdolls. On server, it will remove all `prop_ragdolls` that have the `SF_RAGDOLLPROP_USE_LRU_RETIREMENT` (4096) spawnflag.",
        "name": "RemoveRagdolls",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the Global State to set.\n\nIf the Global State by that name does not exist, it will be created.\n\nSee <page>Global States</page> for a list of default global states.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The value to set for that Global State.",
            "name": "count",
            "type": "number"
          }
        ],
        "description": "Sets the counter of a Global State.\n\nSee <page>Global States</page> for more information.",
        "name": "SetGlobalCounter",
        "parent": "game",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the Global State to set.\n\nIf the Global State by that name does not exist, it will be created.\n\nSee <page>Global States</page> for a list of default global states.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The state of the Global State. See <page>Enums/GLOBAL</page>",
            "name": "state",
            "type": "number"
          }
        ],
        "description": "Sets whether a Global State is off, active or dead ( inactive )\n\nSee <page>Global States</page> for more information.",
        "name": "SetGlobalState",
        "parent": "game",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The difficulty level, Easy( 1 ), Normal( 2 ), Hard( 3 ).",
            "name": "level",
            "type": "number"
          }
        ],
        "description": "Sets the difficulty level of the game, can be retrieved with <page>game.GetSkillLevel</page>.\n\nThis will automatically change whenever the \"skill\" convar is modified serverside.",
        "name": "SetSkillLevel",
        "parent": "game",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The new timescale, minimum value is 0.001 and maximum is 5.",
            "name": "timeScale",
            "type": "number"
          }
        ],
        "description": "Sets the time scale of the game.\n\nThis function is supposed to remove the need of using the host_timescale convar, which is cheat protected.\n\nTo slow down or speed up the movement of a specific player, use <page>Player:SetLaggedMovementValue</page> instead.\n\n<note>\nLike host_timescale, this method does not affect sounds, if you wish to change that, look into <page>GM:EntityEmitSound</page>.\n</note>\n\n<note>\nThe true timescale will be `host_timescale` multiplied by <page>game.GetTimeScale</page>\n</note>",
        "name": "SetTimeScale",
        "parent": "game",
        "realms": [
          "server"
        ]
      },
      {
        "description": "Returns whether the current session is a single player game.",
        "name": "SinglePlayer",
        "parent": "game",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "isSinglePlayer",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Returns the name of the entity that should be used as player start position.\n\nThis is not the same thing as spawn points (See <page>GM:PlayerSelectSpawn</page> for that), this is used to properly transit the player between maps, and therefore will only be set after a level change via `trigger_changelevel` entity in singleplayer.",
        "name": "StartSpot",
        "parent": "game",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The name of the entity that should be used as start position.",
            "type": "string"
          }
        ]
      }
    ],
    "name": "game"
  },
  {
    "description": "Used to interface with the built-in game events system.\n\n<note>\nAll Serverside gameevents are networked and called clientside. It could happen that a gameevent is called twice because of this like <page text=\"OnRequestFullUpdate\">gameevent/OnRequestFullUpdate</page>.\n</note>\n\nThe following is a list of all available game events.\n<pagelist category=\"gameevent\"></pagelist>",
    "functions": [
      {
        "arguments": [
          {
            "description": "The event to listen to. List of valid events (with examples) can be found [here](gameevent).",
            "name": "eventName",
            "type": "string"
          }
        ],
        "description": "Adds a [game event](gameevent) listener, creating a new hook using the <page>hook</page> library, which can be listened to via <page>hook.Add</page> with the given `eventName` as event.\n<note>\nAll gameevents are called in the **Menu State**, but if you want to use them you need to use some DLL(like [this](https://github.com/RaphaelIT7/gmod-gameevent) one) or you need to create your own.\n</note>",
        "name": "Listen",
        "parent": "gameevent",
        "realms": [
          "client",
          "server"
        ]
      }
    ],
    "name": "gameevent"
  },
  {
    "description": "The gamemode library provides functions relating to the gamemode system in Garry's Mod. This entire library also passes through the C -&gt; Lua bridge.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The name of the hook to call.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The arguments",
            "name": "args",
            "type": "vararg"
          }
        ],
        "description": "Called by the engine to call a hook within the loaded gamemode.\n\nThe supplied event 'name' must be defined in the active gamemode. Otherwise, nothing will happen - not even hooks added with <page>hook.Add</page> will be called.\n\nThis is similar to <page>hook.Run</page> and <page>hook.Call</page>, except the hook library will call hooks created with hook.Add even if there is no corresponding gamemode function.",
        "name": "Call",
        "parent": "gamemode",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The result of the hook function - can be up to 6 values. Returns false if the gamemode function doesn't exist (i.e. nothing happened), but remember - a hook can also return false.",
            "type": "any"
          }
        ],
        "source": {
          "file": "lua/includes/modules/gamemode.lua",
          "lineEnd": 83,
          "lineStart": 74
        }
      },
      {
        "arguments": [
          {
            "description": "The name of the gamemode you want to get",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "<internal></internal> This returns the internally stored gamemode table.",
        "name": "Get",
        "parent": "gamemode",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The gamemode's table",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/gamemode.lua",
          "lineEnd": 68,
          "lineStart": 66
        }
      },
      {
        "arguments": [
          {
            "description": "Your GM table",
            "name": "gm",
            "type": "table"
          },
          {
            "description": "Name of your gamemode, lowercase, no spaces.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The gamemode name that your gamemode is derived from",
            "name": "derived",
            "type": "string"
          }
        ],
        "description": "<internal></internal>Called by the engine when a gamemode is being loaded.",
        "name": "Register",
        "parent": "gamemode",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/gamemode.lua",
          "lineEnd": 60,
          "lineStart": 20
        }
      }
    ],
    "name": "gamemode"
  },
  {
    "description": "Similar purpose to the <page>game</page> and <page>engine</page>, allows access to various features of the game's engine.",
    "functions": [
      {
        "description": "Returns <page>GAMEMODE</page>.",
        "name": "GetGamemode",
        "parent": "gmod",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "GAMEMODE",
            "type": "table{GM}"
          }
        ]
      }
    ],
    "name": "gmod"
  },
  {
    "description": "The gmsave library provides functions relating to the singleplayer save system in Garry's Mod.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The JSON encoded string containing all the map data.",
            "name": "mapData",
            "type": "string"
          },
          {
            "default": "NULL",
            "description": "The player to load positions for.",
            "name": "ply",
            "type": "Player"
          },
          {
            "default": "nil",
            "description": "A function to be called after all the entities have been placed.",
            "name": "callback",
            "type": "function"
          }
        ],
        "description": "Loads a saved map.",
        "name": "LoadMap",
        "parent": "gmsave",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/gmsave.lua",
          "lineEnd": 78,
          "lineStart": 11
        }
      },
      {
        "arguments": [
          {
            "description": "The player to \"load\" values for",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "A table containing Origin and Angle keys for position and angles to set.",
            "name": "data",
            "type": "table"
          }
        ],
        "description": "Sets player position and angles from supplied table",
        "name": "PlayerLoad",
        "parent": "gmsave",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/gmsave/player.lua",
          "lineEnd": 22,
          "lineStart": 14
        }
      },
      {
        "arguments": [
          {
            "description": "The player to \"save\"",
            "name": "ply",
            "type": "Player"
          }
        ],
        "description": "Returns a table containing player position and angles. Used by <page>gmsave.SaveMap</page>.",
        "name": "PlayerSave",
        "parent": "gmsave",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "A table containing player position ( Origin ) and angles ( Angle )",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/gmsave/player.lua",
          "lineEnd": 12,
          "lineStart": 2
        }
      },
      {
        "arguments": [
          {
            "description": "The player, whose position should be saved for loading the save",
            "name": "ply",
            "type": "Player"
          }
        ],
        "description": "Saves the map",
        "name": "SaveMap",
        "parent": "gmsave",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The encoded to JSON string containing save data",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/gmsave.lua",
          "lineEnd": 108,
          "lineStart": 80
        }
      },
      {
        "arguments": [
          {
            "description": "The entity",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "A table containing classname key with entities classname.",
            "name": "t",
            "type": "table"
          }
        ],
        "description": "Returns if we should save this entity in a duplication or a map save or not.",
        "name": "ShouldSaveEntity",
        "parent": "gmsave",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "Should save entity or not",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/gmsave/entity_filters.lua",
          "lineEnd": 79,
          "lineStart": 49
        }
      }
    ],
    "name": "gmsave"
  },
  {
    "description": "The gui library is similar to the <page>input</page> but features functions that are more focused on the mouse's interaction with GUI panels.",
    "functions": [
      {
        "description": "Opens the game menu overlay.",
        "name": "ActivateGameUI",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The caption to emit. See [Closed Captions](https://developer.valvesoftware.com/wiki/Closed_Captions) for more info.\n\nNote the ability to add special commands to captions, such as `<sfx>` to mark the caption as a sound effect caption, which would be hidden if `cc_subtitles` is set to 1. (To only show dialogue subtitles)</sfx>",
            "name": "captionStream",
            "type": "string"
          },
          {
            "description": "How long the caption should stay for",
            "name": "duration",
            "type": "number"
          },
          {
            "default": "false",
            "description": "Is this caption coming from the player?\n\nThis is used to give different colors to the caption to differentiate, for example, whether the SMG is fired by the player or an NPC.",
            "name": "fromPlayer",
            "type": "boolean"
          }
        ],
        "description": "Pushes text to the closed caption box.\n<warning>The function will not work, if the console command variable `closecaption` is set to 0.</warning>",
        "name": "AddCaption",
        "parent": "gui",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Whether the cursor should be enabled or not. (true = enable, false = disable)",
            "name": "enabled",
            "type": "boolean"
          }
        ],
        "description": "Enables the mouse cursor without restricting player movement, like using Sandbox's context menu. See <page>vgui.CursorVisible</page> for a function to see if the cursor is visible or not.\n\n<note>\nSome <page>CUserCmd</page> functions will return incorrect values when this function is active because [the user input is getting overtaken by the vgui system](https://github.com/Facepunch/garrysmod-issues/issues/982#issuecomment-505671531).\n</note>",
        "name": "EnableScreenClicker",
        "parent": "gui",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Hides the game menu overlay.\n\n<deprecated>Will be disabled in a future patch. Use <page>GM:OnPauseMenuShow</page> instead.</deprecated>",
        "name": "HideGameUI",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The movement delta on the x axis.",
            "name": "deltaX",
            "type": "number"
          },
          {
            "description": "The movement delta on the y axis.",
            "name": "deltaY",
            "type": "number"
          }
        ],
        "description": "Simulates a mouse move with the given deltas.",
        "name": "InternalCursorMoved",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The key, see <page>Enums/KEY</page>.",
            "name": "key",
            "type": "number"
          }
        ],
        "description": "Simulates a key press for the given key.",
        "name": "InternalKeyCodePressed",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The key, see <page>Enums/KEY</page>.",
            "name": "key",
            "type": "number"
          }
        ],
        "description": "Simulates a key release for the given key.",
        "name": "InternalKeyCodeReleased",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The key, see <page>Enums/KEY</page>.",
            "name": "key",
            "type": "number"
          }
        ],
        "description": "Simulates a key type typing to the specified key.",
        "name": "InternalKeyCodeTyped",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "ASCII code of symbol, see [this chart](https://files.facepunch.com/wiki/files/ab571/8dc389806d65b98.gif).",
            "name": "code",
            "type": "number"
          }
        ],
        "description": "Simulates an ASCII symbol writing.\nUse to write text in the chat or in VGUI.\nDoesn't work while the main menu is open!",
        "name": "InternalKeyTyped",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The key, see <page>Enums/MOUSE</page>.",
            "name": "key",
            "type": "number"
          }
        ],
        "description": "Simulates a double mouse key press for the given mouse key.",
        "name": "InternalMouseDoublePressed",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The key, see <page>Enums/MOUSE</page>.",
            "name": "key",
            "type": "number"
          }
        ],
        "description": "Simulates a mouse key press for the given mouse key.",
        "name": "InternalMousePressed",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The key, see <page>Enums/MOUSE</page>.",
            "name": "key",
            "type": "number"
          }
        ],
        "description": "Simulates a mouse key release for the given mouse key.",
        "name": "InternalMouseReleased",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The amount of scrolling to simulate.",
            "name": "delta",
            "type": "number"
          }
        ],
        "description": "Simulates a mouse wheel scroll with the given delta.",
        "name": "InternalMouseWheeled",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "description": "Returns whether the console is visible or not.",
        "name": "IsConsoleVisible",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whether the console is visible or not.",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Returns whether the game menu overlay ( main menu ) is open or not.",
        "name": "IsGameUIVisible",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whether the game menu overlay ( main menu ) is open or not",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "<deprecated>Use <page>input.GetCursorPos</page> instead.</deprecated>\n\nReturns the cursor's position on the screen, or 0, 0 if cursor is not visible.",
        "name": "MousePos",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "mouseX",
            "type": "number"
          },
          {
            "description": "mouseY",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns x component of the mouse position.",
        "name": "MouseX",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "mouseX",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns y component of the mouse position.",
        "name": "MouseY",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "mouseY",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "URL to open, it has to start with either `http://` or `https://`.",
            "name": "url",
            "type": "string"
          }
        ],
        "description": "Opens specified URL in the steam overlay browser.\n\n<note>When called clientside, user will be asked for confirmation before the website will open.</note>",
        "name": "OpenURL",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "X coordinate on the screen.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "Y coordinate on the screen.",
            "name": "y",
            "type": "number"
          }
        ],
        "description": "Converts the specified screen position to a **direction** vector local to the player's view. A related function is <page>Vector:ToScreen</page>, which translates a 3D position to a screen coordinate.\n\n<page>util.AimVector</page> is a more generic version of this, using a custom view instead of the player's current view.",
        "name": "ScreenToVector",
        "parent": "gui",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Direction",
            "type": "Vector"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The X coordinate to move the cursor to.",
            "name": "mouseX",
            "type": "number"
          },
          {
            "description": "The Y coordinate to move the cursor to.",
            "name": "mouseY",
            "type": "number"
          }
        ],
        "description": "<deprecated>Use <page>input.SetCursorPos</page> instead.</deprecated>\nSets the cursor's position on the screen, relative to the topleft corner of the window",
        "name": "SetMousePos",
        "parent": "gui",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "description": "Shows console in the game UI.",
        "name": "ShowConsole",
        "parent": "gui",
        "realms": [
          "menu"
        ]
      }
    ],
    "name": "gui"
  },
  {
    "description": "GWEN is a system that allows you to load a spritesheet and generate a skin out of it.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The X coordinate on the texture.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The Y coordinate on the texture.",
            "name": "y",
            "type": "number"
          },
          {
            "description": "Width of the area on texture.",
            "name": "w",
            "type": "number"
          },
          {
            "description": "Height of the area on texture.",
            "name": "h",
            "type": "number"
          },
          {
            "description": "Left width of border.",
            "name": "left",
            "type": "number"
          },
          {
            "description": "Top width of border.",
            "name": "top",
            "type": "number"
          },
          {
            "description": "Right width of border.",
            "name": "right",
            "type": "number"
          },
          {
            "description": "Bottom width of border.",
            "name": "bottom",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "If set, given material will be used over the SKIN's default material, which is `SKIN.GwenTexture`.",
            "name": "material",
            "type": "IMaterial"
          }
        ],
        "description": "This is a utility function that generates a specialized drawing function to render scalable textured borders. This is done with [9-slice scaling](https://en.wikipedia.org/wiki/9-slice_scaling). This is used in derma skins to create a bordered rectangle drawing function from an image.\n\nThe texture is taken from `SKIN.GwenTexture` when the `material` argument is not supplied.",
        "name": "CreateTextureBorder",
        "parent": "GWEN",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The drawing function.\n<callback>\n<arg name=\"x\" type=\"number\">X coordinate for the box.</arg>\n<arg name=\"y\" type=\"number\">Y coordinate for the box.</arg>\n<arg name=\"w\" type=\"number\">Width of the box.</arg>\n<arg name=\"h\" type=\"number\">Height of the box.</arg>\n<arg name=\"clr\" type=\"table\" default=\"color_white\">Optional color, default is white. Uses the <page>Color</page>.</arg>\n</callback>",
            "name": "drawFunc",
            "type": "function"
          }
        ],
        "source": {
          "file": "lua/derma/derma_gwen.lua",
          "lineEnd": 56,
          "lineStart": 6
        }
      },
      {
        "arguments": [
          {
            "description": "The X coordinate on the texture",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The Y coordinate on the texture",
            "name": "y",
            "type": "number"
          },
          {
            "description": "Width of the area on texture",
            "name": "w",
            "type": "number"
          },
          {
            "description": "Height of the area on texture",
            "name": "h",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "If set, given material will be used over the SKIN's default material, which is `SKIN.GwenTexture`.",
            "name": "material",
            "type": "IMaterial"
          }
        ],
        "description": "Used in derma skins to create a fixed scale rectangle drawing function from an image. it will be drawn in the center of the box.\n\nThe texture is taken from `SKIN.GwenTexture` when the `material` is not supplied.",
        "name": "CreateTextureCentered",
        "parent": "GWEN",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The drawing function.\n\n<callback>\n<arg name=\"x\" type=\"number\">X coordinate for the box.</arg>\n<arg name=\"y\" type=\"number\">Y coordinate for the box.</arg>\n<arg name=\"w\" type=\"number\">Width of the box.</arg>\n<arg name=\"h\" type=\"number\">Height of the box.</arg>\n<arg name=\"clr\" type=\"table\" default=\"color_white\">Optional color, default is white. Uses the <page>Color</page>.</arg>\n</callback>",
            "type": "function"
          }
        ],
        "source": {
          "file": "lua/derma/derma_gwen.lua",
          "lineEnd": 119,
          "lineStart": 87
        }
      },
      {
        "arguments": [
          {
            "description": "The X coordinate on the texture",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The Y coordinate on the texture",
            "name": "y",
            "type": "number"
          },
          {
            "description": "Width of the area on texture",
            "name": "w",
            "type": "number"
          },
          {
            "description": "Height of the area on texture",
            "name": "h",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "If set, given material will be used over the SKIN's default material, which is `SKIN.GwenTexture`.",
            "name": "material",
            "type": "IMaterial"
          }
        ],
        "description": "Helper function that returns a specialized drawing function for rendering a texture that scales freely to fit the given area.\n\n\n\nThe texture is taken from `SKIN.GwenTexture` when the `material` is not supplied.",
        "name": "CreateTextureNormal",
        "parent": "GWEN",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The drawing function.\n\n<callback>\n<arg name=\"x\" type=\"number\">X coordinate for the box.</arg>\n<arg name=\"y\" type=\"number\">Y coordinate for the box.</arg>\n<arg name=\"w\" type=\"number\">Width of the box.</arg>\n<arg name=\"h\" type=\"number\">Height of the box.</arg>\n<arg name=\"clr\" type=\"table\" default=\"color_white\">Optional color, default is white. Uses the <page>Color</page>.</arg>\n</callback>",
            "type": "function"
          }
        ],
        "source": {
          "file": "lua/derma/derma_gwen.lua",
          "lineEnd": 85,
          "lineStart": 58
        }
      },
      {
        "arguments": [
          {
            "description": "X position of the pixel to get the color from.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "Y position of the pixel to get the color from.",
            "name": "y",
            "type": "number"
          }
        ],
        "description": "Retrieves the color from a materials texture at the provided UV coordinates",
        "name": "TextureColor",
        "parent": "GWEN",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The color of the point on the skin as a <page>Color</page>.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/derma/derma_gwen.lua",
          "lineEnd": 127,
          "lineStart": 121
        }
      }
    ],
    "name": "GWEN"
  },
  {
    "description": "The halo library is used to draw glowing outlines around entities, an example of this can be seen by picking up props with the physgun in Garry's Mod 13.",
    "functions": [
      {
        "arguments": [
          {
            "description": "A table of entities to add the halo effect to.",
            "name": "entities",
            "type": "table"
          },
          {
            "description": "The desired color of the halo. See <page>Color</page>.",
            "name": "color",
            "type": "table"
          },
          {
            "default": "2",
            "description": "The strength of the halo's blur on the x axis.",
            "name": "blurX",
            "type": "number"
          },
          {
            "default": "2",
            "description": "The strength of the halo's blur on the y axis.",
            "name": "blurY",
            "type": "number"
          },
          {
            "default": "1",
            "description": "The number of times the halo should be drawn per frame. **Increasing this may hinder player FPS**.",
            "name": "passes",
            "type": "number"
          },
          {
            "default": "true",
            "description": "Sets the render mode of the halo to additive.",
            "name": "additive",
            "type": "boolean"
          },
          {
            "default": "false",
            "description": "Renders the halo through anything when set to `true`.",
            "name": "ignoreZ",
            "type": "boolean"
          }
        ],
        "description": "Applies a <page>halo</page> glow effect to one or multiple entities.\n<warning>Using this function outside of the <page>GM:PreDrawHalos</page> hook can cause instability or crashes.</warning>\n<note>The ignoreZ parameter will cause the halos to draw over the player's viewmodel. You can work around this using <page>render.DepthRange</page> in the <page>GM:PreDrawViewModel</page>, <page>GM:PostDrawViewModel</page>, <page>GM:PreDrawPlayerHands</page> and <page>GM:PostDrawPlayerHands</page> hooks.</note>",
        "name": "Add",
        "parent": "halo",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/halo.lua",
          "lineEnd": 33,
          "lineStart": 13
        }
      },
      {
        "arguments": [
          {
            "description": "Table with info about the halo to draw.",
            "name": "entry",
            "type": "table"
          }
        ],
        "description": "<internal></internal>Renders a halo according to the specified table, only used internally, called from a <page>GM:PostDrawEffects</page> hook added by the halo library.",
        "name": "Render",
        "parent": "halo",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/halo.lua",
          "lineEnd": 145,
          "lineStart": 39
        }
      },
      {
        "description": "Returns the entity the halo library is currently rendering the halo for.\n\nThe main purpose of this function is to be used in <page>ENTITY:Draw</page> in order not to draw certain parts of the entity when the halo is being rendered, so there's no halo around unwanted entity parts, such as lasers, 3D2D displays, etc.",
        "name": "RenderedEntity",
        "parent": "halo",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "If set, the currently rendered entity by the halo library.",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/halo.lua",
          "lineEnd": 37,
          "lineStart": 35
        }
      }
    ],
    "name": "halo"
  },
  {
    "description": "The hammer library.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Command to send including arguments\n\nAll commands are in the format \"command var1 var2 etc\"\n\nAll commands that pick an entity with x y z , must use the exact position including decimals. i.e. -354.4523 123.4\n\n# List of commands\n| Command       | Description   |\n| ------------- | ------------- |\n| \"session_begin mapName mapVersion\" | Starts a hammer edit, locking the editor. mapName is the current map without path or suffix, mapVersion is the current version in the .vmf file |\n| \"session_end\" | Ends a hammer edit, unlocking the editor. |\n| \"map_check_version mapName mapVersion\" | This only works after session_begin, so you'd know the right version already and this only returns ok, this function is apparently useless. |\n| \"entity_create entityClass x y z\" | Creates an entity of entityClass at position x y z |\n| \"entity_delete entityClass x y z\" | Deletes an entity of entityClass at position x y z |\n| \"entity_set_keyvalue entityClass x y z \"key\" \"value\"\" | Set's the KeyValue pair of an entity of entityClass at x y z. The Key name and Value String must be in quotes. |\n| \"entity_rotate_incremental entityClass x y z incX incY incZ\" | Rotates an entity of entityClass at x y z by incX incY incZ |\n| \"node_create nodeClass nodeID x y z\" | Creates an AI node of nodeClass with nodeID at x y z you should keep nodeID unique or you will have issues |\n| \"node_delete nodeID\" | Deletes node(s) with nodeID, this will delete multiple nodes if they have the same nodeID |\n| \"nodelink_create startNodeID endNodeID\" | Creates a link between AI nodes startNodeID and endNodeID |\n| \"nodelink_delete startNodeID endNodeID\" | Removes a link between AI nodes startNodeID and endNodeID |",
            "name": "cmd",
            "type": "string"
          }
        ],
        "description": "Sends command to Hammer, if Hammer is running with the current map loaded.",
        "name": "SendCommand",
        "parent": "hammer",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns \"ok\" if command succeeded otherwise returns \"badcommand\"\n\n**All changes only happen in hammer, there is *NO* in game representation/feedback**",
            "type": "string"
          }
        ]
      }
    ],
    "name": "hammer"
  },
  {
    "description": "The hook library allows you to add hooks called by the game engine, allowing multiple scripts to modify game function.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The event to hook on to. This can be any <page text=\"GM\">GM_Hooks</page> hook, gameevent after using <page>gameevent.Listen</page>, or custom hook run with <page>hook.Call</page> or <page>hook.Run</page>.",
            "name": "eventName",
            "type": "string"
          },
          {
            "description": "The unique identifier, usually a string. This can be used elsewhere in the code to replace or remove the hook. The identifier **should** be unique so that you do not accidentally override some other mods hook, unless that's what you are trying to do.\n\nThe identifier can be either a <page>string</page>, or a <page>table</page>/object with an IsValid function defined such as an <page>Entity</page> or <page>Panel</page>. <page>number</page>s and <page>boolean</page>s, for example, are not allowed.\n\nIf the identifier is a table/object, it will be inserted in front of the other arguments in the callback and the hook will be called as long as it's valid. However, if IsValid( identifier ) returns false when **any** eventName hook is called, the hook will be removed.",
            "name": "identifier",
            "type": "any"
          },
          {
            "description": "The function to be called, arguments given to it depend on the identifier used.\n<warning>\nReturning any value besides nil from the hook's function will stop other hooks of the same event down the loop from being executed. Only return a value when absolutely necessary and when you know what you are doing.\n\nIt will also prevent the associated `GM:*` hook from being called on the gamemode.\n\nIt WILL break other addons.\n</warning>",
            "name": "func",
            "type": "function"
          }
        ],
        "description": "Registers a function (or \"callback\") with the <page>Hook</page> system so that it will be called automatically whenever a specific event (or \"hook\") occurs.",
        "name": "Add",
        "parent": "hook",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/hook.lua",
          "lineEnd": 42,
          "lineStart": 23
        }
      },
      {
        "arguments": [
          {
            "description": "The event to call hooks for.",
            "name": "eventName",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "If the gamemode is specified, the gamemode hook within will be called, otherwise not.",
            "name": "gamemodeTable",
            "type": "table"
          },
          {
            "default": "nil",
            "description": "The arguments to be passed to the hooks.",
            "name": "args",
            "type": "vararg"
          }
        ],
        "description": "Calls all hooks associated with the given event until one returns something other than `nil`, and then returns that data.\n\nIn almost all cases, you should use <page>hook.Run</page> instead - it calls hook.Call internally but supplies the gamemode table by itself, making your code neater.",
        "name": "Call",
        "parent": "hook",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Return data from called hooks. Limited to **6** return values.",
            "type": "vararg"
          }
        ],
        "source": {
          "file": "lua/includes/modules/hook.lua",
          "lineEnd": 137,
          "lineStart": 74
        }
      },
      {
        "description": "Returns a list of all the hooks registered with <page>hook.Add</page>.",
        "name": "GetTable",
        "parent": "hook",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of tables. See below for output example.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/hook.lua",
          "lineEnd": 21,
          "lineStart": 15
        }
      },
      {
        "arguments": [
          {
            "description": "The event name.",
            "name": "eventName",
            "type": "string"
          },
          {
            "description": "The unique identifier of the hook to remove, usually a string.",
            "name": "identifier",
            "type": "any"
          }
        ],
        "description": "Removes the hook with the supplied identifier from the given event.",
        "name": "Remove",
        "parent": "hook",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/hook.lua",
          "lineEnd": 61,
          "lineStart": 45
        }
      },
      {
        "arguments": [
          {
            "description": "The event to call hooks for.",
            "name": "eventName",
            "type": "string"
          },
          {
            "description": "The arguments to be passed to the hooks.",
            "name": "args",
            "type": "vararg"
          }
        ],
        "description": "Calls all hooks associated with the given event **until** one returns something other than `nil` and then returns that data. If no hook returns any data, it will try to call the `GAMEMODE:<eventname>`; alternative, if one exists.\n\nThis function internally calls <page>hook.Call</page>.\n\nSee also: <page>gamemode.Call</page> - same as this, but does not call hooks if the gamemode hasn't defined the function.\n</eventname>",
        "name": "Run",
        "parent": "hook",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Return data from called hooks. Limited to **6** return values.",
            "type": "vararg"
          }
        ],
        "source": {
          "file": "lua/includes/modules/hook.lua",
          "lineEnd": 71,
          "lineStart": 64
        }
      }
    ],
    "name": "hook"
  },
  {
    "description": "The http library allows either the server or client to communicate with external websites via HTTP, both `GET` (<page>http.Fetch</page>) and `POST` (<page>http.Post</page>) are supported. A more powerful &amp; advanced method can be used via the global <page>Global.HTTP</page> function.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The URL of the website to fetch.",
            "name": "url",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "Function to be called on success.\n<callback>\n<arg type=\"string\" name=\"body\"></arg>\n<arg type=\"number\" name=\"size\">equal to <page>string.len</page>(body).</arg>\n<arg type=\"table\" name=\"headers\"></arg>\n<arg type=\"number\" name=\"code\">The HTTP success code.</arg>\n</callback>",
            "name": "onSuccess",
            "type": "function"
          },
          {
            "default": "nil",
            "description": "Function to be called on failure.\n<callback>\n<arg type=\"string\" name=\"error\">The error message.</arg>\n</callback>",
            "name": "onFailure",
            "type": "function"
          },
          {
            "default": "{}",
            "description": "KeyValue table for headers.",
            "name": "headers",
            "type": "table"
          }
        ],
        "description": "Launches an asynchronous **GET** request to an HTTP server. Internally calls <page>Global.HTTP</page>.\n\nHTTP requests returning a status code &gt;= `400` are still considered a success and will call the <page text=\"onSuccess\">Structures/HTTPRequest</page> callback.\n\nThe <page text=\"onFailure\">Structures/HTTPRequest</page> callback is usually only called on DNS or TCP errors (e.g. the website is unavailable or the domain does not exist).\n\nA rough overview of possible <page text=\"onFailure\">Structures/HTTPRequest</page> messages:\n* `invalid url` - Invalid/empty url ( no request was attempted )\n* `invalid request` - Steam HTTP lib failed to create a HTTP request\n* `error` - OnComplete callback's second argument, `bError`, is `true`\n* `unsuccessful` - OnComplete's first argument, `pResult-&gt;m_bRequestSuccessful`, returned `false`\n\n<bug issue=\"2232\">This cannot send or receive multiple headers with the same name.</bug>\n<note>HTTP-requests that respond with a large body may return an `unsuccessful` error. Try using the [Range](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Range) header to download the file in chunks.</note>\n<note>\nHTTP-requests to destinations on private networks (such as `192.168.0.1`, or `127.0.0.1`) won't work.\n<br>\nTo enable HTTP-requests to destinations on private networks use <page>Command Line Parameters</page> `-allowlocalhttp`. (Dedicated servers only)\n</note>\n\n**Not all headers are allowed in the client realm, here is a list of known blacklisted headers inside the client realm:**\n```\nhost\nexpect\ncontent-length\nproxy-authenticate\naccept-charset\nconnection\naccept-encoding\norigin\ndate\n```",
        "name": "Fetch",
        "parent": "http",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/http.lua",
          "lineEnd": 44,
          "lineStart": 18
        }
      },
      {
        "arguments": [
          {
            "description": "The url to of the website to post.",
            "name": "url",
            "type": "string"
          },
          {
            "description": "The post parameters (x-www-form-urlencoded) to be send to the server. **Keys and values must be strings**.",
            "name": "parameters",
            "type": "table"
          },
          {
            "default": "nil",
            "description": "Function to be called on success.\n<callback>\n<arg type=\"string\" name=\"body\">The reponse body as a string.</arg>\n<arg type=\"string\" name=\"size\">equal to <page>string.len</page>(body).</arg>\n<arg type=\"table\" name=\"headers\">The response headers as a table.</arg>\n<arg type=\"number\" name=\"code\">The HTTP success code.</arg>\n</callback>",
            "name": "onSuccess",
            "type": "function"
          },
          {
            "default": "nil",
            "description": "Function to be called on failure.\n<callback>\n<arg type=\"string\" name=\"error\">The error message.</arg>\n</callback>",
            "name": "onFailure",
            "type": "function"
          },
          {
            "default": "{}",
            "description": "KeyValue table for headers.",
            "name": "headers",
            "type": "table"
          }
        ],
        "description": "Sends an asynchronous **POST** request to an HTTP server. Internally calls <page>Global.HTTP</page>.\n\nHTTP requests returning a status code &gt;= `400` are still considered a success and will call the <page text=\"onSuccess\">Structures/HTTPRequest</page> callback.\n\nThe <page text=\"onFailure\">Structures/HTTPRequest</page> callback is usually only called on DNS or TCP errors (e.g. the website is unavailable or the domain does not exist).\n\n<bug issue=\"2232\">This cannot send or receive multiple headers with the same name.</bug>\n<note>HTTP-requests that respond with a large body may return an `unsuccessful` error. Try using the [Range](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Range) header to download the file in chunks.</note>\n<note>\nHTTP-requests to destinations on private networks (such as `192.168.0.1`, or `127.0.0.1`) won't work.\n<br>\nTo enable HTTP-requests to destinations on private networks use <page>Command Line Parameters</page> `-allowlocalhttp`. (Dedicated servers only)\n</note>",
        "name": "Post",
        "parent": "http",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/http.lua",
          "lineEnd": 73,
          "lineStart": 46
        }
      }
    ],
    "name": "http"
  },
  {
    "description": "The input library allows you to gather information about the clients input devices (mouse &amp; keyboard), such as the cursor position and whether a key is pressed or not.",
    "functions": [
      {
        "description": "Returns the last key captured by key trapping.",
        "name": "CheckKeyTrapping",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The key, see <page>Enums/KEY</page>",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The analog axis to poll. See <page>Enums/ANALOG</page>.",
            "name": "axis",
            "type": "number{ANALOG}"
          }
        ],
        "description": "Returns the digital value of an analog stick on the current (set up via convars) controller.",
        "name": "GetAnalogValue",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The digital value.\n<note>A joystick axis returns `-32768` when it's pushed completely up/completely left, &amp; returns `32767` when it's pushed completely down/completely right.\n\nA mouse wheel starts @ `0` &amp; increases by `1` for every unit of scroll up/decreases by `1` for every unit of scroll down.\n\nA mouse axis is `0` when the arrow is @ the top or left of the screen; When the arrow is @ the bottom right of the screen, the mouse y axis is the height of the screen &amp; the mouse x axis is the width of the screen (in pixels). Note that in game, the “arrow” stays near the middle of the screen.\n\nTrigger axis always return `0` (verify).</note>",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the cursor's position on the screen.\n<bug issue=\"4964\">On macOS, the cursor isn't locked on the middle of the screen which causes a significant offset of the positions returned by this function.</bug>",
        "name": "GetCursorPos",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The cursors position on the X axis.",
            "type": "number"
          },
          {
            "description": "The cursors position on the Y axis.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The internal button name, such as <key>E</key> or <key>SHIFT</key>.",
            "name": "button",
            "type": "string"
          }
        ],
        "description": "Gets the button code from a button name. This is opposite of <page>input.GetKeyName</page>.",
        "name": "GetKeyCode",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The button code, see <page>Enums/BUTTON_CODE</page>.",
            "type": "number{BUTTON_CODE}"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The button, see <page>Enums/BUTTON_CODE</page>.",
            "name": "button",
            "type": "number{BUTTON_CODE}"
          }
        ],
        "description": "Gets the button name from a numeric button code. The name needs to be translated with <page>language.GetPhrase</page> before being displayed.\n\n<note>Despite the name of the function, this also works for the full range of keys in <page>Enums/BUTTON_CODE</page>.</note>",
        "name": "GetKeyName",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Button name.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The button, valid values are in the range of <page>Enums/BUTTON_CODE</page>.",
            "name": "button",
            "type": "number{BUTTON_CODE}"
          }
        ],
        "description": "Gets whether the specified button code is down.\n\nUnlike <page>input.IsKeyDown</page> this can also detect joystick presses from <page>Enums/JOYSTICK</page>",
        "name": "IsButtonDown",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Is the button down",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Returns whether a control key is being pressed",
        "name": "IsControlDown",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Is Ctrl key down or not",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The key, see <page>Enums/KEY</page>.",
            "name": "key",
            "type": "number"
          }
        ],
        "description": "Gets whether a key is down.",
        "name": "IsKeyDown",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Is the key down",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Returns whether key trapping is activate and the next key press will be captured.",
        "name": "IsKeyTrapping",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whether key trapping active or not",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The key, see <page>Enums/MOUSE</page>",
            "name": "mouseKey",
            "type": "number"
          }
        ],
        "description": "Gets whether a mouse button is down",
        "name": "IsMouseDown",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Is the key down",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Gets whether a shift key is being pressed",
        "name": "IsShiftDown",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "isDown",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The binding name",
            "name": "binding",
            "type": "string"
          },
          {
            "default": "false",
            "description": "True to disable automatic stripping of a single leading `+` character",
            "name": "exact",
            "type": "boolean"
          }
        ],
        "description": "Returns the client's bound key for the specified console command. If the player has multiple keys bound to a single command, then the key with the lowest <page>Enums/BUTTON_CODE</page> will be returned.",
        "name": "LookupBinding",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The first key found with that binding or no value if no key with given binding was found.\n\nSee also <page>input.GetKeyCode</page>.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Key from <page>Enums/BUTTON_CODE</page>",
            "name": "key",
            "type": "number{BUTTON_CODE}"
          }
        ],
        "description": "Returns the bind string that the given key is bound to.",
        "name": "LookupKeyBinding",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The bind string of the given key.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The weapon entity to switch to.",
            "name": "weapon",
            "type": "Weapon"
          }
        ],
        "description": "Switches to the provided weapon on the next CUserCmd generation/CreateMove call. Direct binding to [CInput::MakeWeaponSelection](https://github.com/ValveSoftware/source-sdk-2013/blob/39f6dde8fbc238727c020d13b05ecadd31bda4c0/src/game/client/in_main.cpp#L989-L992).",
        "name": "SelectWeapon",
        "parent": "input",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "X coordinate for mouse position",
            "name": "mouseX",
            "type": "number"
          },
          {
            "description": "Y coordinate for mouse position",
            "name": "mouseY",
            "type": "number"
          }
        ],
        "description": "Sets the cursor's position on the screen, relative to the topleft corner of the window",
        "name": "SetCursorPos",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "description": "Begins waiting for a key to be pressed so we can save it for <page>input.CheckKeyTrapping</page>. Used by the <page>DBinder</page>.",
        "name": "StartKeyTrapping",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The alias to lookup.",
            "name": "command",
            "type": "string"
          }
        ],
        "description": "Translates a console command alias, basically reverse of the `alias` console command.",
        "name": "TranslateAlias",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The command(s) this alias will execute if ran, or nil if the alias doesn't exist.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The key, see <page>Enums/KEY</page>.",
            "name": "key",
            "type": "number"
          }
        ],
        "description": "Returns whether a key was initially pressed in the same frame this function was called.\n\nThis function only works in Move hooks, and will detect key presses even in main menu or when a typing in a text field.",
        "name": "WasKeyPressed",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "True if the key was initially pressed the same frame that this function was called, false otherwise.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The key, see <page>Enums/KEY</page>.",
            "name": "key",
            "type": "number"
          }
        ],
        "description": "Returns whether a key was released in the same frame this function was called.\n\nThis function only works in Move hooks, and will detect key releases even in main menu or when a typing in a text field.",
        "name": "WasKeyReleased",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "True if the key was released the same frame that this function was called, false otherwise.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The key to test, see <page>Enums/KEY</page>",
            "name": "key",
            "type": "number"
          }
        ],
        "description": "Returns whether the key is being held down or not.\n\nThis function only works in Move hooks, and will detect key events even in main menu or when a typing in a text field.",
        "name": "WasKeyTyped",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whether the key is being held down or not.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The mouse button to test, see <page>Enums/MOUSE</page>",
            "name": "button",
            "type": "number"
          }
        ],
        "description": "Returns whether a mouse key was double pressed in the same frame this function was called.\n\n\nIf this function returns true, <page>input.WasMousePressed</page> will return false.\n\nThis function only works in Move hooks, and will detect mouse events even in main menu or when a typing in a text field.",
        "name": "WasMouseDoublePressed",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whether the mouse key was double pressed or not.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The key, see <page>Enums/MOUSE</page>",
            "name": "key",
            "type": "number"
          }
        ],
        "description": "Returns whether a mouse key was initially pressed in the same frame this function was called.\n\n\nIf <page>input.WasMouseDoublePressed</page> returns true, this function will return false.\n\nThis function only works in Move hooks, and will detect mouse events even in main menu or when a typing in a text field.",
        "name": "WasMousePressed",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "True if the mouse key was initially pressed the same frame that this function was called, false otherwise.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The key to test, see <page>Enums/MOUSE</page>",
            "name": "key",
            "type": "number"
          }
        ],
        "description": "Returns whether a mouse key was released in the same frame this function was called.\n\nThis function only works in Move hooks, and will detect mouse events even in main menu or when a typing in a text field.",
        "name": "WasMouseReleased",
        "parent": "input",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "True if the mouse key was released the same frame that this function was called, false otherwise.",
            "type": "boolean"
          }
        ]
      }
    ],
    "name": "input"
  },
  {
    "description": "Library to work with the [LuaJIT](http://luajit.org/) functionality of gmod.",
    "functions": [
      {
        "description": "A variable containing the target architecture name: `x86`, `x64`, `arm`, `ppc`, `ppcspe`, or `mips`. This will be `x86` or `x64` in GMod.",
        "name": "arch",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The system architecture.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The callback function.\n\nThe arguments passed to the callback depend on the event being reported:\n\n* `\"bc\"`:\n* <page>function</page> **func** - The function that's just been recorded\n* `\"trace\"`:\n* <page>string</page> **what** - description of the trace event: \"flush\", \"start\", \"stop\", \"abort\". Available for all events.\n* <page>number</page> **tr** - The trace number. Not available for flush.\n* <page>function</page> **func** - The function being traced. Available for start and abort.\n* <page>number</page> **pc** - The program counter - the bytecode number of the function being recorded (if this a Lua function). Available for start and abort.\n* <page>number</page> **otr** - start: the parent trace number if this is a side trace, abort: abort code\n* <page>string</page> **oex** - start: the exit number for the parent trace, abort: abort reason (string)\n* `\"record\"`:\n* <page>number</page> **tr** - The trace number. Not available for flush.\n* <page>function</page> **func** - The function being traced. Available for start and abort.\n* <page>number</page> **pc** - The program counter - the bytecode number of the function being recorded (if this a Lua function). Available for start and abort.\n* <page>number</page> **depth** - The depth of the inlining of the current bytecode.\n* `\"texit\"`:\n* <page>number</page> **tr** - The trace number. Not available for flush.\n* <page>number</page> **ex** - The exit number\n* <page>number</page> **ngpr** - The number of general-purpose and floating point registers that are active at the exit.\n* <page>number</page> **nfpr** - The number of general-purpose and floating point registers that are active at the exit.",
            "name": "callback",
            "type": "function"
          },
          {
            "description": "The event to hook into.",
            "name": "event",
            "type": "string"
          }
        ],
        "description": "You can attach callbacks to a number of compiler events with jit.attach. The callback can be called:\n\n* when a function has been compiled to bytecode (`\"bc\"`);\n* when trace recording starts or stops (`\"trace\"`);\n* as a trace is being recorded (`\"record\"`);\n* or when a trace exits through a side exit (`\"texit\"`).\n\nSet a callback with `jit.attach(callback, \"event\")` and clear the same callback with `jit.attach(callback)`\n\n<warning>This function isn't officially documented on LuaJIT wiki, use it at your own risk.</warning>\n<warning>Using these constantly (especially bytecode) can be very performance heavy due to the constant stream of data being compiled at a time.</warning>",
        "name": "attach",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "description": "Flushes the whole cache of compiled code.",
        "name": "flush",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "description": "Disables LuaJIT Lua compilation.",
        "name": "off",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "description": "Enables LuaJIT Lua compilation.",
        "name": "on",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "",
            "name": "args",
            "type": "vararg"
          }
        ],
        "description": "JIT compiler optimization control. The opt sub-module provides the backend for the -O command line LuaJIT option.\nYou can also use it programmatically, e.g.:\n\n```\njit.opt.start(2) -- same as -O2\njit.opt.start(\"-dce\")\njit.opt.start(\"hotloop=10\", \"hotexit=2\")\n```\n\nA list of LuaJIT -O command line options can be found here(a table of various optimization levels are displayed towards the bottom of the page along with exactly which optimization options are enabled for each level): http://luajit.org/running.html",
        "name": "opt.start",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "description": "This is NOT a function, it's a variable containing the target OS name: `Windows`, `Linux`, `OSX`, `BSD`, `POSIX` or `Other`.",
        "name": "os",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The operating system.",
            "type": "string"
          }
        ]
      },
      {
        "description": "Returns the status of the JIT compiler and the current optimizations enabled.",
        "name": "status",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Is JIT enabled",
            "type": "boolean"
          },
          {
            "description": "Strings for CPU-specific features and enabled optimizations",
            "type": "any"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Function to retrieve bytecode from.",
            "name": "func",
            "type": "function"
          },
          {
            "description": "Position of the bytecode to retrieve.",
            "name": "pos",
            "type": "number"
          }
        ],
        "description": "Returns bytecode of a function at a position.\n<note>This function only works for Lua defined functions.</note>",
        "name": "util.funcbc",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "bytecode instruction",
            "type": "number"
          },
          {
            "description": "bytecode opcode",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Function or Proto to retrieve info about.",
            "name": "func",
            "type": "function"
          },
          {
            "default": "0",
            "description": "",
            "name": "pos",
            "type": "number"
          }
        ],
        "description": "Retrieves LuaJIT information about a given function, similarly to <page>debug.getinfo</page>. Possible table fields:\n* linedefined: as for <page>debug.getinfo</page>\n* lastlinedefined: as for <page>debug.getinfo</page>\n* params: the number of parameters the function takes\n* stackslots: the number of stack slots the function's local variable use\n* upvalues: the number of upvalues the function uses\n* bytecodes: the number of bytecodes it the compiled function\n* gcconsts: the number of garbage collectable constants\n* nconsts: the number of lua_Number (double) constants\n* children: Boolean representing whether the function creates closures\n* currentline: as for <page>debug.getinfo</page>\n* isvararg: if the function is a vararg function\n* source: as for <page>debug.getinfo</page>\n* loc: a string describing the source and currentline, like \"&lt;source&gt;:&lt;line&gt;\"\n* ffid: the fast function id of the function (if it is one). In this case only upvalues above and addr below are valid\n* addr: the address of the function (if it is not a Lua function). If it's a C function rather than a fast function, only upvalues above is valid*",
        "name": "util.funcinfo",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Information about the supplied function/proto.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Function to get constant from",
            "name": "func",
            "type": "function"
          },
          {
            "description": "Constant index (counting down from the top of the function at -1)",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "Gets a constant at a certain index in a function.\n<deprecated>This function was disabled due to security concerns.</deprecated>\n\n<warning>This function isn't officially documented on LuaJIT wiki, use it at your own risk.</warning>\n<note>Numbers constants goes from 0 (included) to n-1, n being the value of nconsts in <page>jit.util.funcinfo</page> in other words, the consts goes from (nconsts-1) to -n</note>\n<note>This function only works for Lua defined functions.</note>",
        "name": "util.funck",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The constant found.\n\n<note>This will return a <page>proto</page> for functions that are created inside the target function - see Example 2.</note>",
            "type": "any"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Function to get the upvalue indexed from",
            "name": "func",
            "type": "function"
          },
          {
            "description": "The upvalue index, starting from 0",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "<deprecated>This function was disabled due to security concerns.</deprecated>\n\nDoes the exact same thing as <page>debug.getupvalue</page> except it only returns the name, not the name and the object. The upvalue indexes also start at 0 rather than 1, so doing `jit.util.funcuvname(func, 0)` will get you the same name as `debug.getupvalue(func, 1)`\n<warning>This function isn't officially documented on LuaJIT wiki, use it at your own risk.</warning>",
        "name": "util.funcuvname",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The function returns nil if there is no upvalue with the given index, otherwise the name of the upvalue is returned",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "This arugment is ignored.",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "<deprecated>This function was disabled due to security concerns.</deprecated>\n\nPreviously got the address of a function from a set list of functions, but now always returns `0` as it is deprecated.",
        "name": "util.ircalladdr",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Always returns `0`",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "exit number to retrieve exit stub address from (gotten via <page>jit.attach</page> with the texit event)",
            "name": "exitno",
            "type": "number"
          }
        ],
        "description": "<deprecated>This function was disabled due to security concerns. It will always return 0.</deprecated>\nGrabs the address of a function based on it's trace exit number. Grabbed via <page>jit.attach</page> (with the texit event).",
        "name": "util.traceexitstub",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "exitstub trace address",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "trace index to retrieve info for (gotten via <page>jit.attach</page>)",
            "name": "trace",
            "type": "number"
          }
        ],
        "description": "<deprecated>This function was disabled due to security concerns.</deprecated>\n\nReturn table fields:\n* link (number): the linked trace (0 for link types: none, return, interpreter)\n* nk (number): the lowest IR constant (???)\n* nins (number): the next IR instruction (???)\n* linktype (string): the link type (none, root, loop, tail-recursion, up-recursion, down-recursion, interpreter, return)\n* nexit (number): number of snapshots (for use with <page>jit.util.tracesnap</page>)",
        "name": "util.traceinfo",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "trace info",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "",
            "name": "tr",
            "type": "number"
          },
          {
            "description": "",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "<deprecated>This function was disabled due to security concerns.</deprecated>",
        "name": "util.traceir",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "m",
            "type": "number"
          },
          {
            "description": "ot",
            "type": "number"
          },
          {
            "description": "op1",
            "type": "number"
          },
          {
            "description": "op2",
            "type": "number"
          },
          {
            "description": "prev",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "",
            "name": "tr",
            "type": "number"
          },
          {
            "description": "",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "<deprecated>This function was disabled due to security concerns.</deprecated>",
        "name": "util.tracek",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "k",
            "type": "any"
          },
          {
            "description": "t",
            "type": "number"
          },
          {
            "description": "slot; optional",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "",
            "name": "tr",
            "type": "number"
          }
        ],
        "description": "<deprecated>This function was disabled due to security concerns. It will always return 3 `0`s.</deprecated>",
        "name": "util.tracemc",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "mcode",
            "type": "string"
          },
          {
            "description": "address",
            "type": "number"
          },
          {
            "description": "loop",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "trace index to retrieve snapshot for (gotten via <page>jit.attach</page>)",
            "name": "tr",
            "type": "number"
          },
          {
            "description": "snapshot index for trace (starting from 0 to nexit - 1, nexit gotten via <page>jit.util.traceinfo</page>)",
            "name": "sn",
            "type": "number"
          }
        ],
        "description": "<deprecated>This function was disabled due to security concerns.</deprecated>\n\nReturn table fields:\n* 0 (ref) (number): first IR ref for the snapshot\n* 1 (nslots) (number): the number of valid slots\n* all indexes except first 2 and last (there might not be any of these): the snapshot map\n* last index in table (number): -16777216 (255 &lt;&lt; 24)",
        "name": "util.tracesnap",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "snapshot",
            "type": "table"
          }
        ]
      },
      {
        "description": "A variable containing the LuaJIT version string. This is `LuaJIT 2.0.4` in GMod, and `LuaJIT 2.1.0-beta3` on the x86-64 branch of GMod.",
        "name": "version",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The version string.",
            "type": "string"
          }
        ]
      },
      {
        "description": "A variable containing the version number of the LuaJIT core.",
        "name": "version_num",
        "parent": "jit",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The version number.  Version `xx.yy.zz` is represented by the decimal number `xxyyzz`. In GMod this is `20004`. On x86-64 branch it's `20100`.",
            "type": "number"
          }
        ]
      }
    ],
    "name": "jit"
  },
  {
    "description": "The killicon library is used to add to and control the icons that appear in the top right of your screen when a player is killed.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Weapon or entity class",
            "name": "class",
            "type": "string"
          },
          {
            "description": "Path to the texture",
            "name": "texture",
            "type": "string"
          },
          {
            "description": "Color of the kill icon",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Creates new kill icon using a texture.",
        "name": "Add",
        "parent": "killicon",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/killicon.lua",
          "lineEnd": 37,
          "lineStart": 30
        }
      },
      {
        "arguments": [
          {
            "description": "New class of the kill icon",
            "name": "new_class",
            "type": "string"
          },
          {
            "description": "Already existing kill icon class",
            "name": "existing_class",
            "type": "string"
          }
        ],
        "description": "Creates kill icon from existing one.",
        "name": "AddAlias",
        "parent": "killicon",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/killicon.lua",
          "lineEnd": 43,
          "lineStart": 39
        }
      },
      {
        "arguments": [
          {
            "description": "Weapon or entity class.",
            "name": "class",
            "type": "string"
          },
          {
            "description": "Font to be used.",
            "name": "font",
            "type": "string"
          },
          {
            "description": "The symbol to be used.",
            "name": "symbol",
            "type": "string"
          },
          {
            "description": "Color of the killicon.",
            "name": "color",
            "type": "table"
          },
          {
            "default": "1",
            "description": "Used internally to correct certain killicons to more closely match their visual size.",
            "name": "heightScale ",
            "type": "number"
          }
        ],
        "description": "Adds kill icon for given weapon/entity class using special font.",
        "name": "AddFont",
        "parent": "killicon",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/killicon.lua",
          "lineEnd": 28,
          "lineStart": 20
        }
      },
      {
        "arguments": [
          {
            "description": "Weapon or entity class this killicon is for.",
            "name": "class",
            "type": "string"
          },
          {
            "description": "Path to the texture.",
            "name": "texture",
            "type": "string"
          },
          {
            "description": "Color of the kill icon.",
            "name": "color",
            "type": "table"
          },
          {
            "description": "The start position (X axis) of the rectangle on the given texture. This is in texture coordinates.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The start position (Y axis) of the rectangle on the given texture. This is in texture coordinates.",
            "name": "y",
            "type": "number"
          },
          {
            "description": "The width of the rectangle on the given texture. This is in texture coordinates.",
            "name": "w",
            "type": "number"
          },
          {
            "description": "The height of the rectangle on the given texture. This is in texture coordinates.",
            "name": "h",
            "type": "number"
          }
        ],
        "description": "Creates new kill icon using a sub-rectangle of a texture.",
        "name": "AddTexCoord",
        "parent": "killicon",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "X coordinate of the icon",
            "name": "x",
            "type": "number"
          },
          {
            "description": "Y coordinate of the icon",
            "name": "y",
            "type": "number"
          },
          {
            "description": "Classname of the kill icon",
            "name": "name",
            "type": "string"
          },
          {
            "default": "255",
            "description": "Alpha/transparency value ( 0 - 255 ) of the icon",
            "name": "alpha",
            "type": "number"
          }
        ],
        "description": "Draws a kill icon.\n\n<deprecated>This function applies unpredictable vertical offsets, you should use <page>killicon.Render</page> instead, which does not suffer from this issue.</deprecated>",
        "name": "Draw",
        "parent": "killicon",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/killicon.lua",
          "lineEnd": 135,
          "lineStart": 97
        }
      },
      {
        "arguments": [
          {
            "description": "The class to test",
            "name": "class",
            "type": "string"
          }
        ],
        "description": "Checks if kill icon exists for given class.",
        "name": "Exists",
        "parent": "killicon",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Returns true if kill icon exists",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/killicon.lua",
          "lineEnd": 49,
          "lineStart": 45
        }
      },
      {
        "arguments": [
          {
            "description": "Classname of the kill icon",
            "name": "name",
            "type": "string"
          },
          {
            "default": "false",
            "description": "If set to `true`, returns the real size of the kill icon, without trying to equalize the height to match the default kill icon font.",
            "name": "dontEqualizeHeight",
            "type": "boolean"
          }
        ],
        "description": "Returns the size of a kill icon.",
        "name": "GetSize",
        "parent": "killicon",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Width of the kill icon",
            "type": "number"
          },
          {
            "description": "Height of the kill icon",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/killicon.lua",
          "lineEnd": 95,
          "lineStart": 51
        }
      },
      {
        "arguments": [
          {
            "description": "X coordinate of the icon",
            "name": "x",
            "type": "number"
          },
          {
            "description": "Y coordinate of the icon",
            "name": "y",
            "type": "number"
          },
          {
            "description": "Classname of the kill icon",
            "name": "name",
            "type": "string"
          },
          {
            "default": "255",
            "description": "Alpha/transparency value ( 0 - 255 ) of the icon",
            "name": "alpha",
            "type": "number"
          },
          {
            "default": "false",
            "description": "Do not rescale the icon to match the default kill icon font.",
            "name": "dontEqualizeHeight",
            "type": "number"
          }
        ],
        "description": "Renders a kill icon.",
        "name": "Render",
        "parent": "killicon",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/killicon.lua",
          "lineEnd": 200,
          "lineStart": 196
        }
      }
    ],
    "name": "killicon"
  },
  {
    "description": "The language library is used for translation.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The key for this phrase, without the preceding \"#\".",
            "name": "placeholder",
            "type": "string"
          },
          {
            "description": "The phrase that should be displayed whenever this key is used.",
            "name": "fulltext",
            "type": "string"
          }
        ],
        "description": "Adds a language item. Language placeholders preceded with \"#\" are replaced with full text in Garry's Mod once registered with this function.",
        "name": "Add",
        "parent": "language",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The phrase to translate",
            "name": "phrase",
            "type": "string"
          }
        ],
        "description": "Retrieves the translated version of inputted string. Useful for concentrating multiple translated strings.",
        "name": "GetPhrase",
        "parent": "language",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The translated phrase, or the input string if no translation was found. There is a limit of 4000 bytes for the returned string.",
            "type": "string"
          }
        ]
      }
    ],
    "name": "language"
  },
  {
    "description": "The list library allows you add and retrieve values to and from lists. The list library is basically a fancy wrapper for a table, but with much more limited functionality.\n\nIt is used extensively in the built-in Sandbox gamemode for addon-extensible lists of things (list of wheel models, list of thruster effects, etc) , without using global tables for this task.\n\nSee <page>Default Lists</page> for a page of default Sandbox lists.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The list identifier",
            "name": "identifier",
            "type": "string"
          },
          {
            "description": "The item to add to the list",
            "name": "item",
            "type": "any"
          }
        ],
        "description": "Adds an item to a named list",
        "name": "Add",
        "parent": "list",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The index at which the item was added.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/list.lua",
          "lineEnd": 45,
          "lineStart": 41
        }
      },
      {
        "arguments": [
          {
            "description": "List to search through",
            "name": "list",
            "type": "string"
          },
          {
            "description": "The value to test",
            "name": "value",
            "type": "any"
          }
        ],
        "description": "Returns true if the list contains the value. (as a value - not a key)\n\nFor a function that looks for a key and not a value see <page>list.HasEntry</page>.",
        "name": "Contains",
        "parent": "list",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns true if the list contains the value, false otherwise",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/list.lua",
          "lineEnd": 58,
          "lineStart": 47
        }
      },
      {
        "arguments": [
          {
            "description": "The list identifier",
            "name": "identifier",
            "type": "string"
          }
        ],
        "description": "Returns a copy of the list stored at identifier\n<warning>This function uses <page>table.Copy</page> which can be very slow for larger lists. You should avoid calling it repeatedly or in performance sensitive hooks such as <page>GM:Think</page>.</warning>\nWhere possible you should use the much faster helper functions:\n<page>list.Contains</page>,\n<page>list.HasEntry</page>, or\n<page>list.GetEntry</page>\n\nThere is also the more dangerous option of calling <page>list.GetForEdit</page> to get the unprotected list if you absolutely must iterate through it in a think hook.",
        "name": "Get",
        "parent": "list",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The copy of the list",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/list.lua",
          "lineEnd": 14,
          "lineStart": 10
        }
      },
      {
        "arguments": [
          {
            "description": "List to search through",
            "name": "list",
            "type": "string"
          },
          {
            "description": "The key to search for",
            "name": "key",
            "type": "string"
          }
        ],
        "description": "Returns a copy of the entry in the list `list` with key `key`.",
        "name": "GetEntry",
        "parent": "list",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns the  value if the list contains the key, nil otherwise",
            "type": "any|nil"
          }
        ],
        "source": {
          "file": "lua/includes/modules/list.lua",
          "lineEnd": 27,
          "lineStart": 16
        }
      },
      {
        "arguments": [
          {
            "description": "The list identifier",
            "name": "identifier",
            "type": "string"
          },
          {
            "default": "false",
            "description": "If the list at given identifier does not exist, do **not** create it.",
            "name": "dontCreate",
            "type": "boolean"
          }
        ],
        "description": "Returns the actual table of the list stored at identifier. Modifying this will affect the stored list",
        "name": "GetForEdit",
        "parent": "list",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The actual list",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/list.lua",
          "lineEnd": 27,
          "lineStart": 16
        }
      },
      {
        "description": "Returns a list of all lists currently in use.",
        "name": "GetTable",
        "parent": "list",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The list of all lists, i.e. a table containing names of all lists.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/list.lua",
          "lineEnd": 33,
          "lineStart": 29
        }
      },
      {
        "arguments": [
          {
            "description": "List to search through",
            "name": "list",
            "type": "string"
          },
          {
            "description": "The key to test",
            "name": "key",
            "type": "any"
          }
        ],
        "description": "Returns true if the list contains the given key.\n\nFor a function that looks for values and not keys see <page>list.Contains</page>.",
        "name": "HasEntry",
        "parent": "list",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns true if the list contains the key, false otherwise",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/list.lua",
          "lineEnd": 66,
          "lineStart": 60
        }
      },
      {
        "arguments": [
          {
            "description": "List to remove an entry in.",
            "name": "list",
            "type": "string"
          },
          {
            "description": "The key for the entry to remove.",
            "name": "key",
            "type": "string"
          }
        ],
        "description": "Removes a single entry from the list `list` with key `key`.\n\nThis is equivalent to `list.Set( myList, myKey, nil )`.",
        "name": "RemoveEntry",
        "parent": "list",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The list identifier",
            "name": "identifier",
            "type": "string"
          },
          {
            "description": "The key in the list to set",
            "name": "key",
            "type": "any"
          },
          {
            "description": "The item to set to the list as key",
            "name": "item",
            "type": "any"
          }
        ],
        "description": "Sets a specific position in the named list to a value.",
        "name": "Set",
        "parent": "list",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/list.lua",
          "lineEnd": 39,
          "lineStart": 35
        }
      }
    ],
    "name": "list"
  },
  {
    "description": "The markup library only contains a single function to create a <page>MarkupObject</page>.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The <page>Color</page> to convert.",
            "name": "col",
            "type": "Color"
          }
        ],
        "description": "A convenience function that converts a <page>Color</page> into its markup ready string representation.",
        "name": "Color",
        "parent": "markup",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The markup color, for example `255,255,255`.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/modules/markup.lua",
          "lineEnd": 46,
          "lineStart": 39
        }
      },
      {
        "arguments": [
          {
            "description": "The string to sanitize.",
            "name": "text",
            "type": "string"
          }
        ],
        "description": "Converts a string to its escaped, markup-safe equivalent.",
        "name": "Escape",
        "parent": "markup",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The parsed markup object ready to be drawn.",
            "name": "sanitizedText",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/modules/markup.lua",
          "lineEnd": 281,
          "lineStart": 279
        }
      },
      {
        "arguments": [
          {
            "description": "The markup to be parsed.",
            "name": "markup",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "The max width of the output",
            "name": "maxWidth",
            "type": "number"
          }
        ],
        "description": "Parses markup into a <page>MarkupObject</page>. Currently, this only supports fonts and colors as demonstrated in the example.",
        "name": "Parse",
        "parent": "markup",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The parsed markup object ready to be drawn via <page>MarkupObject:Draw</page>.",
            "type": "MarkupObject"
          }
        ],
        "source": {
          "file": "lua/includes/modules/markup.lua",
          "lineEnd": 557,
          "lineStart": 295
        }
      }
    ],
    "name": "markup"
  },
  {
    "description": "An easing library that allows you to interpolate with various kinds of smoothing [functions](https://easings.net/). To use with <page>Global.Lerp</page>, input what you would to the fraction argument in one of these easing functions and then the output of that into the <page>Global.Lerp</page> fraction argument.\n<example>\n<description>Example usage with Lerp and <page>math.ease.InSine</page></description>\n<code>\n-- Define a wrapper function to make it easier to work with\nlocal function easedLerp(fraction, from, to)\nreturn Lerp(math.ease.InSine(fraction), from, to)\nend\n\n-- Compare with the non-eased version of Lerp\nprint(easedLerp(0.25, 0, 1))\nprint(Lerp(0.25, 0, 1))\n\nprint(easedLerp(0.25, 0, 5))\nprint(Lerp(0.25, 0, 5))\n</code>\n<output>\n```\n0.076120467488713\n0.25\n\n0.38060233744357\n1.25\n```\n</output>\n\n</example>\n\n<example>\n<description>\nA brief visual example of different easing methods\n<upload src=\"ab571/8dc38906fb4cfbe.gif\" size=\"4162886\" name=\"easing_examples.gif\">\n</upload></description>\n</example>",
    "functions": [
      {
        "arguments": [
          {
            "description": "The number to get the absolute value of.",
            "name": "x",
            "type": "number"
          }
        ],
        "description": "Calculates the absolute value of a number (effectively removes any negative sign).",
        "name": "abs",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The absolute value.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Cosine value in range of -1 to 1.",
            "name": "cos",
            "type": "number"
          }
        ],
        "description": "Returns the [arccosine](https://en.wikipedia.org/wiki/Arccosine) of the given number.",
        "name": "acos",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "An angle in radians, between 0 and pi, which has the given cos value.\n\n<page>nan</page> if the argument is out of range.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The first angle.",
            "name": "a",
            "type": "number"
          },
          {
            "description": "The second angle.",
            "name": "b",
            "type": "number"
          }
        ],
        "description": "Calculates the difference between two angles.",
        "name": "AngleDifference",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The difference between the angles between -180 and 180",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 197,
          "lineStart": 189
        }
      },
      {
        "arguments": [
          {
            "description": "The value we're currently at.",
            "name": "current",
            "type": "number"
          },
          {
            "description": "The target value. This function will never overshoot this value.",
            "name": "target",
            "type": "number"
          },
          {
            "description": "The amount that the current value is allowed to change by to approach the target. (It makes no difference whether this is positive or negative.)",
            "name": "change",
            "type": "number"
          }
        ],
        "description": "Gradually approaches the target value by the specified amount.",
        "name": "Approach",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "New current value, closer to the target than it was previously.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 183,
          "lineStart": 173
        }
      },
      {
        "arguments": [
          {
            "description": "The current angle to increase",
            "name": "currentAngle",
            "type": "number"
          },
          {
            "description": "The angle to increase towards",
            "name": "targetAngle",
            "type": "number"
          },
          {
            "description": "The amount to approach the target angle by",
            "name": "rate",
            "type": "number"
          }
        ],
        "description": "Increments an angle towards another by specified rate.\n\n<note>This function is for numbers representing angles (0-360), NOT <page>Angle</page> objects!</note>",
        "name": "ApproachAngle",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Modified angle",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 201,
          "lineStart": 199
        }
      },
      {
        "arguments": [
          {
            "description": "Sine value in the range of -1 to 1.",
            "name": "normal",
            "type": "number"
          }
        ],
        "description": "Returns the [arcsine](https://en.wikipedia.org/wiki/Inverse_trigonometric_functions) of the given number.",
        "name": "asin",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "An angle in radians, in the range -pi/2 to pi/2, which has the given sine value.\n\n<page>nan</page> if the argument is out of range.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Tangent value.",
            "name": "normal",
            "type": "number"
          }
        ],
        "description": "Returns the [arctangent](https://en.wikipedia.org/wiki/Inverse_trigonometric_functions) of the given number.",
        "name": "atan",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "An angle in radians, in the range -pi/2 to pi/2, which has the given tangent.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Y coordinate.",
            "name": "y",
            "type": "number"
          },
          {
            "description": "X coordinate.",
            "name": "x",
            "type": "number"
          }
        ],
        "description": "functions like <page>math.atan</page>(y / x), except it also takes into account the quadrant of the angle and so doesn't have a limited range of output.\n\n<note>The Y argument comes first!</note>",
        "name": "atan2",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The angle of the line from (0, 0) to (x, y) in radians, in the left-open interval (-pi, pi]",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Binary string to convert",
            "name": "string",
            "type": "string"
          }
        ],
        "description": "Converts a binary string into a number.",
        "name": "BinToInt",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Base 10 number.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 33,
          "lineStart": 31
        }
      },
      {
        "arguments": [
          {
            "description": "A number in the range `[0,fractionMax]` which controls which location along the spline's length should be evaluated as the return value.",
            "name": "fraction",
            "type": "number"
          },
          {
            "description": "A table of <page text=\"Vectors\">Vector</page> that form the spline.\n\nThere must be **at least** 4 points.",
            "name": "points",
            "type": "table"
          },
          {
            "description": "The maximum value of the `fraction` argument.\n\nThe most common value for this is `1`.",
            "name": "fractionMax",
            "type": "number"
          }
        ],
        "description": "Basic code for Bézier-Spline algorithm.",
        "name": "BSplinePoint",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The point on the Bézier curve that corresponds to the given `fraction` argument.",
            "type": "Vector"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 142,
          "lineStart": 131
        }
      },
      {
        "arguments": [
          {
            "description": "",
            "name": "i",
            "type": "number"
          },
          {
            "description": "<bug pull=\"1477\">Sending in a value &lt; 1 will result in an infinite loop.</bug>",
            "name": "k",
            "type": "number"
          },
          {
            "description": "",
            "name": "t",
            "type": "number"
          },
          {
            "description": "",
            "name": "tinc",
            "type": "number"
          }
        ],
        "description": "<internal>Use <page>math.BSplinePoint</page> instead.</internal>\n\nBasic code for Bezier-Spline algorithm, helper function for <page>math.BSplinePoint</page>.",
        "name": "calcBSplineN",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 129,
          "lineStart": 100
        }
      },
      {
        "arguments": [
          {
            "description": "The number to be rounded up.",
            "name": "number",
            "type": "number"
          }
        ],
        "description": "Ceils or rounds a number up.",
        "name": "ceil",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "ceiled numbers",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "From 0 to 1, where alongside the spline the point will be.",
            "name": "frac",
            "type": "number"
          },
          {
            "description": "First point for the spline.",
            "name": "point0",
            "type": "Vector"
          },
          {
            "description": "Tangent for the first point for the spline.",
            "name": "tan0",
            "type": "Vector"
          },
          {
            "description": "Second point for the spline.",
            "name": "point1",
            "type": "Vector"
          },
          {
            "description": "Tangent for the second point for the spline.",
            "name": "tan1",
            "type": "Vector"
          }
        ],
        "description": "Cubic Hermite spline algorithm.",
        "name": "CHSpline",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Point on the cubic Hermite spline, at given fraction.",
            "type": "Vector"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 159,
          "lineStart": 148
        }
      },
      {
        "arguments": [
          {
            "description": "The number to clamp.",
            "name": "input",
            "type": "number"
          },
          {
            "description": "The minimum value.",
            "name": "min",
            "type": "number"
          },
          {
            "description": "The maximum value, this function will **never** return a number greater than this.",
            "name": "max",
            "type": "number"
          }
        ],
        "description": "Clamps a number between a minimum and maximum value.",
        "name": "Clamp",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The clamped value.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 55,
          "lineStart": 53
        }
      },
      {
        "arguments": [
          {
            "description": "Angle in radians",
            "name": "number",
            "type": "number"
          }
        ],
        "description": "Returns the [cosine](https://en.wikipedia.org/wiki/Trigonometric_functions#cos) of given angle.",
        "name": "cos",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Cosine of given angle in the range (-1, 1)",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Angle in radians.",
            "name": "number",
            "type": "number"
          }
        ],
        "description": "Returns the [hyperbolic cosine](https://en.wikipedia.org/wiki/Cosh_(mathematical_function)) of the given angle.",
        "name": "cosh",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The hyperbolic cosine of the given angle.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The fraction for finding the result. This number is clamped between 0 and 1.",
            "name": "frac",
            "type": "number"
          },
          {
            "description": "First control point",
            "name": "p0",
            "type": "Vector"
          },
          {
            "description": "First tangent",
            "name": "p1",
            "type": "Vector"
          },
          {
            "description": "Second tangent",
            "name": "p2",
            "type": "Vector"
          },
          {
            "description": "Second control point",
            "name": "p3",
            "type": "Vector"
          }
        ],
        "description": "Lerp point between 4 control points with cubic bezier.\n\nSee <page>math.QuadraticBezier</page> for a similar function which works with 3 control points.",
        "name": "CubicBezier",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Point between control points at the specified fraction",
            "type": "Vector"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 226,
          "lineStart": 220
        }
      },
      {
        "arguments": [
          {
            "description": "Value to be converted to degrees.",
            "name": "radians",
            "type": "number"
          }
        ],
        "description": "Converts radians to degrees.",
        "name": "deg",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "degrees",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "X position of first point",
            "name": "x1",
            "type": "number"
          },
          {
            "description": "Y position of first point",
            "name": "y1",
            "type": "number"
          },
          {
            "description": "X position of second point",
            "name": "x2",
            "type": "number"
          },
          {
            "description": "Y position of second point",
            "name": "y2",
            "type": "number"
          }
        ],
        "description": "<deprecated>You should use <page>math.Distance</page> instead</deprecated>\n\nReturns the difference between two points in 2D space. Alias of <page>math.Distance</page>.",
        "name": "Dist",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Distance between the two points.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 24,
          "lineStart": 20
        }
      },
      {
        "arguments": [
          {
            "description": "X position of first point",
            "name": "x1",
            "type": "number"
          },
          {
            "description": "Y position of first point",
            "name": "y1",
            "type": "number"
          },
          {
            "description": "X position of second point",
            "name": "x2",
            "type": "number"
          },
          {
            "description": "Y position of second point",
            "name": "y2",
            "type": "number"
          }
        ],
        "description": "Returns the difference between two points in 2D space.",
        "name": "Distance",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Distance between the two points",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 24,
          "lineStart": 20
        }
      },
      {
        "arguments": [
          {
            "description": "X position of first point",
            "name": "x1",
            "type": "number"
          },
          {
            "description": "Y position of first point",
            "name": "y1",
            "type": "number"
          },
          {
            "description": "X position of second point",
            "name": "x2",
            "type": "number"
          },
          {
            "description": "Y position of second point",
            "name": "y2",
            "type": "number"
          }
        ],
        "description": "Returns the squared difference between two points in 2D space. This is computationally faster than <page>math.Distance</page>.",
        "name": "DistanceSqr",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The squared distance between the two points.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 14,
          "lineStart": 10
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in by reversing the direction of the ease slightly before returning.\n<note>This doesn't work properly when used with <page>Global.Lerp</page> as it clamps the fraction between 0 and 1. Using your own version of <page>Global.Lerp</page> that is unclamped would be necessary instead.</note>",
        "name": "InBack",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 130,
          "lineStart": 128
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in like a bouncy ball.\n<note>This doesn't work properly when used with <page>Global.Lerp</page> as it clamps the fraction between 0 and 1. Using your own version of <page>Global.Lerp</page> that is unclamped would be necessary instead.</note>",
        "name": "InBounce",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 170,
          "lineStart": 168
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in using a circular function.",
        "name": "InCirc",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 116,
          "lineStart": 114
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in by cubing the fraction.",
        "name": "InCubic",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 63,
          "lineStart": 61
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in like a rubber band.\n<note>This doesn't work properly when used with <page>Global.Lerp</page> as it clamps the fraction between 0 and 1. Using your own version of <page>Global.Lerp</page> that is unclamped would be necessary instead.</note>",
        "name": "InElastic",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 148,
          "lineStart": 142
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in using an exponential equation with a base of 2 and where the fraction is used in the exponent.",
        "name": "InExpo",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 99,
          "lineStart": 97
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in and out by reversing the direction of the ease slightly before returning on both ends.\n<note>This doesn't work properly when used with <page>Global.Lerp</page> as it clamps the fraction between 0 and 1. Using your own version of <page>Global.Lerp</page> that is unclamped would be necessary instead.</note>",
        "name": "InOutBack",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 140,
          "lineStart": 136
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in and out like a bouncy ball.\n<note>This doesn't work properly when used with <page>Global.Lerp</page> as it clamps the fraction between 0 and 1. Using your own version of <page>Global.Lerp</page> that is unclamped would be necessary instead.</note>",
        "name": "InOutBounce",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 191,
          "lineStart": 187
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in and out using a circular function.",
        "name": "InOutCirc",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 126,
          "lineStart": 122
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in and out by cubing the fraction.",
        "name": "InOutCubic",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 71,
          "lineStart": 69
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in and out like a rubber band.\n<note>This doesn't work properly when used with <page>Global.Lerp</page> as it clamps the fraction between 0 and 1. Using your own version of <page>Global.Lerp</page> that is unclamped would be necessary instead.</note>",
        "name": "InOutElastic",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 166,
          "lineStart": 158
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in and out using an exponential equation with a base of 2 and where the fraction is used in the exponent.",
        "name": "InOutExpo",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 112,
          "lineStart": 105
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in and out by squaring the fraction.",
        "name": "InOutQuad",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 59,
          "lineStart": 57
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in and out by raising the fraction to the power of 4.",
        "name": "InOutQuart",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 83,
          "lineStart": 81
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in and out by raising the fraction to the power of 5.",
        "name": "InOutQuint",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 95,
          "lineStart": 93
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in and out using <page>math.sin</page>.",
        "name": "InOutSine",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 47,
          "lineStart": 45
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in by squaring the fraction.",
        "name": "InQuad",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 51,
          "lineStart": 49
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in by raising the fraction to the power of 4.",
        "name": "InQuart",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 75,
          "lineStart": 73
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in by raising the fraction to the power of 5.",
        "name": "InQuint",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 87,
          "lineStart": 85
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases in using <page>math.sin</page>.",
        "name": "InSine",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 39,
          "lineStart": 37
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases out by reversing the direction of the ease slightly before finishing.\n<note>This doesn't work properly when used with <page>Global.Lerp</page> as it clamps the fraction between 0 and 1. Using your own version of <page>Global.Lerp</page> that is unclamped would be necessary instead.</note>",
        "name": "OutBack",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 134,
          "lineStart": 132
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases out like a bouncy ball.\n<note>This doesn't work properly when used with <page>Global.Lerp</page> as it clamps the fraction between 0 and 1. Using your own version of <page>Global.Lerp</page> that is unclamped would be necessary instead.</note>",
        "name": "OutBounce",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 185,
          "lineStart": 172
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases out using a circular function.",
        "name": "OutCirc",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 120,
          "lineStart": 118
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases out by cubing the fraction.",
        "name": "OutCubic",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 67,
          "lineStart": 65
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases out like a rubber band.\n<note>This doesn't work properly when used with <page>Global.Lerp</page> as it clamps the fraction between 0 and 1. Using your own version of <page>Global.Lerp</page> that is unclamped would be necessary instead.</note>",
        "name": "OutElastic",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 156,
          "lineStart": 150
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases out using an exponential equation with a base of 2 and where the fraction is used in the exponent.",
        "name": "OutExpo",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 103,
          "lineStart": 101
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases out by squaring the fraction.",
        "name": "OutQuad",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 55,
          "lineStart": 53
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases out by raising the fraction to the power of 4.",
        "name": "OutQuart",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 79,
          "lineStart": 77
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases out by raising the fraction to the power of 5.",
        "name": "OutQuint",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 91,
          "lineStart": 89
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1",
            "name": "fraction",
            "type": "number"
          }
        ],
        "description": "Eases out using <page>math.sin</page>.",
        "name": "OutSine",
        "parent": "math.ease",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math/ease.lua",
          "lineEnd": 43,
          "lineStart": 41
        }
      },
      {
        "arguments": [
          {
            "description": "Fraction of the progress to ease, from 0 to 1.",
            "name": "progress",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Fraction of how much easing to begin with, from 0 to 1.",
            "name": "easeIn",
            "type": "number"
          },
          {
            "default": "1",
            "description": "Fraction of how much easing to end with, from 0 to 1.",
            "name": "easeOut",
            "type": "number"
          }
        ],
        "description": "Calculates the progress of a value fraction, taking in to account given easing fractions",
        "name": "EaseInOut",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "\"Eased\" Value, from 0 to 1",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 98,
          "lineStart": 74
        }
      },
      {
        "arguments": [
          {
            "description": "The exponent for the function.",
            "name": "exponent",
            "type": "number"
          }
        ],
        "description": "Returns the x power of the Euler constant.",
        "name": "exp",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "e to the specified power",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "An whole number to get a factorial of. Decimal numbers will be treated as whole numbers.",
            "name": "val_in",
            "type": "number"
          }
        ],
        "description": "Simple function that calculates [factorial](https://en.wikipedia.org/wiki/Factorial) of a whole number.",
        "name": "Factorial",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The factorial of given number.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 257,
          "lineStart": 244
        }
      },
      {
        "arguments": [
          {
            "description": "The number to be rounded down.",
            "name": "number",
            "type": "number"
          }
        ],
        "description": "Floors or rounds a number down.",
        "name": "floor",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "floored numbers",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The base value.",
            "name": "base",
            "type": "number"
          },
          {
            "description": "The modulator.",
            "name": "modulator",
            "type": "number"
          }
        ],
        "description": "Returns the modulus of the specified values.\n\nWhile this is similar to the `%` operator, **it will return a negative value if the first argument is negative**, whereas the % operator will return a **positive** value **even if the first operand is negative**.\n\nThis function is also slower than the `%` operator.",
        "name": "fmod",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The calculated modulus.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The value to get the normalized fraction and the exponent from.",
            "name": "x",
            "type": "number"
          }
        ],
        "description": "**Lua reference description**: Returns `m` and `e` such that `x = m2e`, `e` is an integer and the absolute value of `m` is in the range ((0.5, 1) (or zero when x is zero).\n\nUsed to split the number value into a normalized fraction and an exponent. Two values are returned: the first is a multiplier in the range `1/2` (**inclusive**) to `1` (**exclusive**) and the second is an integer exponent.\n\nThe result is such that `x = m*2^e`.",
        "name": "frexp",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "m, multiplier - between `0.5` and `1`.",
            "type": "number"
          },
          {
            "description": "e, exponent - **always** an integer.",
            "type": "number"
          }
        ]
      },
      {
        "description": "A variable that effectively represents infinity, in the sense that in any numerical comparison every number will be less than this.\n\nFor example, if `x` is a number, `x &gt; math.huge` will **NEVER** be `true` except in the case of overflow (see below).\n\nLua will consider any number greater than or equal to `2^1024` (the exponent limit of a [double](http://en.wikipedia.org/wiki/Double-precision_floating-point_format)) as `inf` and hence equal to this.",
        "name": "huge",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The effective infinity.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Number to be converted.",
            "name": "int",
            "type": "number"
          }
        ],
        "description": "Converts an integer to a binary (base-2) string.",
        "name": "IntToBin",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Binary number string. The length of this will always be a multiple of 3.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 47,
          "lineStart": 44
        }
      },
      {
        "arguments": [
          {
            "description": "The first number to compare.",
            "name": "a",
            "type": "number"
          },
          {
            "description": "The second number to compare.",
            "name": "b",
            "type": "number"
          },
          {
            "default": "1e-8",
            "description": "The maximum difference between the two numbers to consider them equal.",
            "name": "tolerance",
            "type": "number"
          }
        ],
        "description": "Checks if two floating point numbers are nearly equal.\n\nThis is useful to mitigate  [accuracy issues in floating point numbers](https://en.wikipedia.org/wiki/Floating-point_arithmetic#Accuracy_problems). See examples below.",
        "name": "IsNearlyEqual",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "True if the difference between the two numbers is less than or equal to the tolerance.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 281,
          "lineStart": 275
        }
      },
      {
        "arguments": [
          {
            "description": "The value to get the normalized fraction and the exponent from.",
            "name": "normalizedFraction",
            "type": "number"
          },
          {
            "description": "The value to get the normalized fraction and the exponent from.",
            "name": "exponent",
            "type": "number"
          }
        ],
        "description": "Takes a normalised number and returns the floating point representation.\n\nEffectively it returns the result of `normalizedFraction * 2.0 ^ exponent`. <page>math.frexp</page> is the opposite function.",
        "name": "ldexp",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "result",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The value to get the base from exponent from.",
            "name": "x",
            "type": "number"
          },
          {
            "default": "e",
            "description": "The logarithmic base.",
            "name": "base",
            "type": "number"
          }
        ],
        "description": "With one argument, return the natural logarithm of x (to base e).\n\nWith two arguments, return the logarithm of x to the given base, calculated as log(x)/log(base).",
        "name": "log",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Logarithm of x to the given base",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The value to get the base from exponent from.",
            "name": "x",
            "type": "number"
          }
        ],
        "description": "Returns the base-10 logarithm of x. This is usually more accurate than math.log(x, 10).",
        "name": "log10",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The result.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Numbers to get the largest from",
            "name": "numbers",
            "type": "vararg"
          }
        ],
        "description": "Returns the largest value of all arguments.",
        "name": "max",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The largest number",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Numbers to get the smallest from.",
            "name": "numbers",
            "type": "vararg"
          }
        ],
        "description": "Returns the smallest value of all arguments.",
        "name": "min",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The smallest number",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The base value",
            "name": "base",
            "type": "number"
          },
          {
            "description": "Modulator",
            "name": "modulator",
            "type": "number"
          }
        ],
        "description": "<deprecated>This is removed in Lua versions later than what GMod is currently using. You should use the % operator or <page>math.fmod</page> instead.</deprecated>\n\nReturns the modulus of the specified values. Same as <page>math.fmod</page>.",
        "name": "mod",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The calculated modulus",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The base value.",
            "name": "base",
            "type": "number"
          }
        ],
        "description": "Returns the integral and fractional component of the modulo operation.",
        "name": "modf",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The integral component.",
            "type": "number"
          },
          {
            "description": "The fractional component.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The angle to normalize, in degrees.",
            "name": "angle",
            "type": "number"
          }
        ],
        "description": "Normalizes angle, so it returns value between -180 and 180.",
        "name": "NormalizeAngle",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The normalized angle, in the range of -180 to 180 degrees.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 187,
          "lineStart": 185
        }
      },
      {
        "description": "A variable containing the mathematical constant pi. (`3.1415926535898`)\n\nSee also: <page>Trigonometry</page>\n\n<note>It should be noted that due to the nature of floating point numbers, results of calculations with `math.pi` may not be what you expect. See second example below.</note>",
        "name": "pi",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The mathematical constant, Pi.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Base.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "Exponent.",
            "name": "y",
            "type": "number"
          }
        ],
        "description": "Returns x raised to the power y.\nIn particular, math.pow(1.0, x) and math.pow(x, 0.0) always return 1.0, even when x is a zero or a <page>nan</page>. If both x and y are finite, x is negative, and y is not an integer then math.pow(x, y) is undefined.",
        "name": "pow",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "y power of x",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The fraction for finding the result.",
            "name": "frac",
            "type": "number"
          },
          {
            "description": "First control point",
            "name": "p0",
            "type": "Vector"
          },
          {
            "description": "Tangent",
            "name": "p1",
            "type": "Vector"
          },
          {
            "description": "Second control point",
            "name": "p2",
            "type": "Vector"
          }
        ],
        "description": "Lerp point between 3 control points with quadratic bezier.\n\nSee <page>math.CubicBezier</page> for a function which works with 4 control points.",
        "name": "QuadraticBezier",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Point between control points at the specified fraction",
            "type": "Vector"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 238,
          "lineStart": 232
        }
      },
      {
        "arguments": [
          {
            "description": "The angle measured in degrees.",
            "name": "degrees",
            "type": "number"
          }
        ],
        "description": "Converts an angle in degrees to it's equivalent in radians.",
        "name": "rad",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "radians",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The minimum value.",
            "name": "min",
            "type": "number"
          },
          {
            "description": "The maximum value.",
            "name": "max",
            "type": "number"
          }
        ],
        "description": "Returns a random float between min and max.\n\nSee also <page>math.random</page>",
        "name": "Rand",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Random float between min and max.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 63,
          "lineStart": 61
        }
      },
      {
        "arguments": [
          {
            "default": "nil",
            "description": "If m is the only parameter: upper limit.\n\nIf n is also provided: lower limit.\n\nIf provided, this must be an integer.",
            "name": "m",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "Upper limit.\n\nIf provided, this must be an integer.",
            "name": "n",
            "type": "number"
          }
        ],
        "description": "When called without arguments, returns a uniform pseudo-random real number in the range 0 to 1 which includes 0 but excludes 1.\n\nWhen called with an integer number m, returns a uniform pseudo-random integer in the range 1 to m inclusive.\n\nWhen called with two integer numbers m and n, returns a uniform pseudo-random integer in the range m to n inclusive.\n\nSee also <page>math.Rand</page>",
        "name": "random",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Random value",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The new seed",
            "name": "seed",
            "type": "number"
          }
        ],
        "description": "Seeds the random number generator. The same seed will guarantee the same sequence of numbers each time with <page>math.random</page>.\n\nFor shared random values across predicted realms, use <page>util.SharedRandom</page>.\n\n<warning>Incorrect usage of this function will affect `all` random numbers in the game.</warning>",
        "name": "randomseed",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The value",
            "name": "value",
            "type": "number"
          },
          {
            "description": "The minimum of the initial range",
            "name": "inMin",
            "type": "number"
          },
          {
            "description": "The maximum of the initial range",
            "name": "inMax",
            "type": "number"
          },
          {
            "description": "The minimum of new range",
            "name": "outMin",
            "type": "number"
          },
          {
            "description": "The maximum of new range",
            "name": "outMax",
            "type": "number"
          }
        ],
        "description": "Remaps the value from one range to another",
        "name": "Remap",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The number in the new range",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 209,
          "lineStart": 207
        }
      },
      {
        "arguments": [
          {
            "description": "The value to round.",
            "name": "value",
            "type": "number"
          },
          {
            "default": "0",
            "description": "The decimal places to round to.",
            "name": "decimals",
            "type": "number"
          }
        ],
        "description": "Rounds the given value to the nearest whole number or to the given decimal places.",
        "name": "Round",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The rounded value.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 165,
          "lineStart": 162
        }
      },
      {
        "arguments": [
          {
            "description": "Angle in radians",
            "name": "number",
            "type": "number"
          }
        ],
        "description": "Returns the [sine](https://en.wikipedia.org/wiki/Trigonometric_functions) of given angle.",
        "name": "sin",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Sine for given angle in the range (-1, 1)",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Angle in radians.",
            "name": "number",
            "type": "number"
          }
        ],
        "description": "Returns the [hyperbolic sine](https://en.wikipedia.org/wiki/Hyperbolic_functions) of the given angle.",
        "name": "sinh",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The hyperbolic sine of the given angle.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The number to snap.",
            "name": "input",
            "type": "number"
          },
          {
            "description": "What to snap the input number to.",
            "name": "snapTo",
            "type": "number"
          }
        ],
        "description": "Snaps a number to the closest multiplicative of given number. See also <page>Angle:SnapTo</page>.",
        "name": "SnapTo",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The clamped value.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 214,
          "lineStart": 212
        }
      },
      {
        "arguments": [
          {
            "description": "Value to get the square root of.",
            "name": "value",
            "type": "number"
          }
        ],
        "description": "Returns the square root of the number.",
        "name": "sqrt",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "squareRoot",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Angle in radians",
            "name": "value",
            "type": "number"
          }
        ],
        "description": "Returns the tangent of the given angle.",
        "name": "tan",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The tangent of the given angle.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Angle in radians.",
            "name": "number",
            "type": "number"
          }
        ],
        "description": "Returns the [hyperbolic tangent](https://en.wikipedia.org/wiki/Hyperbolic_functions) of the given number.",
        "name": "tanh",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The hyperbolic tangent of the given angle.",
            "type": "number"
          }
        ]
      },
      {
        "description": "A variable containing the mathematical constant tau, which is equivalent to 2*<page>math.pi</page>. (`6.28318530718`)\n\nSee also: <page>Trigonometry</page>\n\n<note>It should be noted that due to the nature of floating point numbers, results of calculations with `math.tau` may not be what you expect. See the second example on <page>math.pi</page> page.</note>",
        "name": "tau",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The mathematical constant, Tau.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Start time in seconds",
            "name": "start",
            "type": "number"
          },
          {
            "description": "End time in seconds",
            "name": "end",
            "type": "number"
          },
          {
            "description": "Current time in seconds",
            "name": "current",
            "type": "number"
          }
        ],
        "description": "Returns the fraction of where the current time is relative to the start and end times",
        "name": "TimeFraction",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Fraction",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 205,
          "lineStart": 203
        }
      },
      {
        "arguments": [
          {
            "description": "The number to truncate",
            "name": "num",
            "type": "number"
          },
          {
            "default": "0",
            "description": "The amount of digits to keep after the point.",
            "name": "digits",
            "type": "number"
          }
        ],
        "description": "Trim unwanted decimal places.",
        "name": "Truncate",
        "parent": "math",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The result.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/math.lua",
          "lineEnd": 171,
          "lineStart": 168
        }
      }
    ],
    "name": "math"
  },
  {
    "description": "A library that allows implementing custom [material proxies](https://developer.valvesoftware.com/wiki/Material_proxies) for materials.\n\nMaterial proxies allow programmatically setting specific `.vmt` shader parameters on a per-entity basis, rather being global across all instances of a material.",
    "functions": [
      {
        "description": "<internal></internal>A list of all **active** material proxies.",
        "name": "ActiveList",
        "parent": "matproxy",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The list of all active material proxies.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The information about the proxy. See <page>Structures/MatProxyData</page>",
            "name": "matProxyData",
            "type": "table"
          }
        ],
        "description": "Register a material proxy. See <page>matproxy</page> for more general explanation of what they are.\n<note>The `bind` function is required. The `init` function won't run without it set.</note>",
        "name": "Add",
        "parent": "matproxy",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/matproxy.lua",
          "lineEnd": 45,
          "lineStart": 20
        }
      },
      {
        "arguments": [
          {
            "description": "The material proxy name.",
            "name": "uname",
            "type": "string"
          },
          {
            "description": "The material the proxy is being applied to.",
            "name": "mat",
            "type": "IMaterial"
          },
          {
            "description": "The entity the material is applied to.",
            "name": "ent",
            "type": "Entity"
          }
        ],
        "description": "<internal></internal>\nCalled by the engine from `OnBind`. Calls <page text=\"bind\">Structures/MatProxyData#bind</page> method of the Lua material proxy.",
        "name": "Call",
        "parent": "matproxy",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/matproxy.lua",
          "lineEnd": 58,
          "lineStart": 50
        }
      },
      {
        "arguments": [
          {
            "description": "Name of the material proxy.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Name for the active material proxy instance.",
            "name": "uname",
            "type": "string"
          },
          {
            "description": "Material the material proxy is applied to.",
            "name": "mat",
            "type": "IMaterial"
          },
          {
            "description": "`.vmt` shader parameters of the material.",
            "name": "values",
            "type": "table"
          }
        ],
        "description": "<internal></internal>\nCalled by the engine from `OnBind`. Calls <page text=\"init\">Structures/MatProxyData#init</page> method of the Lua material proxy.",
        "name": "Init",
        "parent": "matproxy",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/matproxy.lua",
          "lineEnd": 79,
          "lineStart": 63
        }
      },
      {
        "description": "A list of all material proxies registered with <page>matproxy.Add</page>.",
        "name": "ProxyList",
        "parent": "matproxy",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The list of all material proxies.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of proxy in question",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "<internal></internal>\nCalled by engine to determine if a certain material proxy is registered in Lua.",
        "name": "ShouldOverrideProxy",
        "parent": "matproxy",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Whether the material proxy of given name is registered.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/matproxy.lua",
          "lineEnd": 15,
          "lineStart": 11
        }
      }
    ],
    "name": "matproxy"
  },
  {
    "description": "The menu library.",
    "functions": [
      {
        "description": "<internal></internal>\n\nUsed by \"Demo to Video\" to record the frame.",
        "name": "RecordFrame",
        "parent": "menu",
        "realms": [
          "client"
        ]
      }
    ],
    "name": "menu"
  },
  {
    "description": "The menubar library.",
    "functions": [
      {
        "description": "Creates the menu bar ( The bar at the top of the screen when holding C or Q in sandbox ) and docks it to the top of the screen. It will not appear.\n\n\nCalling this multiple times will **NOT** remove previous panel.",
        "name": "Init",
        "parent": "menubar",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The panel to check",
            "name": "pnl",
            "type": "Panel"
          }
        ],
        "description": "Checks if the supplied panel is parent to the menubar",
        "name": "IsParent",
        "parent": "menubar",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Is parent or not",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The panel to parent to",
            "name": "pnl",
            "type": "Panel"
          }
        ],
        "description": "Parents the menubar to the panel and displays the menubar.",
        "name": "ParentTo",
        "parent": "menubar",
        "realms": [
          "client"
        ]
      }
    ],
    "name": "menubar"
  },
  {
    "description": "The mesh library allows you to create meshes. A mesh is a set of vertices that define a 3D shape, for constant meshes you should use the <page>IMesh</page> object instead.",
    "functions": [
      {
        "description": "Pushes the currently set vertex data (via other `mesh.*` functions) into the mesh stack. See example on <page>mesh.Begin</page>.",
        "name": "AdvanceVertex",
        "parent": "mesh",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The <page>IMesh</page> that the created mesh will be stored in.\n\nIf the mesh has already been built, it will instead have its existing verticies modified but cannot have the quantity of vertices changed.",
            "name": "mesh",
            "type": "IMesh"
          },
          {
            "description": "An enum that indicates what the format of the mesh's primitives will be.\nFor a full list of the available options, see the <page>Enums/MATERIAL</page>.",
            "name": "primitiveType",
            "type": "number"
          },
          {
            "description": "The quantity of primitives this mesh will contain as a whole integer number.\n\nThe total number of vertices must not exceed the limit of `32768`.\nThe number of vertices created by each primitive will depend on the type of primitive used to construct the mesh.\n\nThe expected value of this argument is dependent on the primitive type used.\nFor a full list of the primitive counts expected by each primitive type, see <page>Enums/MATERIAL</page>.",
            "name": "primitiveCount",
            "type": "number"
          }
        ],
        "description": "Begins creating or modifying a 3D mesh constructed from a given quantity and type of primitive 3D shapes such as triangles and quads.\n\nThe resulting mesh can be stored in an <page>IMesh</page> if it is intended to be drawn multiple times or on multiple frames.",
        "name": "Begin",
        "overloads": [
          {
            "arguments": [
              {
                "description": "An enum that indicates what the format of the mesh's primitives will be.\nFor a full list of the available options, see the <page>Enums/MATERIAL</page>.",
                "name": "primitiveType",
                "type": "number"
              },
              {
                "description": "The quantity of primitives this mesh will contain as a whole integer number.\n\nThe total number of vertices must not exceed the limit of `32768`.\nThe number of vertices created by each primitive will depend on the type of primitive used to construct the mesh.\n\nThe expected value of this argument is dependent on the primitive type used.\nFor a full list of the primitive counts expected by each primitive type, see <page>Enums/MATERIAL</page>.",
                "name": "primitiveCount",
                "type": "number"
              }
            ]
          }
        ],
        "parent": "mesh",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Red component.",
            "name": "r",
            "type": "number"
          },
          {
            "description": "Green component.",
            "name": "g",
            "type": "number"
          },
          {
            "description": "Blue component.",
            "name": "b",
            "type": "number"
          },
          {
            "description": "Alpha component.",
            "name": "a",
            "type": "number"
          }
        ],
        "description": "Sets the color to be used for the next vertex. See <page>mesh.Begin</page>.",
        "name": "Color",
        "parent": "mesh",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Ends the mesh (Started with <page>mesh.Begin</page>) and renders it.",
        "name": "End",
        "parent": "mesh",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The normal of the vertex.",
            "name": "normal",
            "type": "Vector"
          }
        ],
        "description": "Sets the normal to be used for the next vertex. See <page>mesh.Begin</page>.",
        "name": "Normal",
        "overloads": [
          {
            "arguments": [
              {
                "description": "The X part of the vertex normal.",
                "name": "x",
                "type": "number"
              },
              {
                "description": "The Y part of the vertex normal.",
                "name": "y",
                "type": "number"
              },
              {
                "description": "The Z part of the vertex normal.",
                "name": "z",
                "type": "number"
              }
            ]
          }
        ],
        "parent": "mesh",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The position of the vertex.",
            "name": "position",
            "type": "Vector"
          }
        ],
        "description": "Sets the position to be used for the next vertex. See <page>mesh.Begin</page>.",
        "name": "Position",
        "overloads": [
          {
            "arguments": [
              {
                "description": "The X position of the vertex.",
                "name": "x",
                "type": "number"
              },
              {
                "description": "The Y position of the vertex.",
                "name": "y",
                "type": "number"
              },
              {
                "description": "The Z position of the vertex.",
                "name": "z",
                "type": "number"
              }
            ]
          }
        ],
        "parent": "mesh",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The first vertex.",
            "name": "vertex1",
            "type": "Vector"
          },
          {
            "description": "The second vertex.",
            "name": "vertex2",
            "type": "Vector"
          },
          {
            "description": "The third vertex.",
            "name": "vertex3",
            "type": "Vector"
          },
          {
            "description": "The fourth vertex.",
            "name": "vertex4",
            "type": "Vector"
          },
          {
            "description": "The color for the vertices.",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Adds a quad (4 vertices) to the currently built mesh. See <page>mesh.Begin</page>.",
        "name": "Quad",
        "parent": "mesh",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The center of the quad.",
            "name": "position",
            "type": "Vector"
          },
          {
            "description": "The normal of the quad.",
            "name": "normal",
            "type": "Vector"
          },
          {
            "description": "X size in pixels.",
            "name": "sizeX",
            "type": "number"
          },
          {
            "description": "Y size in pixels.",
            "name": "sizeY",
            "type": "number"
          },
          {
            "description": "The color for the vertices.",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Adds a quad (4 vertices) to the currently built mesh, by using position, normal and sizes. See <page>mesh.Begin</page>.\n\nSee also <page>mesh.Quad</page>.",
        "name": "QuadEasy",
        "parent": "mesh",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The red channel multiplier of the specular map.",
            "name": "r",
            "type": "number"
          },
          {
            "description": "The green channel multiplier of the specular map.",
            "name": "g",
            "type": "number"
          },
          {
            "description": "The blue channel multiplier of the specular map.",
            "name": "b",
            "type": "number"
          },
          {
            "description": "The alpha channel multiplier of the specular map.",
            "name": "a",
            "type": "number"
          }
        ],
        "description": "Sets the specular map values.\n\nThere is no known use case for this function.",
        "name": "Specular",
        "parent": "mesh",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The S tangent.",
            "name": "tangentS",
            "type": "Vector"
          }
        ],
        "description": "Sets the `S` tangent to be used, also known as \"binormal\".\n\nTangents and binormals are using in bumpmap rendering.\n\nSee also <page>mesh.TangentT</page> and <page>mesh.Begin</page>.",
        "name": "TangentS",
        "overloads": [
          {
            "arguments": [
              {
                "description": "The X part of the vertex' tangent S.",
                "name": "x",
                "type": "number"
              },
              {
                "description": "The Y part of the vertex' tangent S.",
                "name": "y",
                "type": "number"
              },
              {
                "description": "The Z part of the vertex' tangent S.",
                "name": "z",
                "type": "number"
              }
            ]
          }
        ],
        "parent": "mesh",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The T tangent.",
            "name": "tangentT",
            "type": "Vector"
          }
        ],
        "description": "Sets the `T` tangent to be used.\n\nTangents and binormals are using in bumpmap rendering.\n\nSee also <page>mesh.TangentS</page> and <page>mesh.Begin</page>.",
        "name": "TangentT",
        "overloads": [
          {
            "arguments": [
              {
                "description": "The X part of the vertex' tangent T.",
                "name": "x",
                "type": "number"
              },
              {
                "description": "The Y part of the vertex' tangent T.",
                "name": "y",
                "type": "number"
              },
              {
                "description": "The Z part of the vertex' tangent T.",
                "name": "z",
                "type": "number"
              }
            ]
          }
        ],
        "parent": "mesh",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The texture coordinate set, 0 to 7.\n\nNon-zero values require the currently bound material to support it. For example, any `LightmappedGeneric` material supports sets 1 and 2 (lightmap texture coordinates and bump map texture coords?).",
            "name": "set",
            "type": "number"
          },
          {
            "description": "U coordinate.",
            "name": "u",
            "type": "number"
          },
          {
            "description": "V coordinate.",
            "name": "v",
            "type": "number"
          }
        ],
        "description": "Sets the texture coordinates for the next vertex.",
        "name": "TexCoord",
        "parent": "mesh",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "",
            "name": "tangentX",
            "type": "number"
          },
          {
            "description": "",
            "name": "tangentY",
            "type": "number"
          },
          {
            "description": "",
            "name": "tangentZ",
            "type": "number"
          },
          {
            "description": "",
            "name": "tangentHandedness",
            "type": "number"
          }
        ],
        "description": "A set of four numbers that can be used for arbitrary purposes by <page>Material</page> shaders.\nThis is most commonly used to provide tangent information about each vertex to the Material's shader.",
        "name": "UserData",
        "parent": "mesh",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Returns the amount of vertices that have been pushed via <page>mesh.AdvanceVertex</page>.",
        "name": "VertexCount",
        "parent": "mesh",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The amount of vertices.",
            "type": "number"
          }
        ]
      }
    ],
    "name": "mesh"
  },
  {
    "description": "Functions related to Kinect for Windows usage in GMod.\n<warning>Kinect feature works only on 32-bit version of the game.</warning>",
    "functions": [
      {
        "arguments": [
          {
            "description": "`list.Get( \"SkeletonConvertor\" )` and <page>motionsensor.ChooseBuilderFromEntity</page>.",
            "name": "translator",
            "type": "table"
          },
          {
            "description": "The player to get motion sensor positions from.",
            "name": "player",
            "type": "Player"
          },
          {
            "description": "Global rotation of the player?",
            "name": "rotation",
            "type": "Angle"
          }
        ],
        "description": "<internal></internal> Called to build the skeleton. See <page>Using The Kinect</page> and <page>Kinect developing</page>.",
        "name": "BuildSkeleton",
        "parent": "motionsensor",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Position",
            "type": "Vector"
          },
          {
            "description": "Angles",
            "type": "Angle"
          },
          {
            "description": "Sensor",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/motionsensor.lua",
          "lineEnd": 260,
          "lineStart": 221
        }
      },
      {
        "arguments": [
          {
            "description": "Entity to choose builder for",
            "name": "ent",
            "type": "Entity"
          }
        ],
        "name": "ChooseBuilderFromEntity",
        "parent": "motionsensor",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Chosen builder. The builders are stored in `list.Get( \"SkeletonConvertor\" )`",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/motionsensor.lua",
          "lineEnd": 58,
          "lineStart": 46
        }
      },
      {
        "description": "Returns the depth map material.",
        "name": "GetColourMaterial",
        "parent": "motionsensor",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The material",
            "type": "IMaterial"
          }
        ]
      },
      {
        "description": "Returns players skeletal data if they are using Kinect. See <page>Using The Kinect</page> and <page>Kinect developing</page>.",
        "name": "GetSkeleton",
        "parent": "motionsensor",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The skeleton data.",
            "type": "table"
          }
        ]
      },
      {
        "description": "Return whether a kinect is connected - and active (ie - Start has been called).",
        "name": "IsActive",
        "parent": "motionsensor",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Connected and active or not",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Returns true if we have detected that there's a kinect connected to the PC",
        "name": "IsAvailable",
        "parent": "motionsensor",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Connected or not",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "",
            "name": "translator",
            "type": "table"
          },
          {
            "description": "",
            "name": "sensor",
            "type": "table"
          },
          {
            "description": "",
            "name": "pos",
            "type": "Vector"
          },
          {
            "description": "",
            "name": "ang",
            "type": "Angle"
          },
          {
            "description": "",
            "name": "special_vectors",
            "type": "table"
          },
          {
            "description": "",
            "name": "boneid",
            "type": "number"
          },
          {
            "description": "",
            "name": "v",
            "type": "table"
          }
        ],
        "description": "<internal></internal> Used internally by <page>motionsensor.ProcessAnglesTable</page>. See <page>Using The Kinect</page> and <page>Kinect developing</page>.",
        "name": "ProcessAngle",
        "parent": "motionsensor",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Return nil on failure",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/motionsensor.lua",
          "lineEnd": 121,
          "lineStart": 60
        }
      },
      {
        "arguments": [
          {
            "description": "",
            "name": "translator",
            "type": "table"
          },
          {
            "description": "",
            "name": "sensor",
            "type": "table"
          },
          {
            "description": "",
            "name": "pos",
            "type": "Vector"
          },
          {
            "description": "",
            "name": "rotation",
            "type": "Angle"
          }
        ],
        "description": "<internal></internal> Used internally by <page>motionsensor.BuildSkeleton</page>. See <page>Using The Kinect</page> and <page>Kinect developing</page>.",
        "name": "ProcessAnglesTable",
        "parent": "motionsensor",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Ang. If `!translator.AnglesTable` then `return {}`",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/motionsensor.lua",
          "lineEnd": 190,
          "lineStart": 126
        }
      },
      {
        "arguments": [
          {
            "description": "",
            "name": "translator",
            "type": "table"
          },
          {
            "description": "",
            "name": "sensor",
            "type": "table"
          }
        ],
        "description": "<internal></internal> Used internally by <page>motionsensor.BuildSkeleton</page>. See <page>Using The Kinect</page> and <page>Kinect developing</page>.",
        "name": "ProcessPositionTable",
        "parent": "motionsensor",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Positions. if `!translator.PositionTable` then return - `{}`",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/motionsensor.lua",
          "lineEnd": 216,
          "lineStart": 195
        }
      },
      {
        "description": "This starts access to the kinect sensor. Note that this usually freezes the game for a couple of seconds.",
        "name": "Start",
        "parent": "motionsensor",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "`true` if the access has been started",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Stops the motion capture.",
        "name": "Stop",
        "parent": "motionsensor",
        "realms": [
          "client"
        ]
      }
    ],
    "name": "motionsensor"
  },
  {
    "description": "The navigation mesh library. To be used with <page>CNavArea</page>.\n\nThe navigation mesh is used by <page>NextBot</page> to calculate path to its target.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The terrain position.",
            "name": "pos",
            "type": "Vector"
          },
          {
            "description": "The normal of this terrain position.",
            "name": "dir",
            "type": "Vector"
          }
        ],
        "description": "Add this position and normal to the list of walkable positions, used before map generation with <page>navmesh.BeginGeneration</page>",
        "name": "AddWalkableSeed",
        "parent": "navmesh",
        "realms": [
          "server"
        ]
      },
      {
        "description": "Starts the generation of a new navmesh.\n\n<note>This process is highly resource intensive and it's not wise to use during normal gameplay</note>",
        "name": "BeginGeneration",
        "parent": "navmesh",
        "realms": [
          "server"
        ]
      },
      {
        "description": "Clears all the walkable positions, used before calling <page>navmesh.BeginGeneration</page>.",
        "name": "ClearWalkableSeeds",
        "parent": "navmesh",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The first corner of the new <page>CNavArea</page>",
            "name": "corner",
            "type": "Vector"
          },
          {
            "description": "The opposite (diagonally) corner of the new <page>CNavArea</page>",
            "name": "opposite_corner",
            "type": "Vector"
          }
        ],
        "description": "Creates a new <page>CNavArea</page>.",
        "name": "CreateNavArea",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The new <page>CNavArea</page> or <page>nil</page> if we failed for some reason.",
            "type": "CNavArea"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The top position of the ladder.",
            "name": "top",
            "type": "Vector"
          },
          {
            "description": "The bottom position of the ladder.",
            "name": "bottom",
            "type": "Vector"
          },
          {
            "description": "Width for the new ladder.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "Directional vector in which way the ladder should be facing. Please note that ladders can only face in the 4 cardinal directions - NORTH, SOUTH, WEST, EAST.",
            "name": "dir",
            "type": "Vector"
          },
          {
            "default": "0",
            "description": "If above 0, will limit how much the top of the ladder can be adjusted to the closest <page>CNavArea</page> when automatically connecting the newly created ladder to pre-existing nav areas.",
            "name": "maxHeightAboveTopArea",
            "type": "number"
          }
        ],
        "description": "Creates a new <page>CNavLadder</page>.",
        "name": "CreateNavLadder",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The new <page>CNavLadder</page> or <page>nil</page> if we failed for some reason.",
            "type": "CNavLadder"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The position to search around. This position will be used to find the closest area to search from.",
            "name": "pos",
            "type": "Vector"
          },
          {
            "description": "Radius to search within",
            "name": "radius",
            "type": "number"
          },
          {
            "description": "Maximum step up height allowed",
            "name": "stepHeight",
            "type": "number"
          },
          {
            "description": "Maximum step down (fall distance) allowed",
            "name": "dropHeight",
            "type": "number"
          }
        ],
        "description": "Returns a list of areas within distance, used to find hiding spots by <page>NextBot</page>s for example.",
        "name": "Find",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "A list of found <page>CNavArea</page>s.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The start position of the cube to search in.",
            "name": "pos1",
            "type": "Vector"
          },
          {
            "description": "The \"end\" position of the cube to search in. This is the opposite corner of the cube, diagonally.",
            "name": "pos2",
            "type": "Vector"
          }
        ],
        "description": "Returns a list of <page>CNavArea</page>s overlapping the given cube extents.",
        "name": "FindInBox",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "A list of found <page>CNavArea</page>s.",
            "type": "table"
          }
        ]
      },
      {
        "description": "Returns an integer indexed table of all <page>CNavArea</page>s on the current map. If the map doesn't have a navmesh generated then this will return an empty table.",
        "name": "GetAllNavAreas",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of all the <page>CNavArea</page>s on the current map.",
            "type": "table<CNavArea>"
          }
        ]
      },
      {
        "description": "Returns a table of all blocked <page>CNavArea</page>s on the current map. See <page>CNavArea:MarkAsBlocked</page>.",
        "name": "GetBlockedAreas",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of all the blocked <page>CNavArea</page>s on the current map.",
            "type": "table"
          }
        ]
      },
      {
        "description": "Returns the position of the edit cursor when nav_edit is set to 1.",
        "name": "GetEditCursorPosition",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The position of the edit cursor.",
            "type": "Vector"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Position to find the closest ground for.",
            "name": "pos",
            "type": "Vector"
          }
        ],
        "description": "Finds the closest standable ground at, above, or below the provided position.\n\n<note>The ground must have at least 32 units of empty space above it to be considered by this function, unless 16 layers are tested without finding valid ground.</note>",
        "name": "GetGroundHeight",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The height of the ground layer.",
            "type": "number"
          },
          {
            "description": "The normal of the ground layer.",
            "type": "Vector"
          }
        ]
      },
      {
        "description": "Returns the currently marked <page>CNavArea</page>, for use with editing console commands.",
        "name": "GetMarkedArea",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The currently marked <page>CNavArea</page>.",
            "type": "CNavArea"
          }
        ]
      },
      {
        "description": "Returns the currently marked <page>CNavLadder</page>, for use with editing console commands.",
        "name": "GetMarkedLadder",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The currently marked <page>CNavLadder</page>.",
            "type": "CNavLadder"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The position to search for.",
            "name": "pos",
            "type": "Vector"
          },
          {
            "description": "The elevation limit at which the Nav Area will be searched.",
            "name": "beneathLimit",
            "type": "number"
          }
        ],
        "description": "Returns the Nav Area contained in this position that also satisfies the elevation limit.\n\nThis function will properly see blocked <page>CNavArea</page>s. See <page>navmesh.GetNearestNavArea</page>.",
        "name": "GetNavArea",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The nav area.",
            "type": "CNavArea"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "ID of the <page>CNavArea</page> to get. Starts with 1.",
            "name": "id",
            "type": "number"
          }
        ],
        "description": "Returns a <page>CNavArea</page> by the given ID.\n\n<note>Avoid calling this function every frame, as internally it does a lookup trough all the <page>CNavArea</page>s, call this once and store the result</note>",
        "name": "GetNavAreaByID",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The <page>CNavArea</page> with given ID.",
            "type": "CNavArea"
          }
        ]
      },
      {
        "description": "Returns the total count of nav areas on the map. If you want to get all nav areas, use <page>navmesh.GetAllNavAreas</page> instead as nav areas IDs are not always sequential.",
        "name": "GetNavAreaCount",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The total count of nav areas on the map.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "ID of the <page>CNavLadder</page> to get. Starts with 1.",
            "name": "id",
            "type": "number"
          }
        ],
        "description": "Returns a <page>CNavLadder</page> by the given ID.",
        "name": "GetNavLadderByID",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The <page>CNavLadder</page> with given ID.",
            "type": "CNavLadder"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The position to look from",
            "name": "pos",
            "type": "Vector"
          },
          {
            "default": "false",
            "description": "This argument is ignored and has no effect",
            "name": "anyZ",
            "type": "boolean"
          },
          {
            "default": "10000",
            "description": "This is the maximum distance from the given position that the function will look for a <page>CNavArea</page>",
            "name": "maxDist",
            "type": "number"
          },
          {
            "default": "false",
            "description": "If this is set to true then the function will internally do a <page>util.TraceLine</page> from the starting position to each potential <page>CNavArea</page> with a [MASK_NPCSOLID_BRUSHONLY](https://wiki.facepunch.com/gmod/Enums/MASK). If the trace fails then the <page>CNavArea</page> is ignored.\n\nIf this is set to false then the function will find the closest <page>CNavArea</page> through anything, including the world.",
            "name": "checkLOS",
            "type": "boolean"
          },
          {
            "default": "true",
            "description": "If checkGround is true then this function will internally call <page>navmesh.GetNavArea</page> to check if there is a <page>CNavArea</page> directly below the position, and return it if so, before checking anywhere else.",
            "name": "checkGround",
            "type": "boolean"
          },
          {
            "default": "TEAM_ANY=-2",
            "description": "This will internally call <page>CNavArea:IsBlocked</page> to check if the target <page>CNavArea</page> is not to be navigated by the given team. Currently this appears to do nothing.",
            "name": "team",
            "type": "number"
          }
        ],
        "description": "Returns the closest <page>CNavArea</page> to given position at the same height, or beneath it.\n\nThis function will ignore blocked <page>CNavArea</page>s. See <page>navmesh.GetNavArea</page> for a function that does see blocked areas.",
        "name": "GetNearestNavArea",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The closest <page>CNavArea</page> found with the given parameters, or a NULL <page>CNavArea</page> if one was not found.",
            "type": "CNavArea"
          }
        ]
      },
      {
        "description": "Returns the classname of the player spawn entity.",
        "name": "GetPlayerSpawnName",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The classname of the spawn point entity. By default returns \"info_player_start\"",
            "type": "string"
          }
        ]
      },
      {
        "description": "Whether we're currently generating a new navmesh with <page>navmesh.BeginGeneration</page>.",
        "name": "IsGenerating",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether we're generating a nav mesh or not.",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Returns true if a navmesh has been loaded when loading the map.",
        "name": "IsLoaded",
        "parent": "navmesh",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether a navmesh has been loaded when loading the map.",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Loads a new navmesh from the .nav file for current map discarding any changes made to the navmesh previously.\n<warning>\nCalling this function too soon, causes the Server to crash!\n</warning>",
        "name": "Load",
        "parent": "navmesh",
        "realms": [
          "server"
        ]
      },
      {
        "description": "Deletes every <page>CNavArea</page> and <page>CNavLadder</page> on the map **without saving the changes**.",
        "name": "Reset",
        "parent": "navmesh",
        "realms": [
          "server"
        ]
      },
      {
        "description": "Saves any changes made to navmesh to the .nav file.",
        "name": "Save",
        "parent": "navmesh",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The <page>CNavArea</page> to set as the marked area.",
            "name": "area",
            "type": "CNavArea"
          }
        ],
        "description": "Sets the <page>CNavArea</page> as marked, so it can be used with editing console commands.",
        "name": "SetMarkedArea",
        "parent": "navmesh",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The <page>CNavLadder</page> to set as the marked ladder.",
            "name": "area",
            "type": "CNavLadder"
          }
        ],
        "description": "Sets the <page>CNavLadder</page> as marked, so it can be used with editing console commands.",
        "name": "SetMarkedLadder",
        "parent": "navmesh",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The classname of what the player uses to spawn, automatically adds it to the walkable positions during map generation.",
            "name": "spawnPointClass",
            "type": "string"
          }
        ],
        "description": "Sets the classname of the default spawn point entity, used before generating a new navmesh with <page>navmesh.BeginGeneration</page>.",
        "name": "SetPlayerSpawnName",
        "parent": "navmesh",
        "realms": [
          "server"
        ]
      }
    ],
    "name": "navmesh"
  },
  {
    "description": "The net library is one of a number of ways to send data between the client and server.\n\nThe major advantages of the net library are the large size limit (64kb/message) and the ability to send data backwards - from the client to the server.\n\nRefer to <page>Net Library Usage</page> for a short introduction.",
    "functions": [
      {
        "description": "Cancels a net message started by <page>net.Start</page>, so you can immediately start a new one without any errors.",
        "name": "Abort",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "description": "Sends the currently built net message (see <page>net.Start</page>) to all connected players.\nMore information can be found in <page>Net Library Usage</page>.",
        "name": "Broadcast",
        "parent": "net",
        "realms": [
          "server"
        ]
      },
      {
        "description": "Returns the amount of data left to read in the current message. Does nothing when sending data.\n\n<note>This will include 6 extra bits (or 1 byte rounded-up) used by the engine internally.</note>",
        "name": "BytesLeft",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The amount of data left to read in the current net message in **bytes**.\nReturns `nil` if no net message has been started.",
            "type": "number"
          },
          {
            "description": "The amount of data left to read in the current net message in **bits**.\nReturns `nil` if no net message has been started.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the size of the current message.\n\n<note>This will include 3 extra bytes (24 bits) used by the engine internally to send the data over the network.</note>",
        "name": "BytesWritten",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The amount of **bytes** written to the current net message.\nReturns `nil` if no net message has been started.",
            "type": "number"
          },
          {
            "description": "The amount of **bits** written to the current net message.\nReturns `nil` if no net message has been started.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The message length, in **bits**.",
            "name": "length",
            "type": "number"
          },
          {
            "description": "The player that sent the message. This will be `nil` in the client state.",
            "name": "client",
            "type": "Player"
          }
        ],
        "description": "<internal>You may be looking for <page>net.Receive</page>.</internal>\n\nFunction called by the engine to tell the Lua state a message arrived.",
        "name": "Incoming",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/net.lua",
          "lineEnd": 40,
          "lineStart": 23
        }
      },
      {
        "description": "Reads an angle from the received net message.\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadAngle",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The read angle, or `Angle( 0, 0, 0 )` if no angle could be read",
            "type": "Angle"
          }
        ]
      },
      {
        "description": "Reads a bit from the received net message.\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadBit",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "`0` or `1`, or `0` if the bit could not be read.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Reads a boolean from the received net message.\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadBool",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "`true` or `false`, or `false` if the bool could not be read.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/net.lua",
          "lineEnd": 51,
          "lineStart": 47
        }
      },
      {
        "arguments": [
          {
            "default": "true",
            "description": "If the color has alpha written or not. **Must match what was given to <page>net.WriteColor</page>.**",
            "name": "hasAlpha",
            "type": "boolean"
          }
        ],
        "description": "Reads a <page>Color</page> from the current net message.\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadColor",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The <page>Color</page> read from the current net message, or `Color( 0, 0, 0, 0 )` if the color could not be read.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/net.lua",
          "lineEnd": 131,
          "lineStart": 118
        }
      },
      {
        "arguments": [
          {
            "description": "The length of the data to be read, in **bytes**.",
            "name": "length",
            "type": "number"
          }
        ],
        "description": "Reads pure binary data from the message.\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadData",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The binary data read, or a string containing one character with a byte of `0` if no data could be read.",
            "type": "string"
          }
        ]
      },
      {
        "description": "Reads a double-precision number from the received net message.\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadDouble",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The double-precision number, or `0` if no number could be read.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Reads an entity from the received net message. You should always check if the specified entity exists as it may have been removed and therefore `NULL` if it is outside of the players [PVS (Potential Visibility Set)](https://developer.valvesoftware.com/wiki/PVS \"PVS - Valve Developer Community\") or was already removed.\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadEntity",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The entity, or `nil` if no entity could be read.",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/net.lua",
          "lineEnd": 73,
          "lineStart": 66
        }
      },
      {
        "description": "Reads a floating point number from the received net message.\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadFloat",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The floating point number, or `0` if no number could be read.",
            "type": "number"
          }
        ]
      },
      {
        "description": "<internal></internal>\n\nReads a word, basically unsigned short. This is used internally to read the \"header\" of the message which is an unsigned short which can be converted to the corresponding message name via <page>util.NetworkIDToString</page>.",
        "name": "ReadHeader",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The header number",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The amount of bits to be read.\n\nThis must be set to what you set to <page>net.WriteInt</page>. Read more information at <page>net.WriteInt</page>.",
            "name": "bitCount",
            "type": "number"
          }
        ],
        "description": "Reads an integer from the received net message.\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadInt",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The read integer number, or `0` if no integer could be read.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Reads a <page>VMatrix</page> from the received net message.\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadMatrix",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The matrix, or an empty matrix if no matrix could be read.",
            "type": "VMatrix"
          }
        ]
      },
      {
        "description": "Reads a normal vector from the net message.\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadNormal",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The normalized vector ( length = `1` ), or `Vector( 0, 0, 1 )` if no normal could be read.",
            "type": "Vector"
          }
        ]
      },
      {
        "description": "Reads a player entity that was written with <page>net.WritePlayer</page> from the received net message.\n\nYou should always check if the specified entity exists as it may have been removed and therefore `NULL` if it is outside of the local players [PVS](https://developer.valvesoftware.com/wiki/PVS) or was already removed.\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadPlayer",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The player, or throwed error if no entity could be read.",
            "type": "Player"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/net.lua",
          "lineEnd": 97,
          "lineStart": 89
        }
      },
      {
        "description": "Reads a [null-terminated string](https://en.wikipedia.org/wiki/Null-terminated_string) from the net stream. The size of the string is 8 bits plus 8 bits for every ASCII character in the string.\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadString",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The read string, or a string with `0` length if no string could be read.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "default": "false",
            "description": "Set to `true` if the input table is sequential. This saves on bandwidth.",
            "name": "sequential",
            "type": "boolean"
          }
        ],
        "description": "Reads a table from the received net message.\n\nSee <page>net.WriteTable</page> for extra info.\n\n<note>Sometimes when sending a table through the net library, the order of the keys may be switched. So be cautious when comparing (See example 1).\n\nYou may get `net.ReadType: Couldn't read type X` during the execution of the function, the problem is that you are sending objects that **cannot** be serialized/sent over the network.\n</note>\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadTable",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Table received via the net message, or a blank table if no table could be read.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/net.lua",
          "lineEnd": 195,
          "lineStart": 168
        }
      },
      {
        "arguments": [
          {
            "default": "net.ReadUInt(8)",
            "description": "The type of value to be read, using <page>Enums/TYPE</page>.",
            "name": "typeID",
            "type": "number"
          }
        ],
        "description": "<internal>Used internally by <page>net.ReadTable</page>.</internal>\n\nReads a value from the net message with the specified type, written by <page>net.WriteType</page>.\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadType",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The value, or the respective blank value based on the type you're reading if the value could not be read.",
            "type": "any"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/net.lua",
          "lineEnd": 250,
          "lineStart": 241
        }
      },
      {
        "arguments": [
          {
            "description": "The size of the integer to be read, in bits.\n\nThis must be set to what you set to <page>net.WriteUInt</page>. Read more information at <page>net.WriteUInt</page>.",
            "name": "bitCount",
            "type": "number"
          }
        ],
        "description": "Reads an unsigned integer with the specified number of bits from the received net message.\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadUInt",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The unsigned integer read, or `0` if the integer could not be read.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Reads a unsigned integer with 64 bits from the received net message.\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadUInt64",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The uint64 number.\n\n<note>Since Lua cannot store full 64-bit integers, this function returns a string. It is mainly aimed at usage with <page>Player:SteamID64</page>.</note>",
            "type": "string"
          }
        ]
      },
      {
        "description": "<internal></internal>\n\nA list of types that can be sent over the network via <page>net.ReadType</page>.",
        "name": "ReadVars",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Key = type ID (<page>Global.TypeID</page>), Value = function to send the data over the net.",
            "type": "table"
          }
        ]
      },
      {
        "description": "Reads a vector from the received net message. Vectors sent by this function are **compressed**, which may result in precision loss. See <page>net.WriteVector</page> for more information.\n\n<warning>You **must** read information in same order as you write it.</warning>",
        "name": "ReadVector",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The read vector, or `Vector( 0, 0, 0 )` if no vector could be read.",
            "type": "Vector"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The message name to hook to.\n\n<note>The message-name is converted to lower-case so the message-names \"`BigBlue`\" and \"`bigblue`\" would be equal.</note>",
            "name": "messageName",
            "type": "string"
          },
          {
            "description": "The function to be called if the specified message was received.\n\n<callback>\n<arg type=\"number\" name=\"len\">Length of the message, in bits.</arg>\n<arg type=\"Player\" name=\"ply\">The player that sent the message, works **only** server-side.</arg>\n</callback>",
            "name": "callback",
            "type": "function"
          }
        ],
        "description": "Adds a net message handler. Only one receiver can be used to receive the net message.\n\nYou can use the `net.Read*` functions within the message handler callback.\n\n<warning>You **should** put this function **outside** of any other function or hook for it to work properly unless you know what you are doing!\n\nYou **must** read information in the same order as you write it.\n\nEach net message has a length limit of **64KB**!</warning>",
        "name": "Receive",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/net.lua",
          "lineEnd": 18,
          "lineStart": 14
        }
      },
      {
        "description": "<internal></internal>\n\nThis is NOT a function, it's a table used internally by the net library to store net receivers added with <page>net.Receive</page>.\n\nThe key is the lowercase net message name and the value is the message's callback function.\n\n<note>Modifying <page>net.Receivers</page> won't affect the net string pool used in <page>util.AddNetworkString</page>.</note>",
        "name": "Receivers",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The list of all registered derma controls.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The player to send the message to.",
            "name": "ply",
            "type": "Player"
          }
        ],
        "description": "Sends the current net message to the specified player(s)",
        "name": "Send",
        "overloads": [
          {
            "arguments": [
              {
                "description": "A table of players to send the message to.",
                "name": "plys",
                "type": "table<Player>"
              }
            ]
          },
          {
            "arguments": [
              {
                "description": "A recipient filter specifying message targets.",
                "name": "filter",
                "type": "CRecipientFilter"
              }
            ]
          }
        ],
        "parent": "net",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The player to **NOT** send the message to.",
            "name": "ply",
            "type": "Player"
          }
        ],
        "description": "Sends the current message (see <page>net.Start</page>) to all except the player or players specified.",
        "name": "SendOmit",
        "overloads": [
          {
            "arguments": [
              {
                "description": "A table of players to **NOT** send the message to.",
                "name": "plys",
                "type": "table<Player>"
              }
            ]
          }
        ],
        "parent": "net",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "PAS position.",
            "name": "position",
            "type": "Vector"
          }
        ],
        "description": "Sends current net message (see <page>net.Start</page>) to all players that are in the same [Potentially Audible Set (PAS)](https://developer.valvesoftware.com/wiki/PAS) as the position, or simply said, it adds all players that can potentially hear sounds from this position.",
        "name": "SendPAS",
        "parent": "net",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Position that must be in players' visibility set.",
            "name": "position",
            "type": "Vector"
          }
        ],
        "description": "Sends current net message (see <page>net.Start</page>) to all players in the [PVS (Potential Visibility Set)](https://developer.valvesoftware.com/wiki/PVS \"PVS - Valve Developer Community\") of the position, or, more simply said, sends the message to players that can potentially see this position.",
        "name": "SendPVS",
        "parent": "net",
        "realms": [
          "server"
        ]
      },
      {
        "description": "Sends the current net message (see <page>net.Start</page>) to the server. The player object must exist on the server for the net message to be received successfully by the server.\n\n<warning>Each net message has a length limit of 65,533 bytes (approximately 64 KiB) and your net message will error and fail to send if it is larger than this.\n\nThe message name must be pooled with <page>util.AddNetworkString</page> beforehand!</warning>",
        "name": "SendToServer",
        "parent": "net",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the message to send",
            "name": "messageName",
            "type": "string"
          },
          {
            "default": "false",
            "description": "If set to `true`, the message is not guaranteed to reach its destination",
            "name": "unreliable",
            "type": "boolean"
          }
        ],
        "description": "Begins a new net message. If another net message is already started and hasn't been sent yet, it will be discarded.\n\nAfter calling this function, you will want to call `net.Write` functions to write your data, if any, and then finish with a call to one of the following functions:\n* <page>net.Send</page>\n* <page>net.SendOmit</page>\n* <page>net.SendPAS</page>\n* <page>net.SendPVS</page>\n* <page>net.Broadcast</page>\n* <page>net.SendToServer</page>\n\n\n<warning>Each net message has a length limit of 65,533 bytes (approximately 64 KiB) and your net message will error and fail to send if it is larger than this.\n\nThe net library has an internal buffer that sent messages are added to that is capable of holding roughly 256 kb at a time. Trying to send more will lead to the client being kicked because of a buffer overflow. <page text=\"More information on net library limits can be found here.\">Networking_Usage#netlimits</page>\n\nThe message name must be pooled with <page>util.AddNetworkString</page> beforehand!\n\nNet messages will not reliably reach the client until the client's <page>GM:InitPostEntity</page> hook is called.</warning>",
        "name": "Start",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "`true` if the message has been started.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The angle to be sent.",
            "name": "angle",
            "type": "Angle"
          }
        ],
        "description": "Writes an angle to the current net message.",
        "name": "WriteAngle",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Bit status (false = `0`, true = `1`).",
            "name": "boolean",
            "type": "boolean"
          }
        ],
        "description": "Appends a boolean (as `1` or `0`) to the current net message.\n\nPlease note that the bit is written here from a <page>boolean</page> (`true/false`) but <page>net.ReadBit</page> returns a number.",
        "name": "WriteBit",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Boolean value to write.",
            "name": "boolean",
            "type": "boolean"
          }
        ],
        "description": "Appends a boolean to the current net message. Alias of <page>net.WriteBit</page>.",
        "name": "WriteBool",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/net.lua",
          "lineEnd": 45,
          "lineStart": 45
        }
      },
      {
        "arguments": [
          {
            "description": "The <page>Color</page> you want to append to the net message.",
            "name": "Color",
            "type": "table"
          },
          {
            "default": "true",
            "description": "If we should write the alpha of the color or not.",
            "name": "writeAlpha",
            "type": "boolean"
          }
        ],
        "description": "Appends a <page>Color</page> to the current net message.",
        "name": "WriteColor",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/net.lua",
          "lineEnd": 116,
          "lineStart": 103
        }
      },
      {
        "arguments": [
          {
            "description": "The binary data to be sent.",
            "name": "binaryData",
            "type": "string"
          },
          {
            "default": "#binaryData",
            "description": "The length of the binary data to be sent, in bytes.",
            "name": "length",
            "type": "number"
          }
        ],
        "description": "Writes a chunk of binary data to the message.",
        "name": "WriteData",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The double to be sent",
            "name": "double",
            "type": "number"
          }
        ],
        "description": "Appends a double-precision number to the current net message.",
        "name": "WriteDouble",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The entity to be sent.",
            "name": "entity",
            "type": "Entity"
          }
        ],
        "description": "Appends an entity to the current net message using its <page>Entity:EntIndex</page>.\n\nSee <page>net.ReadEntity</page> for the function to read the entity.",
        "name": "WriteEntity",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/net.lua",
          "lineEnd": 64,
          "lineStart": 56
        }
      },
      {
        "arguments": [
          {
            "description": "The float to be sent.",
            "name": "float",
            "type": "number"
          }
        ],
        "description": "Appends a float (number with decimals) to the current net message.",
        "name": "WriteFloat",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The integer to be sent.",
            "name": "integer",
            "type": "number"
          },
          {
            "description": "The amount of bits the number consists of. This must be **32** or less.\n\nIf you are unsure what to set, just set it to `32`.\n\nConsult the table below to determine the bit count you need:\n\n| Bit Count |  Minimum value |  Maximum value |\n|-----------|:--------------:|:--------------:|\n| 3 | -4 | 3 |\n| 4 | -8 | 7 |\n| 5 | -16 | 15 |\n| 6 | -32 | 31 |\n| 7 | -64 | 63 |\n| 8 | -128 | 127 |\n| 9 | -256 | 255 |\n| 10 | -512 | 511 |\n| 11 | -1,024 | 1,023 |\n| 12 | -2,048 | 2,047 |\n| 13 | -4,096 | 4,095 |\n| 14 | -8,192 | 8,191 |\n| 15 | -16,384 | 16,383 |\n| 16 | -32,768 | 32,767 |\n| 17 | -65,536 | 65,535 |\n| 18 | -131,072 | 131,071 |\n| 19 | -262,144 | 262,143 |\n| 20 | -524,288 | 524,287 |\n| 21 | -1,048,576 | 1,048,575 |\n| 22 | -2,097,152 | 2,097,151 |\n| 23 | -4,194,304 | 4,194,303 |\n| 24 | -8,388,608 | 8,388,607 |\n| 25 | -16,777,216 | 16,777,215 |\n| 26 | -33,554,432 | 33,554,431 |\n| 27 | -67,108,864 | 67,108,863 |\n| 28 | -134,217,728 | 134,217,727 |\n| 29 | -268,435,456 | 268,435,455 |\n| 30 | -536,870,912 | 536,870,911 |\n| 31 | -1,073,741,824 | 1,073,741,823 |\n| 32 | -2,147,483,648 | 2,147,483,647 |",
            "name": "bitCount",
            "type": "number"
          }
        ],
        "description": "Appends a signed integer - a whole number, positive/negative - to the current net message. Can be read back with <page>net.ReadInt</page> on the receiving end.\n\nUse <page>net.WriteUInt</page> to send an unsigned number (that you know will **never** be negative). Use <page>net.WriteFloat</page> for a non-whole number (e.g. `2.25`).",
        "name": "WriteInt",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The matrix to be sent.",
            "name": "matrix",
            "type": "VMatrix"
          }
        ],
        "description": "Writes a <page>VMatrix</page> to the current net message.",
        "name": "WriteMatrix",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The normalized/direction vector to be send.",
            "name": "normal",
            "type": "Vector"
          }
        ],
        "description": "Writes a normalized/direction vector ( Vector with length of 1 ) to the net message.\n\nThis function uses less bandwidth compared to <page>net.WriteVector</page> and will not send vectors with length of &gt; 1 properly.",
        "name": "WriteNormal",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The player to be sent.",
            "name": "ply",
            "type": "Player"
          }
        ],
        "description": "Appends a player entity to the current net message using its <page>Entity:EntIndex</page>. This saves a small amount of network bandwidth over <page>net.WriteEntity</page>.\n\nSee <page>net.ReadPlayer</page> for the function to read the entity.",
        "name": "WritePlayer",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/net.lua",
          "lineEnd": 87,
          "lineStart": 76
        }
      },
      {
        "arguments": [
          {
            "description": "The string to be sent.\n\nThe input will be terminated at the first null byte if one is present. See <page>net.WriteData</page> if you wish to write binary data.",
            "name": "string",
            "type": "string"
          }
        ],
        "description": "Appends a string to the current net message. The size of the written data is 8 bits for every ASCII character in the string + 8 bits for the null terminator.\n\nThe maximum allowed length of a single written string is **65532 characters**. (aka the limit of the net message itself)",
        "name": "WriteString",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The table to be sent.\n\n<warning>If the table contains a `nil` key the table may not be read correctly.\n\nNot all objects can be sent over the network. Things like functions, <page>IMaterial</page>s, etc will cause errors when reading the table from a net message.\n\nEach element is also limited by the constraint of the `net.Write<luatype>` function for the element type.</luatype></warning>",
            "name": "table",
            "type": "table"
          },
          {
            "default": "false",
            "description": "Set to `true` if the input table is sequential. This saves on bandwidth, adding **8 extra bits** per key/value pair instead of 16 bits.\n\n<note>To read the table you need to give <page>net.ReadTable</page> the same value!</note>",
            "name": "sequential",
            "type": "boolean"
          }
        ],
        "description": "Appends a table to the current net message. Adds **16 extra bits** per key/value pair, so you're better off writing each individual key/value as the exact type if possible.\n\n<warning>All net messages have a **64kb** buffer. This function will not check or error when that buffer is overflown. You might want to consider using <page>util.TableToJSON</page> and <page>util.Compress</page> and send the resulting string in **60kb** chunks, doing the opposite on the receiving end.</warning>",
        "name": "WriteTable",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/net.lua",
          "lineEnd": 166,
          "lineStart": 139
        }
      },
      {
        "arguments": [
          {
            "description": "The data to be sent.",
            "name": "Data",
            "type": "any"
          }
        ],
        "description": "<internal>Used internally by <page>net.WriteTable</page>.</internal>\n\nAppends any type of value to the current net message.\n\n<note>An additional 8-bit unsigned integer indicating the type will automatically be written to the packet before the value, in order to facilitate reading with <page>net.ReadType</page>. If you know the data type you are writing, use a function meant for that specific data type to reduce amount of data sent.</note>",
        "name": "WriteType",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/net.lua",
          "lineEnd": 225,
          "lineStart": 211
        }
      },
      {
        "arguments": [
          {
            "description": "The unsigned integer to be sent.",
            "name": "unsignedInteger",
            "type": "number"
          },
          {
            "description": "The size of the integer to be sent, in bits. Acceptable values range from any number `1` to `32` inclusive.\n\nFor reference: `1` = bit, `4` = nibble, `8` = byte, `16` = short, `32` = long.\n\nConsult the table below to determine the bit count you need. The minimum value for all bit counts is `0`.\n\n| Bit Count |  Maximum value |\n|-----------|:--------------:|\n| 1 | 1  |\n| 2 | 3  |\n| 3 | 7  |\n| 4 | 15 |\n| 5 | 31 |\n| 6 | 63 |\n| 7 | 127 |\n| 8 | 255 |\n| 9 | 511 |\n| 10 | 1,023 |\n| 11 | 2,047 |\n| 12 | 4,095 |\n| 13 | 8,191 |\n| 14 | 16,383 |\n| 15 | 32,767 |\n| 16 | 65,535 |\n| 17 | 131,071 |\n| 18 | 262,143 |\n| 19 | 524,287  |\n| 20 | 1,048,575  |\n| 21 | 2,097,151  |\n| 22 | 4,194,303  |\n| 23 | 8,388,607  |\n| 24 | 16,777,215  |\n| 25 | 33,554,431  |\n| 26 | 67,108,863  |\n| 27 | 134,217,727  |\n| 28 | 268,435,455  |\n| 29 | 536,870,911  |\n| 30 | 1,073,741,823 |\n| 31 | 2,147,483,647 |\n| 32 | 4,294,967,295 |",
            "name": "bitCount",
            "type": "number"
          }
        ],
        "description": "Appends an unsigned integer with the specified number of bits to the current net message.\n\nUse <page>net.WriteInt</page> if you want to send negative and positive numbers. Use <page>net.WriteFloat</page> for a non-whole number (e.g. `2.25`).\n\n<note>Unsigned numbers **do not** support negative numbers.</note>",
        "name": "WriteUInt",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The 64 bit value to be sent. Can be a number.\n<warning>\nSince Lua cannot store full 64-bit integers, this function takes a string. It is mainly aimed at usage with <page>Player:SteamID64</page>.\n\nIf your input is a number and not a string, it won't be networked correctly as soon as it has more than 13 digits.\nThis is because Lua represents numbers over 13 digits as `1e+14`(`100 000 000 000 000`)\nYou can do something like this to convert it to a string: `string.format(\"%.0f\", number)`.\nIf you try to use <page>Global.tostring</page> it will fail because it will create a result something like `1e+14` which doesn't work.\n</warning>",
            "name": "uint64",
            "type": "string"
          }
        ],
        "description": "Appends an unsigned integer with 64 bits to the current net message.\n\nThe limit for an uint64 is 18'446'744'073'709'551'615.\nEverything above the limit will be set to the limit.\n\nUnsigned numbers **do not** support negative numbers.",
        "name": "WriteUInt64",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "description": "<internal></internal>\n\nA list of types that can be sent over the network via <page>net.WriteType</page>.",
        "name": "WriteVars",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Key = type ID (<page>Global.TypeID</page>), Value = function to send the data over the net.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The vector to be sent.",
            "name": "vector",
            "type": "Vector"
          }
        ],
        "description": "Appends a vector to the current net message.\nVectors sent by this function are compressed, which may result in precision loss. XYZ components greater than `16384` or less than `-16384` are irrecoverably altered (most significant bits are trimmed) and precision after the decimal point is low.",
        "name": "WriteVector",
        "parent": "net",
        "realms": [
          "client",
          "server"
        ]
      }
    ],
    "name": "net"
  },
  {
    "description": "Used to display notifications on the screen (mid-right).",
    "functions": [
      {
        "arguments": [
          {
            "description": "The text to display.",
            "name": "text",
            "type": "string"
          },
          {
            "description": "Determines the notification method (e.g. icon) for displaying the notification. See the <page>Enums/NOTIFY</page>.",
            "name": "type",
            "type": "number"
          },
          {
            "description": "The number of seconds to display the notification for.",
            "name": "length",
            "type": "number"
          }
        ],
        "description": "Adds a standard notification to your screen.",
        "name": "AddLegacy",
        "parent": "notification",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/modules/notification.lua",
          "lineEnd": 85,
          "lineStart": 66
        }
      },
      {
        "arguments": [
          {
            "description": "Can be any type. It's used as an index.",
            "name": "id",
            "type": "any"
          },
          {
            "description": "The text to show",
            "name": "strText",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "If set, overrides the progress bar animation with given percentage. Range is 0 to 1.",
            "name": "frac",
            "type": "number"
          }
        ],
        "description": "Adds a notification with an animated progress bar.",
        "name": "AddProgress",
        "parent": "notification",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/modules/notification.lua",
          "lineEnd": 55,
          "lineStart": 26
        }
      },
      {
        "arguments": [
          {
            "description": "The unique ID of the notification",
            "name": "uid",
            "type": "any"
          }
        ],
        "description": "Removes the notification after 0.8 seconds.",
        "name": "Kill",
        "parent": "notification",
        "realms": [
          "client",
          "menu"
        ],
        "source": {
          "file": "lua/includes/modules/notification.lua",
          "lineEnd": 64,
          "lineStart": 57
        }
      }
    ],
    "name": "notification"
  },
  {
    "description": "The numpad module allows you to execute functions on a key press or release.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The player whose numpad should be simulated",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The key to press, see <page>Enums/KEY</page>",
            "name": "key",
            "type": "number"
          },
          {
            "default": "false",
            "description": "Should this keypress pretend to be a from a `gmod_button`? (causes <page>numpad.FromButton</page> to return `true`)",
            "name": "isButton",
            "type": "boolean"
          }
        ],
        "description": "Activates numpad key owned by the player",
        "name": "Activate",
        "parent": "numpad",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/numpad.lua",
          "lineEnd": 117,
          "lineStart": 96
        }
      },
      {
        "arguments": [
          {
            "description": "The player whose numpad should be simulated",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The key to press, corresponding to <page>Enums/KEY</page>",
            "name": "key",
            "type": "number"
          },
          {
            "default": "false",
            "description": "Should this keypress pretend to be a from a `gmod_button`? (causes <page>numpad.FromButton</page> to return `true`)",
            "name": "isButton",
            "type": "boolean"
          }
        ],
        "description": "Deactivates numpad key owned by the player",
        "name": "Deactivate",
        "parent": "numpad",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/numpad.lua",
          "lineEnd": 140,
          "lineStart": 122
        }
      },
      {
        "description": "Returns true during a function added with <page>numpad.Register</page> when the third argument to <page>numpad.Activate</page> is true.\n\nThis is caused when a numpad function is triggered by a button SENT being used.",
        "name": "FromButton",
        "parent": "numpad",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "wasButton",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/numpad.lua",
          "lineEnd": 34,
          "lineStart": 30
        }
      },
      {
        "arguments": [
          {
            "description": "The player whose numpad should be watched",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The key, corresponding to <page>Enums/KEY</page>",
            "name": "key",
            "type": "number"
          },
          {
            "description": "The name of the function to run, corresponding with the one used in <page>numpad.Register</page>",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Arguments to pass to the function passed to <page>numpad.Register</page>.",
            "name": "...",
            "type": "vararg"
          }
        ],
        "description": "Calls a function registered with <page>numpad.Register</page> when a player presses specified key.\n\nSee for key released action: <page>numpad.OnUp</page>",
        "name": "OnDown",
        "parent": "numpad",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The impulse ID",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/numpad.lua",
          "lineEnd": 187,
          "lineStart": 174
        }
      },
      {
        "arguments": [
          {
            "description": "The player whose numpad should be watched",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The key, corresponding to <page>Enums/KEY</page>",
            "name": "key",
            "type": "number"
          },
          {
            "description": "The name of the function to run, corresponding with the one used in <page>numpad.Register</page>",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Arguments to pass to the function passed to <page>numpad.Register</page>.",
            "name": "...",
            "type": "vararg"
          }
        ],
        "description": "Calls a function registered with <page>numpad.Register</page> when a player releases specified key.\n\nSee for key pressed action: <page>numpad.OnDown</page>",
        "name": "OnUp",
        "parent": "numpad",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The impulse ID",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/numpad.lua",
          "lineEnd": 205,
          "lineStart": 192
        }
      },
      {
        "arguments": [
          {
            "description": "The unique id of your action.",
            "name": "id",
            "type": "string"
          },
          {
            "description": "The function to be executed.\n\n<callback>\n<arg type=\"Player\" name=\"ply\">The player who pressed the button</arg>\n<arg type=\"vararg\" name=\"data\">The 4th and all subsequent arguments passed from <page>numpad.OnDown</page> and/or <page>numpad.OnUp</page>.</arg>\n<ret type=\"boolean\" name=\"data\" default=\"nil\">Returning `false` in this function will remove the listener which triggered this function\n\n(example: return `false` if one of your varargs is an entity which is no longer valid)</ret>\n</callback>",
            "name": "func",
            "type": "function"
          }
        ],
        "description": "Registers a numpad library action for use with <page>numpad.OnDown</page> and <page>numpad.OnUp</page>",
        "name": "Register",
        "parent": "numpad",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/numpad.lua",
          "lineEnd": 245,
          "lineStart": 241
        }
      },
      {
        "arguments": [
          {
            "description": "The impulse ID returned by <page>numpad.OnUp</page> or <page>numpad.OnDown</page>",
            "name": "ID",
            "type": "number"
          }
        ],
        "description": "Removes a function added by either <page>numpad.OnUp</page> or <page>numpad.OnDown</page>",
        "name": "Remove",
        "parent": "numpad",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/numpad.lua",
          "lineEnd": 236,
          "lineStart": 229
        }
      },
      {
        "arguments": [
          {
            "description": "The player whose numpad should be simulated",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "The key to press, corresponding to <page>Enums/KEY</page>",
            "name": "key",
            "type": "number"
          }
        ],
        "description": "Either runs <page>numpad.Activate</page> or <page>numpad.Deactivate</page> depending on the key's current state",
        "name": "Toggle",
        "parent": "numpad",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/numpad.lua",
          "lineEnd": 154,
          "lineStart": 145
        }
      }
    ],
    "name": "numpad"
  },
  {
    "description": "The os library is a standard Lua library originally intended to allow Lua access to various features of the Operating System it's running on, however many of the features and functions have been removed in Garry's Mod due to security issues. It's only used in Garry's Mod for date &amp; time operations.",
    "functions": [
      {
        "description": "Returns the approximate cpu time the application ran.\nSee also <page>Global.SysTime</page>\n<note>This function has different precision on Linux (1/100).</note>",
        "name": "clock",
        "parent": "os",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "runtime",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The format string.\n\nIf this is equal to `*t` or `!*t` then this function will return a <page>Structures/DateData</page>, otherwise it will return a string.\n\nIf this starts with an `!`, the returned data will use the UTC timezone rather than the local timezone.\n\nSee http://www.mkssoftware.com/docs/man3/strftime.3.asp for available format flags.\n\n<bug issue=\"329\">**Not all flags are available on all operating systems** and the result of using an invalid flag is undefined. This currently crashes the game on Windows. Most or all flags are available on OS X and Linux but considerably fewer are available on Windows. See http://msdn.microsoft.com/en-us/library/fe06s4ak.aspx for a list of available flags on Windows. Note that the **#** flags also crashes the game on Windows.</bug>\n\nKnown formats that work on all platforms:\n\n| Format | Description | Example of the output |\n|:------:|:-----------:|:---------------------:|\n| `%a` | Abbreviated weekday name | `Wed` |\n| `%A` | Full weekday name | `Wednesday` |\n| `%b` | Abbreviated month name | `Sep` |\n| `%B` | Full month name | `September` |\n| `%c` | Locale-appropriate date and time | Varies by platform and language settings |\n| `%d` | Day of the month [01-31] | `16` |\n| `%H` | Hour, using a 24-hour clock [00-23] | `23` |\n| `%I` | Hour, using a 12-hour clock [01-12] | `11` |\n| `%j` | Day of the year [001-365] | `259` |\n| `%m` | Month [01-12] | `09` |\n| `%M` | Minute [00-59] | `48` |\n| `%p` | Either `am` or `pm` | `pm` |\n| `%S` | Second [00-60] | `10` |\n| `%w` | Weekday [0-6 = Sunday-Saturday] | `3` |\n| `%W` | Week of the year [00-53] | `37` |\n| `%x` | Date (Same as `%m/%d/%y`) | `09/16/98` |\n| `%X` | Time (Same as `%H:%M:%S`) | `23:48:10` |\n| `%y` | Two-digit year [00-99] | `98` |\n| `%Y` | Full year | `1998` |\n| `%z` | Timezone | `-0300` |\n| `%%` | A percent sign | `%` |",
            "name": "format",
            "type": "string"
          },
          {
            "default": "os.time()",
            "description": "Time to use for the format.",
            "name": "time",
            "type": "number"
          }
        ],
        "description": "Returns the date/time as a formatted string or in a table.",
        "name": "date",
        "parent": "os",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Formatted date\n<note>This will be a <page>Structures/DateData</page> if the first argument equals to `*t` or `!*t`</note>",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The first value.",
            "name": "timeA",
            "type": "number"
          },
          {
            "description": "The value to subtract.",
            "name": "timeB",
            "type": "number"
          }
        ],
        "description": "Subtracts the second from the first value and rounds the result.",
        "name": "difftime",
        "parent": "os",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "diffTime",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "default": "nil",
            "description": "Table to generate the time from. This table's data is interpreted as being in the local timezone. See <page>Structures/DateData</page>",
            "name": "dateData",
            "type": "table"
          }
        ],
        "description": "Returns the system time in seconds past the unix epoch. If a table is supplied, the function attempts to build a system time with the specified table members.",
        "name": "time",
        "parent": "os",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Seconds passed since Unix epoch",
            "type": "number"
          }
        ]
      }
    ],
    "name": "os"
  },
  {
    "description": "The package library is a standard Lua library, it's mainly for use with the module system built into Lua.",
    "functions": [
      {
        "description": "A list of all loaded packages.",
        "name": "loaded",
        "parent": "package",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The list of all loaded packages.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The module table to be given a metatable",
            "name": "module",
            "type": "table"
          }
        ],
        "description": "Sets a metatable for module with its __index field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to <page>Global.module</page>.",
        "name": "seeall",
        "parent": "package",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      }
    ],
    "name": "package"
  },
  {
    "description": "Used to ask player for various potentially dangerous permissions.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The address to ask to connect to. If a port is not given, the default `:27015` port will be added.",
            "name": "address",
            "type": "string"
          }
        ],
        "description": "Requests the player to connect to a specified server. The player will be prompted with a confirmation window.",
        "name": "AskToConnect",
        "parent": "permissions",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "IP address to connect.",
            "name": "ip",
            "type": "string"
          }
        ],
        "description": "Connects player to the server. This is what <page>permissions.AskToConnect</page> uses internally.",
        "name": "Connect",
        "parent": "permissions",
        "realms": [
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "Enable or disable voice activity. `true` will run `+voicerecord` command, anything else `-voicerecord`.",
            "name": "enable",
            "type": "boolean"
          }
        ],
        "description": "Activates player's microphone as if they pressed the speak button themself. The player will be prompted with a confirmation window which grants permission temporarily/permanently(depending on checkbox state) for the connected server (revokable).\nThis is used for TTT's traitor voice channel.",
        "name": "EnableVoiceChat",
        "parent": "permissions",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Returns all permissions per server. Permanent permissions are stored in `settings/permissions.bin`.",
        "name": "GetAll",
        "parent": "permissions",
        "realms": [
          "menu"
        ],
        "returnValues": [
          {
            "description": "A table of permanent and temporary permissions granted for servers.\n\nExample structure:\n```lua\npermanent = {\n[\"123.123.123.123\"] = \"connect\" -- this server has a permission to connect player to any server even after restarting the game\n},\ntemporary = {\n[\"111.111.111.111\"] = \"voicerecord\" -- this server can enable voice activity on player during this game session\n}\n```",
            "name": "permissions",
            "type": "table<string,table>"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Permission to grant for the server the player is currently connected.",
            "name": "permission",
            "type": "string"
          },
          {
            "description": "`true` if the permission should be granted temporary.",
            "name": "temporary",
            "type": "boolean"
          }
        ],
        "description": "Grants permission to the current connected server.",
        "name": "Grant",
        "parent": "permissions",
        "realms": [
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The permission to poll. Currently only 2 permission are valid:\n* `\"connect\"`\n* `\"voicerecord\"`",
            "name": "permission",
            "type": "string"
          }
        ],
        "description": "Returns whether the player has granted the current server a specific permission.",
        "name": "IsGranted",
        "parent": "permissions",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whether the permission is granted or not.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Permission to revoke from the server.",
            "name": "permission",
            "type": "string"
          },
          {
            "description": "IP of the server.",
            "name": "ip",
            "type": "string"
          }
        ],
        "description": "Revokes permission from the server.",
        "name": "Revoke",
        "parent": "permissions",
        "realms": [
          "menu"
        ]
      }
    ],
    "name": "permissions"
  },
  {
    "description": "The physenv library allows you to control the physics environment created by the engine, and lets you modify constants such as gravity and maximum velocity.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The properties to add. Each one should include `\"base\"` or the game will crash due to some values being missing.",
            "name": "properties",
            "type": "string"
          }
        ],
        "description": "Adds a [material surface property](https://developer.valvesoftware.com/wiki/Material_surface_properties) type to the game's physics environment.\n\nSee <page>util.GetSurfaceData</page> for the opposite function.\n\n<bug issue=\"2604\">The game has a limit of 128 surface properties - this includes properties loaded automatically from [surfaceproperties.txt](https://github.com/Facepunch/garrysmod/blob/master/garrysmod/scripts/surfaceproperties.txt). Due to this, there's only a small amount of open slots that can be registered with GMod's provided surfaceproperties.txt.\n\nDoes nothing on `x86-64` beta.\n</bug>",
        "name": "AddSurfaceData",
        "parent": "physenv",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "description": "Returns the air density used to calculate drag on physics objects.\n<validate>The unit is in `kg/m³`.</validate>",
        "name": "GetAirDensity",
        "parent": "physenv",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Default value is 2.",
            "name": "airDensity",
            "type": "number"
          }
        ]
      },
      {
        "description": "Gets the gravitational acceleration used for physics objects in `source_unit/s^2`.",
        "name": "GetGravity",
        "parent": "physenv",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Gravity direction and strength.",
            "type": "Vector"
          }
        ]
      },
      {
        "description": "Returns the last simulation duration of the in-game physics.",
        "name": "GetLastSimulationTime",
        "parent": "physenv",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The last simulation duration of the in-game physics in seconds",
            "type": "number"
          }
        ]
      },
      {
        "description": "Gets the current performance settings in table form.",
        "name": "GetPerformanceSettings",
        "parent": "physenv",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Performance settings or <page>nil</page> if called too early. See <page>Structures/PhysEnvPerformanceSettings</page>",
            "type": "table"
          }
        ]
      },
      {
        "description": "Returns the pause status of global physics simulation. See <page>physenv.SetPhysicsPaused</page> for the setter.",
        "name": "GetPhysicsPaused",
        "parent": "physenv",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "`true` if paused.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The new air density.",
            "name": "airDensity",
            "type": "number"
          }
        ],
        "description": "Sets the air density.",
        "name": "SetAirDensity",
        "parent": "physenv",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The new gravity in `source_unit/s^2`.",
            "name": "gravAccel",
            "type": "Vector"
          }
        ],
        "description": "Sets the gravitational acceleration used for physics objects. Does not affect players.",
        "name": "SetGravity",
        "parent": "physenv",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The new performance settings. See <page>Structures/PhysEnvPerformanceSettings</page>",
            "name": "performanceSettings",
            "type": "table"
          }
        ],
        "description": "Sets the performance settings.",
        "name": "SetPerformanceSettings",
        "parent": "physenv",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "`true` to pause, `false` to unpause.",
            "name": "pause",
            "type": "boolean"
          }
        ],
        "description": "Pauses or unpauses the physics simulation globally. See <page>physenv.GetPhysicsPaused</page> for the getter.",
        "name": "SetPhysicsPaused",
        "parent": "physenv",
        "realms": [
          "client",
          "server"
        ]
      }
    ],
    "name": "physenv"
  },
  {
    "description": "The player library is used to get the Lua objects that represent players in-game.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The name of the bot, using an already existing name will append brackets at the end of it with a number pertaining it.\n\nExample: \"Bot name test\", \"Bot name test(1)\".",
            "name": "botName",
            "type": "string"
          }
        ],
        "description": "Similar to the serverside command \"bot\", this function creates a new Player bot with the given name. This bot will not obey to the usual \"bot_*\" commands, and it's the same bot base used in TF2 and CS:S.\n\nThe best way to control the behaviour of a Player bot right now is to use the <page>GM:StartCommand</page> hook and modify its input serverside.\n\n<note>Despite this Player being fake, it has to be removed from the server by using <page>Player:Kick</page> and **NOT** <page>Entity:Remove</page>.\nAlso keep in mind that these bots still use player slots, so you won't be able to spawn them in singleplayer!</note>\n\n<note>Any Bot created using this method will be considered UnAuthed by Garry's Mod</note>",
        "name": "CreateNextBot",
        "parent": "player",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The newly created Player bot. Returns NULL if there's no Player slots available to host it.",
            "type": "Player"
          }
        ]
      },
      {
        "description": "Gets all the current players in the server (not including connecting clients).\n\nThis function returns bots as well as human players. See <page>player.GetBots</page> and  <page>player.GetHumans</page>.\n\n<note>This function returns a sequential table, meaning it should be looped with <page>Global.ipairs</page> instead of <page>Global.pairs</page> for efficiency reasons.</note>",
        "name": "GetAll",
        "parent": "player",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "All <page>Player</page>s currently in the server.",
            "type": "table<Player>"
          }
        ]
      },
      {
        "description": "Returns a table of all bots on the server.",
        "name": "GetBots",
        "parent": "player",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table only containing bots ( AI / non human players )",
            "type": "table<Player>"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The <page>Player:AccountID</page> to find the player by.",
            "name": "accountID",
            "type": "number"
          }
        ],
        "description": "Tried to get the player with the specified <page>Player:AccountID</page>.\n<warning>Internally this function iterates over all players in the server, meaning it can be quite expensive in a performance-critical context.</warning>",
        "name": "GetByAccountID",
        "parent": "player",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Player if one is found, `false` otherwise.",
            "type": "Player|boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/player.lua",
          "lineEnd": 274,
          "lineStart": 265
        }
      },
      {
        "arguments": [
          {
            "description": "The connection ID to find the player by.",
            "name": "connectionID",
            "type": "number"
          }
        ],
        "description": "Gets the player with the specified connection ID.\n\nConnection ID can be retrieved via <page>gameevent.Listen</page> events.\n\nFor a function that returns a player based on their <page>Entity:EntIndex</page>, see <page>Global.Entity</page>.\n\n\nFor a function that returns a player based on their <page>Player:UserID</page>, see <page>Global.Player</page>.",
        "name": "GetByID",
        "parent": "player",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Player if one is found, `nil` otherwise.",
            "type": "Player|nil"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The <page>Player:SteamID</page> to find the player by.",
            "name": "steamID",
            "type": "string"
          }
        ],
        "description": "Gets the player with the specified SteamID.\n<warning>Internally this function iterates over all players in the server, meaning it can be quite expensive in a performance-critical context.</warning>",
        "name": "GetBySteamID",
        "parent": "player",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Player if one is found, `false` otherwise.",
            "type": "Player|boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/player.lua",
          "lineEnd": 297,
          "lineStart": 287
        }
      },
      {
        "arguments": [
          {
            "description": "The <page>Player:SteamID64</page> to find the player by.",
            "name": "steamID64",
            "type": "string"
          }
        ],
        "description": "Gets the player with the specified SteamID64.\n<warning>Internally this function iterates over all players in the server, meaning it can be quite expensive in a performance-critical context.</warning>",
        "name": "GetBySteamID64",
        "parent": "player",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Player if one is found, `false` otherwise.",
            "type": "Player|boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/player.lua",
          "lineEnd": 308,
          "lineStart": 299
        }
      },
      {
        "arguments": [
          {
            "description": "The <page>Player:UniqueID</page> to find the player by.",
            "name": "uniqueID",
            "type": "string"
          }
        ],
        "description": "<deprecated>Use <page>player.GetBySteamID64</page>, <page>player.GetBySteamID</page> or <page>player.GetByAccountID</page> to get a player by a unique identifier instead.</deprecated>\n\nGets the player with the specified uniqueID (not recommended way to identify players).\n\n<warning>It is highly recommended to use <page>player.GetByAccountID</page>, <page>player.GetBySteamID</page> or <page>player.GetBySteamID64</page> instead as this function can have collisions ( be same for different people ) while SteamID is guaranteed to unique to each player.</warning>\n<warning>Internally this function iterates over all players in the server, meaning it can be quite expensive in a performance-critical context.</warning>",
        "name": "GetByUniqueID",
        "parent": "player",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Player if one is found, `false` otherwise.",
            "type": "Player|boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/player.lua",
          "lineEnd": 285,
          "lineStart": 276
        }
      },
      {
        "description": "Returns the active player count.\n\n<note>Similar to **#**<page>player.GetAll</page>() but with better performance since the player table doesn't have to be generated. If <page>player.GetAll</page> is already being called for iteration, then using the **#** operator on the table will be faster than calling this function since it is JITted.</note>",
        "name": "GetCount",
        "parent": "player",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Number of players",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the amount of players connecting to the server, but not yet spawned in.\n\n`player.GetCountConnecting() + player.GetCount()` would result in the total player count on this server.",
        "name": "GetCountConnecting",
        "parent": "player",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "Number of players still connecting.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns a table containing all human players (non-bot/AI).\n\nUnlike <page>player.GetAll</page>, this does not include bots.\n<note>This function returns a sequential table, meaning it should be looped with <page>Global.ipairs</page> instead of <page>Global.pairs</page> for efficiency reasons.</note>",
        "name": "GetHumans",
        "parent": "player",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table containing all human (non-bot/AI) players.",
            "type": "table<Player>"
          }
        ]
      },
      {
        "description": "Returns a [Stateless Iterator](https://www.lua.org/pil/7.3.html) for all players on the server.\nIntended for use in [Generic For Loops](https://www.lua.org/pil/4.3.5.html).\nSee <page>ents.Iterator</page> for a similar function for all entities.\n\nInternally, this function uses cached values that exist entirely within lua, as opposed to <page>player.GetAll</page>, which is a C++ function.\nBecause switching from lua to C++ (and vice versa) incurs a performance cost, this function will be somewhat more efficient than <page>player.GetAll</page>.\n<note>The <page>GM:OnEntityCreated</page> and <page>GM:EntityRemoved</page> hooks are used internally to invalidate this function's cache. Using this function inside those hooks is not guaranteed to use an up-to-date cache because hooks are currently executed in an arbitrary order.</note>\n<warning>An error being thrown inside the <page>GM:OnEntityCreated</page> or <page>GM:EntityRemoved</page> hooks is likely to break this function. Make it certain that no addons are causing any errors in those hooks.</warning>",
        "name": "Iterator",
        "parent": "player",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The Iterator Function from <page text=\"ipairs\">Global.ipairs</page>",
            "type": "function"
          },
          {
            "description": "Table of all existing <page text=\"Players\">Player</page>.  This is a cached copy of <page>player.GetAll</page>\n<warning>This table is intended to be read-only.\n\nModifying the return table will affect all subsequent calls to this function until the cache is refreshed, replacing all of your player.GetAll usages may come with unintended side effects because of this.\n\nExample of bad code:\n```\n-- NEVER DO THIS!!!\n\nlocal scan_ents = select(2, player.Iterator())\n\ntable.Add(scan_ents, ents.FindByClass(\"ttt_decoy\"))\n```\n</warning>",
            "type": "table<Player>"
          },
          {
            "description": "The starting index for the table of players.\nThis is always `0` and is returned for the benefit of [Generic For Loops](https://www.lua.org/pil/4.3.5.html)",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/player.lua",
          "lineEnd": 319,
          "lineStart": 313
        }
      }
    ],
    "name": "player"
  },
  {
    "description": "The player_manager library lets you manage players, such as setting their models or creating player classes.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Player model name",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Hands model",
            "name": "model",
            "type": "string"
          },
          {
            "default": "0",
            "description": "Skin to apply to the hands",
            "name": "skin",
            "type": "number"
          },
          {
            "default": "0000000",
            "description": "Bodygroups to apply to the hands. See <page>Entity:SetBodyGroups</page> for help with the format.",
            "name": "bodygroups",
            "type": "string"
          },
          {
            "default": "false",
            "description": "If set to `true`, the skin of the hands will be set to the skin of the playermodel.\nThis is useful when player models have multiple user-selectable skins.",
            "name": "matchBodySkin",
            "type": "boolean"
          }
        ],
        "description": "Assigns view model hands to player model.",
        "name": "AddValidHands",
        "parent": "player_manager",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/player_manager.lua",
          "lineEnd": 34,
          "lineStart": 27
        }
      },
      {
        "arguments": [
          {
            "description": "Simplified name",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Valid PlayerModel path",
            "name": "model",
            "type": "string"
          }
        ],
        "description": "Associates a simplified name with a path to a valid player model.\n\n\nOnly used internally.",
        "name": "AddValidModel",
        "parent": "player_manager",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/player_manager.lua",
          "lineEnd": 25,
          "lineStart": 17
        }
      },
      {
        "description": "Returns the entire list of valid player models.",
        "name": "AllValidModels",
        "parent": "player_manager",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "List of all valid player models.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/player_manager.lua",
          "lineEnd": 41,
          "lineStart": 36
        }
      },
      {
        "arguments": [
          {
            "description": "Player to clear class from",
            "name": "ply",
            "type": "Player"
          }
        ],
        "description": "Clears a player's class association by setting their ClassID to 0",
        "name": "ClearPlayerClass",
        "parent": "player_manager",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/player_manager.lua",
          "lineEnd": 403,
          "lineStart": 399
        }
      },
      {
        "arguments": [
          {
            "description": "Player to get class",
            "name": "ply",
            "type": "Player"
          }
        ],
        "description": "Gets a players class",
        "name": "GetPlayerClass",
        "parent": "player_manager",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The players class",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/modules/player_manager.lua",
          "lineEnd": 397,
          "lineStart": 390
        }
      },
      {
        "description": "Retrieves a copy of all registered player classes.",
        "name": "GetPlayerClasses",
        "parent": "player_manager",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A copy of all registered player classes.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/player_manager.lua",
          "lineEnd": 304,
          "lineStart": 300
        }
      },
      {
        "arguments": [
          {
            "description": "Player to get class of",
            "name": "ply",
            "type": "Player"
          }
        ],
        "description": "Gets a players' class table",
        "name": "GetPlayerClassTable",
        "parent": "player_manager",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The players class table",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Player to setup.",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "If true, the player just spawned from a map transition. You probably want to not touch player's weapons or position if this is set to `true`.",
            "name": "transiton",
            "type": "boolean"
          }
        ],
        "description": "Applies basic class variables when the player spawns.\n\nCalled from <page>GM:PlayerSpawn</page> in the base gamemode.",
        "name": "OnPlayerSpawn",
        "parent": "player_manager",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/player_manager.lua",
          "lineEnd": 457,
          "lineStart": 433
        }
      },
      {
        "arguments": [
          {
            "description": "Class name",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Class metatable, see <page>Structures/PLAYER</page>",
            "name": "table",
            "type": "table"
          },
          {
            "default": "nil",
            "description": "Base class name",
            "name": "base",
            "type": "string"
          }
        ],
        "description": "Register a class metatable to be assigned to players later",
        "name": "RegisterClass",
        "parent": "player_manager",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/player_manager.lua",
          "lineEnd": 375,
          "lineStart": 350
        }
      },
      {
        "arguments": [
          {
            "description": "Player to execute function on.",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "Name of function.",
            "name": "funcName",
            "type": "string"
          },
          {
            "description": "Optional arguments. Can be of any type.",
            "name": "arguments",
            "type": "vararg"
          }
        ],
        "description": "Execute a named function within the player's set class",
        "name": "RunClass",
        "parent": "player_manager",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The values returned by the called function.",
            "type": "vararg"
          }
        ],
        "source": {
          "file": "lua/includes/modules/player_manager.lua",
          "lineEnd": 415,
          "lineStart": 405
        }
      },
      {
        "arguments": [
          {
            "description": "Player to set class",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "Name of class to set",
            "name": "className",
            "type": "string"
          }
        ],
        "description": "Sets a player's class",
        "name": "SetPlayerClass",
        "parent": "player_manager",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/player_manager.lua",
          "lineEnd": 388,
          "lineStart": 377
        }
      },
      {
        "arguments": [
          {
            "description": "Player model name",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Retrieves correct hands for given player model. By default returns citizen hands.\n\n<note>See <page>player_manager.AddValidHands</page> for defining/linking hands to a model - this must be defined somewhere otherwise the model will return citizen hands here.</note>",
        "name": "TranslatePlayerHands",
        "parent": "player_manager",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table with following contents:\n* <page>string</page> model - Model of hands\n* <page>number</page> skin - Skin of hands\n* <page>string</page> body - Bodygroups of hands",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/player_manager.lua",
          "lineEnd": 79,
          "lineStart": 69
        }
      },
      {
        "arguments": [
          {
            "description": "The short name of the model.",
            "name": "shortName",
            "type": "string"
          }
        ],
        "description": "Returns the valid model path for a simplified name.",
        "name": "TranslatePlayerModel",
        "parent": "player_manager",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The valid model path for the short name.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/modules/player_manager.lua",
          "lineEnd": 55,
          "lineStart": 44
        }
      },
      {
        "arguments": [
          {
            "description": "The model path to a player model",
            "name": "model",
            "type": "string"
          }
        ],
        "description": "Returns the simplified name for a valid model path of a player model.\n\nOpposite of <page>player_manager.TranslatePlayerModel</page>.",
        "name": "TranslateToPlayerModelName",
        "parent": "player_manager",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The simplified name for that model",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/modules/player_manager.lua",
          "lineEnd": 67,
          "lineStart": 57
        }
      }
    ],
    "name": "player_manager"
  },
  {
    "description": "The presets library lets you add and modify the pre-set options for scripted tools (selected via the white bar at the top of each tools control panel).",
    "functions": [
      {
        "arguments": [
          {
            "description": "The preset group name, usually it's tool class name.",
            "name": "groupname",
            "type": "string"
          },
          {
            "description": "Preset name, must be unique.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "A table of preset console commands.",
            "name": "values",
            "type": "table"
          }
        ],
        "description": "Adds preset to a preset group.",
        "name": "Add",
        "parent": "presets",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/presets.lua",
          "lineEnd": 46,
          "lineStart": 33
        }
      },
      {
        "description": "<internal></internal>\n\nUsed internally to tell the player that the name they tried to use in their preset is not acceptable.",
        "name": "BadNameAlert",
        "parent": "presets",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/presets.lua",
          "lineEnd": 85,
          "lineStart": 81
        }
      },
      {
        "arguments": [
          {
            "description": "The preset group name, usually it's tool class name.",
            "name": "type",
            "type": "string"
          },
          {
            "description": "Name of the preset to test",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Returns whether a preset with given name exists or not",
        "name": "Exists",
        "parent": "presets",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "true if the preset does exist",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/presets.lua",
          "lineEnd": 31,
          "lineStart": 20
        }
      },
      {
        "arguments": [
          {
            "description": "Preset group name.",
            "name": "groupname",
            "type": "string"
          }
        ],
        "description": "Returns a table with preset names and values from a single preset group.",
        "name": "GetTable",
        "parent": "presets",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "All presets in specified group.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/presets.lua",
          "lineEnd": 18,
          "lineStart": 8
        }
      },
      {
        "arguments": [
          {
            "description": "",
            "name": "callback",
            "type": "function"
          }
        ],
        "description": "<internal></internal>\n\nUsed internally to ask the player if they want to override an already existing preset.",
        "name": "OverwritePresetPrompt",
        "parent": "presets",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/presets.lua",
          "lineEnd": 91,
          "lineStart": 87
        }
      },
      {
        "arguments": [
          {
            "description": "Preset group to remove from",
            "name": "groupname",
            "type": "string"
          },
          {
            "description": "Name of preset to remove",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Removes a preset entry from a preset group.",
        "name": "Remove",
        "parent": "presets",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/presets.lua",
          "lineEnd": 78,
          "lineStart": 65
        }
      },
      {
        "arguments": [
          {
            "description": "Preset group name",
            "name": "groupname",
            "type": "string"
          },
          {
            "description": "Old preset name",
            "name": "oldname",
            "type": "string"
          },
          {
            "description": "New preset name",
            "name": "newname",
            "type": "string"
          }
        ],
        "description": "Renames preset.",
        "name": "Rename",
        "parent": "presets",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/presets.lua",
          "lineEnd": 63,
          "lineStart": 48
        }
      }
    ],
    "name": "presets"
  },
  {
    "description": "The properties library gives you access to the menu that shows up when right clicking entities while holding C.",
    "functions": [
      {
        "arguments": [
          {
            "description": "A unique name used to identify the property",
            "name": "name",
            "type": "string"
          },
          {
            "description": "A table that defines the property. Uses the <page>Structures/PropertyAdd</page>.",
            "name": "propertyData",
            "type": "table"
          }
        ],
        "description": "Add properties to the properties module. Properties can be blocked via <page>GM:CanProperty</page>.",
        "name": "Add",
        "parent": "properties",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/properties.lua",
          "lineEnd": 36,
          "lineStart": 28
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to test",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "If given, will also perform a distance check based on the entity's Orientated Bounding Box.",
            "name": "ply",
            "type": "Player"
          }
        ],
        "description": "Returns true if given entity can be targeted by the player via the properties system.\n\nThis should be used serverside in your properties to prevent abuse by clientside scripting.",
        "name": "CanBeTargeted",
        "parent": "properties",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "True if entity can be targeted, false otherwise",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/properties.lua",
          "lineEnd": 120,
          "lineStart": 104
        }
      },
      {
        "arguments": [
          {
            "description": "Eye position of local player, <page>Entity:EyePos</page>",
            "name": "pos",
            "type": "Vector"
          },
          {
            "description": "Aim vector of local player, <page>Player:GetAimVector</page>",
            "name": "aimVec",
            "type": "Vector"
          }
        ],
        "description": "Returns an entity player is hovering over with their cursor.",
        "name": "GetHovered",
        "parent": "properties",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The hovered entity",
            "type": "Entity"
          }
        ],
        "source": {
          "file": "lua/includes/modules/properties.lua",
          "lineEnd": 156,
          "lineStart": 122
        }
      },
      {
        "description": "A list of all properties registered with <page>properties.Add</page>.",
        "name": "List",
        "parent": "properties",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The list of all properties. The keys will be the first argument passed to <page>properties.Add</page>, the values will be the second argument.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The eye pos of a player",
            "name": "eyepos",
            "type": "Vector"
          },
          {
            "description": "The aim vector of a player",
            "name": "eyevec",
            "type": "Vector"
          }
        ],
        "description": "Checks if player hovers over any entities and open a properties menu for it.",
        "name": "OnScreenClick",
        "parent": "properties",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/properties.lua",
          "lineEnd": 100,
          "lineStart": 93
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to open menu for",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "The trace that is passed as second argument to Action callback of a property",
            "name": "tr",
            "type": "table"
          }
        ],
        "description": "Opens properties menu for given entity.",
        "name": "OpenEntityMenu",
        "parent": "properties",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/properties.lua",
          "lineEnd": 91,
          "lineStart": 74
        }
      },
      {
        "arguments": [
          {
            "description": "A unique name used to identify the property to be removed.",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Remove an entity right-click property. See <page>properties.Add</page> for details.",
        "name": "Remove",
        "parent": "properties",
        "realms": [
          "client",
          "server"
        ]
      }
    ],
    "name": "properties"
  },
  {
    "description": "The render library is a powerful set of functions that let you control how the world and its contents are rendered. It can also be used to draw some 3D clientside effects such as beams, boxes and spheres.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Beam start position.",
            "name": "startPos",
            "type": "Vector"
          },
          {
            "description": "The width of the beam.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "The end coordinate of the texture used.",
            "name": "textureEnd",
            "type": "number"
          },
          {
            "description": "The color to be used. Uses the <page>Color</page>.",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Adds a Beam Segment to the Beam started by <page>render.StartBeam</page>.\n\nFor more detailed information on Beams, as well as usage examples, see the <page text=\"Beams Render Reference\">render_beams</page>",
        "name": "AddBeam",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The texture to blur",
            "name": "rendertarget",
            "type": "ITexture"
          },
          {
            "description": "Horizontal amount of blur",
            "name": "blurx",
            "type": "number"
          },
          {
            "description": "Vertical amount of blur",
            "name": "blury",
            "type": "number"
          },
          {
            "description": "Amount of passes to go through",
            "name": "passes",
            "type": "number"
          }
        ],
        "description": "Blurs the render target ( or a given texture )\n\n<warning>Calling this on a RenderTarget created with TEXTUREFLAGS_POINTSAMPLE will result in strange visual glitching.</warning>",
        "name": "BlurRenderTarget",
        "parent": "render",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/extensions/client/render.lua",
          "lineEnd": 107,
          "lineStart": 88
        }
      },
      {
        "arguments": [
          {
            "default": "nil",
            "description": "",
            "name": "mat",
            "type": "IMaterial"
          }
        ],
        "description": "This function overrides the brush material for next render operations. It can be used with <page>Entity:DrawModel</page>.",
        "name": "BrushMaterialOverride",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Parameters of the capture. See <page>Structures/RenderCaptureData</page>.",
            "name": "captureData",
            "type": "table"
          }
        ],
        "description": "Captures a part of the current render target and returns the data as a binary string in the given format.\n\nSince the pixel buffer clears itself every frame, this will return a black screen outside of render hooks. To capture the user's final view, use <page>GM:PostRender</page>. This will not capture the Steam overlay or third-party injections (such as the Discord overlay, Overwolf, and advanced cheats) on the user's screen.\n\n<bug issue=\"2571\">In PNG mode, this function can produce unexpected result where foreground is rendered as transparent.\nThis is caused by <page>render.SetWriteDepthToDestAlpha</page> set to `true` when doing most of render operations, including rendering in `_rt_fullframefb`. If you want to capture render target's content as PNG image only for output quality, set <page>Structures/RenderCaptureData</page>'s `alpha` to `false` when capturing render targets with <page>render.SetWriteDepthToDestAlpha</page> set to `true`.</bug>\n\n<warning>This function will return nil if escape menu is open</warning>",
        "name": "Capture",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "binaryData",
            "type": "string"
          }
        ]
      },
      {
        "description": "<rendercontext hook=\"false\" type=\"2D\"></rendercontext>\nDumps the current render target and allows the pixels to be accessed by <page>render.ReadPixel</page>.\n\nCapturing outside a render hook will return 0 0 0 255",
        "name": "CapturePixels",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Red component to clear to.",
            "name": "r",
            "type": "number"
          },
          {
            "description": "Green component to clear to.",
            "name": "g",
            "type": "number"
          },
          {
            "description": "Blue component to clear to.",
            "name": "b",
            "type": "number"
          },
          {
            "description": "Alpha component to clear to.",
            "name": "a",
            "type": "number"
          },
          {
            "default": "false",
            "description": "Clear the depth.",
            "name": "clearDepth",
            "type": "boolean"
          },
          {
            "default": "false",
            "description": "Clear the stencil.",
            "name": "clearStencil",
            "type": "boolean"
          }
        ],
        "description": "Clears the current render target and the specified buffers.\n\n<bug issue=\"2085\">This sets the alpha incorrectly for <page>surface</page> draw calls for render targets.</bug>",
        "name": "Clear",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The red Color Channel value for each pixel that is cleared.\nMust be an integer value in the range 0-255 (`byte`)",
            "name": "red",
            "type": "number"
          },
          {
            "description": "The green Color Channel value for each pixel that is cleared.\nMust be an integer value in the range 0-255 (`byte`)",
            "name": "green",
            "type": "number"
          },
          {
            "description": "The blue Color Channel value for each pixel that is cleared.\nMust be an integer value in the range 0-255 (`byte`)",
            "name": "blue",
            "type": "number"
          },
          {
            "description": "The alpha (translucency) Color Channel value for each pixel that is cleared.\nMust be an integer value in the range 0-255 (`byte`)",
            "name": "alpha",
            "type": "number"
          },
          {
            "description": "If true, reset the Depth Buffer values.",
            "name": "clearDepth",
            "type": "boolean"
          }
        ],
        "description": "Tests every pixel of the active <page text=\"Render Target\">render_rendertargets</page> against the current Stencil configuration and sets the Color Channel values and, optionally, the Depth Buffer values for every pixel that passes.\n\nFor more detailed information on the Stencil system, including usage examples, see the <page text=\"Stencils Render Reference\">render_stencils</page> page\n\n<note>\nThis function does **not** clear the Stencil Buffer on its own.\nIf you would like to clear the Stencil Buffer, you can use <page>render.ClearStencil</page>\n</note>",
        "name": "ClearBuffersObeyStencil",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "default": "true",
            "description": "Whether to also clear the stencil buffer.",
            "name": "clearStencil",
            "type": "boolean"
          }
        ],
        "description": "Resets the depth buffer.",
        "name": "ClearDepth",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "",
            "name": "texture",
            "type": "ITexture"
          },
          {
            "description": "The color, see <page>Color</page>",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Clears a render target\n\nIt uses <page>render.Clear</page> then <page>render.SetRenderTarget</page> on the modified render target.",
        "name": "ClearRenderTarget",
        "parent": "render",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/extensions/client/render.lua",
          "lineEnd": 39,
          "lineStart": 27
        }
      },
      {
        "description": "Sets the Stencil Buffer value to `0` for all pixels in the currently active <page text=\"Render Target\">render_rendertargets</page>.\n\nFor more detailed information on the Stencil system, including usage examples, see the <page text=\"Stencils Render Reference\">render_stencils</page> page",
        "name": "ClearStencil",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The X coordinate of the top left corner of the rectangle to be cleared.",
            "name": "startX",
            "type": "number"
          },
          {
            "description": "The Y coordinate of the top left corner of the rectangle to be cleared.",
            "name": "startY",
            "type": "number"
          },
          {
            "description": "The X coordinate of the bottom right corner of the rectangle to be cleared.\n**Note:** Unlike some other rectangle-based functions, this is **not** the width of the rectangle.",
            "name": "endX",
            "type": "number"
          },
          {
            "description": "The Y coordinate of the bottom right corner of the rectangle to be cleared.\n**Note:** Unlike some other rectangle-based functions, this is **not** the height of the rectangle.",
            "name": "endY",
            "type": "number"
          },
          {
            "description": "The Stencil Buffer value that all pixels within the rectangle will be set to.",
            "name": "stencilBufferValue",
            "type": "number"
          }
        ],
        "description": "Sets the Stencil Buffer value for every pixel in a given rectangle to a given value.\n\nThis is **not** affected by <page>render.SetStencilWriteMask</page>\n\nFor more detailed information on the Stencil system, including usage examples, see the <page text=\"Stencils Render Reference\">render_stencils</page> page",
        "name": "ClearStencilBufferRectangle",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The position to sample from.",
            "name": "position",
            "type": "Vector"
          },
          {
            "description": "The normal of the surface.",
            "name": "normal",
            "type": "Vector"
          }
        ],
        "description": "Calculates the lighting caused by dynamic lights for the specified surface.",
        "name": "ComputeDynamicLighting",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "A vector representing the light at that point.",
            "type": "Vector"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The position of the surface to get the light from.",
            "name": "position",
            "type": "Vector"
          },
          {
            "description": "The normal of the surface to get the light from.",
            "name": "normal",
            "type": "Vector"
          }
        ],
        "description": "Calculates the light color of a certain surface.",
        "name": "ComputeLighting",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "A vector representing the light at that point.",
            "type": "Vector"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The position of the sphere in 3D space.",
            "name": "point",
            "type": "Vector"
          },
          {
            "description": "The radius of the sphere in 3D space.",
            "name": "radius",
            "type": "number"
          }
        ],
        "description": "Calculates diameter of a 3D sphere on a 2D screen.\n\n<rendercontext hook=\"false\" type=\"3D\"></rendercontext>",
        "name": "ComputePixelDiameterOfSphere",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The diameter of the sphere in 2D screen space.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The texture to copy to",
            "name": "Target",
            "type": "ITexture"
          }
        ],
        "description": "Copies the currently active Render Target to the specified texture.\n<warning>This does not copy the Depth buffer, no method for that is known at this moment so a common workaround is to store the source texture somewhere else, perform your drawing operations, save the result somewhere else and reapply the source texture.\n</warning>",
        "name": "CopyRenderTargetToTexture",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "",
            "name": "texture_from",
            "type": "ITexture"
          },
          {
            "description": "",
            "name": "texture_to",
            "type": "ITexture"
          }
        ],
        "description": "Copies the contents of one texture to another. Only works with rendertargets.\n<warning>This does not copy the Depth buffer, no method for that is known at this moment so a common workaround is to store the source texture somewhere else, perform your drawing operations, save the result somewhere else and reapply the source texture.\n</warning>",
        "name": "CopyTexture",
        "parent": "render",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/extensions/client/render.lua",
          "lineEnd": 70,
          "lineStart": 61
        }
      },
      {
        "arguments": [
          {
            "description": "Cullmode, see <page>Enums/MATERIAL_CULLMODE</page>",
            "name": "cullMode",
            "type": "number"
          }
        ],
        "description": "Sets the cull mode. The culling mode defines how back faces are culled when rendering geometry.",
        "name": "CullMode",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The minimum depth of the upcoming render. `0.0` = render normally; `1.0` = render nothing.",
            "name": "depthmin",
            "type": "number"
          },
          {
            "description": "The maximum depth of the upcoming render. `0.0` = render everything (through walls); `1.0` = render normally.",
            "name": "depthmax",
            "type": "number"
          }
        ],
        "description": "Set's the depth range of the upcoming render.",
        "name": "DepthRange",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The Beam's start position.",
            "name": "startPos",
            "type": "Vector"
          },
          {
            "description": "The Beam's end position.",
            "name": "endPos",
            "type": "Vector"
          },
          {
            "description": "The width of the Beam.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "The starting coordinate of the Beam's texture.",
            "name": "textureStart",
            "type": "number"
          },
          {
            "description": "The end coordinate of the Beam's texture.",
            "name": "textureEnd",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255 )",
            "description": "What <page>Color</page> to tint the Beam.",
            "name": "color",
            "type": "Color"
          }
        ],
        "description": "<rendercontext hook=\"false\" type=\"3D\"></rendercontext>\n\nDraws a single-segment Beam made out of a textured, billboarded quad stretching between two points.\n\nFor more detailed information, including usage examples, see the <page text=\"Beams Render Reference\">render_beams</page>",
        "name": "DrawBeam",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Origin of the box.",
            "name": "position",
            "type": "Vector"
          },
          {
            "description": "Orientation of the box.",
            "name": "angles",
            "type": "Angle"
          },
          {
            "description": "Start position of the box, relative to origin.",
            "name": "mins",
            "type": "Vector"
          },
          {
            "description": "End position of the box, relative to origin.",
            "name": "maxs",
            "type": "Vector"
          },
          {
            "default": "Color( 255, 255, 255 )",
            "description": "The color of the box. Uses the <page>Color</page>.",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Draws a box in 3D space.\n\n<rendercontext hook=\"false\" type=\"3D\"></rendercontext>",
        "name": "DrawBox",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Line start position in world coordinates.",
            "name": "startPos",
            "type": "Vector"
          },
          {
            "description": "Line end position in world coordinates.",
            "name": "endPos",
            "type": "Vector"
          },
          {
            "default": "Color( 255, 255, 255 )",
            "description": "The color to be used. Uses the <page>Color</page>.",
            "name": "color",
            "type": "table"
          },
          {
            "default": "false",
            "description": "Whether or not to consider the Z buffer. If false, the line will be drawn over everything currently drawn, if true, the line will be drawn with depth considered, as if it were a regular object in 3D space.\n\n<bug issue=\"1086\">Enabling this option will cause the line to ignore the color's alpha.</bug>",
            "name": "writeZ",
            "type": "boolean"
          }
        ],
        "description": "Draws a line in 3D space.\n\n<rendercontext hook=\"false\" type=\"3D\"></rendercontext>",
        "name": "DrawLine",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "First vertex.",
            "name": "vert1",
            "type": "Vector"
          },
          {
            "description": "The second vertex.",
            "name": "vert2",
            "type": "Vector"
          },
          {
            "description": "The third vertex.",
            "name": "vert3",
            "type": "Vector"
          },
          {
            "description": "The fourth vertex.",
            "name": "vert4",
            "type": "Vector"
          },
          {
            "default": "Color( 255, 255, 255 )",
            "description": "The color of the quad. See <page>Global.Color</page>",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Draws 2 connected triangles. Expects material to be set by <page>render.SetMaterial</page>.\n\n<rendercontext hook=\"false\" type=\"3D\"></rendercontext>",
        "name": "DrawQuad",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Origin of the sprite.",
            "name": "position",
            "type": "Vector"
          },
          {
            "description": "The face direction of the quad.",
            "name": "normal",
            "type": "Vector"
          },
          {
            "description": "The width of the quad.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "The height of the quad.",
            "name": "height",
            "type": "number"
          },
          {
            "description": "The color of the quad. Uses the <page>Color</page>.",
            "name": "color",
            "type": "table"
          },
          {
            "default": "0",
            "description": "The rotation of the quad counter-clockwise in degrees around the normal axis. In other words, the quad will always face the same way but this will rotate its corners.",
            "name": "rotation",
            "type": "number"
          }
        ],
        "description": "Draws a quad.\n\n<rendercontext hook=\"false\" type=\"3D\"></rendercontext>",
        "name": "DrawQuadEasy",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "default": "false",
            "description": "If set to true, when rendering a poster the quad will be properly drawn in parts in the poster. This is used internally by some Post Processing effects. Certain special textures (frame buffer like textures) do not need this adjustment.",
            "name": "applyPoster",
            "type": "boolean"
          }
        ],
        "description": "Draws the current material set by <page>render.SetMaterial</page> to the whole screen. The color cannot be customized.\n\nSee also <page>render.DrawScreenQuadEx</page>.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "DrawScreenQuad",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "X start position of the rect.",
            "name": "startX",
            "type": "number"
          },
          {
            "description": "Y start position of the rect.",
            "name": "startY",
            "type": "number"
          },
          {
            "description": "Width of the rect.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "Height of the rect.",
            "name": "height",
            "type": "number"
          }
        ],
        "description": "Draws the current material set by <page>render.SetMaterial</page> to the area specified. Color cannot be customized.\n\nSee also <page>render.DrawScreenQuad</page>.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "DrawScreenQuadEx",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Position of the sphere.",
            "name": "position",
            "type": "Vector"
          },
          {
            "description": "Radius of the sphere. Negative radius will make the sphere render inwards rather than outwards.",
            "name": "radius",
            "type": "number"
          },
          {
            "description": "The number of longitude steps. This controls the quality of the sphere. Higher quality will lower performance significantly. 50 is a good number to start with.",
            "name": "longitudeSteps",
            "type": "number"
          },
          {
            "description": "The number of latitude steps. This controls the quality of the sphere. Higher quality will lower performance significantly. 50 is a good number to start with.",
            "name": "latitudeSteps",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255 )",
            "description": "The color of the sphere. Uses the <page>Color</page>.",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Draws a sphere in 3D space. The material previously set with <page>render.SetMaterial</page> will be applied the sphere's surface.\n\nSee also <page>render.DrawWireframeSphere</page> for a wireframe equivalent.\n\n<rendercontext hook=\"false\" type=\"3D\"></rendercontext>",
        "name": "DrawSphere",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Position of the sprite.",
            "name": "position",
            "type": "Vector"
          },
          {
            "description": "Width of the sprite.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "Height of the sprite.",
            "name": "height",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255 )",
            "description": "Color of the sprite. Uses the <page>Color</page>.",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Draws a sprite in 3D space.\n\n<rendercontext hook=\"false\" type=\"3D\"></rendercontext>",
        "name": "DrawSprite",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The texture to draw",
            "name": "tex",
            "type": "ITexture"
          }
        ],
        "description": "Draws a texture over the whole screen.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "DrawTextureToScreen",
        "parent": "render",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/extensions/client/render.lua",
          "lineEnd": 156,
          "lineStart": 148
        }
      },
      {
        "arguments": [
          {
            "description": "The texture to draw",
            "name": "tex",
            "type": "ITexture"
          },
          {
            "description": "The x coordinate of the rectangle to draw.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The y coordinate of the rectangle to draw.",
            "name": "y",
            "type": "number"
          },
          {
            "description": "The width of the rectangle to draw.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "The height of the rectangle to draw.",
            "name": "height",
            "type": "number"
          }
        ],
        "description": "Draws a textured rectangle.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "DrawTextureToScreenRect",
        "parent": "render",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/extensions/client/render.lua",
          "lineEnd": 166,
          "lineStart": 158
        }
      },
      {
        "arguments": [
          {
            "description": "Position of the box.",
            "name": "position",
            "type": "Vector"
          },
          {
            "description": "Angles of the box.",
            "name": "angle",
            "type": "Angle"
          },
          {
            "description": "The lowest corner of the box.",
            "name": "mins",
            "type": "Vector"
          },
          {
            "description": "The highest corner of the box.",
            "name": "maxs",
            "type": "Vector"
          },
          {
            "default": "Color( 255, 255, 255 )",
            "description": "The color of the box. Uses the <page>Color</page>.",
            "name": "color",
            "type": "table"
          },
          {
            "default": "false",
            "description": "Sets whenever to write to the zBuffer.",
            "name": "writeZ",
            "type": "boolean"
          }
        ],
        "description": "Draws a wireframe box in 3D space.\n\n<rendercontext hook=\"false\" type=\"3D\"></rendercontext>",
        "name": "DrawWireframeBox",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Position of the sphere.",
            "name": "position",
            "type": "Vector"
          },
          {
            "description": "The size of the sphere.",
            "name": "radius",
            "type": "number"
          },
          {
            "description": "The amount of longitude steps.\nThe larger this number is, the smoother the sphere is.",
            "name": "longitudeSteps",
            "type": "number"
          },
          {
            "description": "The amount of latitude steps.\nThe larger this number is, the smoother the sphere is.",
            "name": "latitudeSteps",
            "type": "number"
          },
          {
            "default": "Color( 255, 255, 255 )",
            "description": "The color of the wireframe. Uses the <page>Color</page>.",
            "name": "color",
            "type": "table"
          },
          {
            "default": "false",
            "description": "Whether or not to consider the Z buffer. If false, the wireframe will be drawn over everything currently drawn. If true, it will be drawn with depth considered, as if it were a regular object in 3D space.",
            "name": "writeZ",
            "type": "boolean"
          }
        ],
        "description": "Draws a wireframe sphere in 3d space.\n\n<rendercontext hook=\"false\" type=\"3D\"></rendercontext>",
        "name": "DrawWireframeSphere",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "New clipping state.",
            "name": "state",
            "type": "boolean"
          }
        ],
        "description": "Sets the status of the clip renderer, returning previous state.\n\n<warning>To prevent unintended rendering behavior of other mods/the game, you must reset the clipping state to its previous value.</warning>",
        "name": "EnableClipping",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Previous clipping state.",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Ends the beam mesh of a beam started with <page>render.StartBeam</page>.\n\nFor more detailed information on Beams, as well as usage examples, see the <page text=\"Beams Render Reference\">render_beams</page>",
        "name": "EndBeam",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Red channel of the fog color, 0 - 255.",
            "name": "red",
            "type": "number"
          },
          {
            "description": "Green channel of the fog color, 0 - 255.",
            "name": "green",
            "type": "number"
          },
          {
            "description": "Blue channel of the fog color, 0 - 255.",
            "name": "blue",
            "type": "number"
          }
        ],
        "description": "Sets the color of the fog.",
        "name": "FogColor",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The distance at which the fog reaches its max density.\n\n<note>If used in <page>GM:SetupSkyboxFog</page>, this value **must** be scaled by the first argument of the hook</note>",
            "name": "distance",
            "type": "number"
          }
        ],
        "description": "Sets the at which the fog reaches its max density.",
        "name": "FogEnd",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The maximum density of the fog, 0-1.",
            "name": "maxDensity",
            "type": "number"
          }
        ],
        "description": "Sets the maximum density of the fog.",
        "name": "FogMaxDensity",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Fog mode, see <page>Enums/MATERIAL_FOG</page>.",
            "name": "fogMode",
            "type": "number{MATERIAL_FOG}"
          }
        ],
        "description": "Sets the mode of fog.",
        "name": "FogMode",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The distance at which the fog starts showing up.\n<note>If used in <page>GM:SetupSkyboxFog</page>, this value **must** be scaled by the first argument of the hook</note>",
            "name": "fogStart",
            "type": "number"
          }
        ],
        "description": "Sets the distance at which the fog starts showing up.",
        "name": "FogStart",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Returns the ambient color of the map.",
        "name": "GetAmbientLightColor",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "color",
            "type": "Vector"
          }
        ]
      },
      {
        "description": "Returns the current alpha blending.",
        "name": "GetBlend",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Current alpha blending in range 0 to 1.",
            "type": "number"
          }
        ]
      },
      {
        "description": "<internal>You can use <page>Global.GetRenderTargetEx</page> if you need to create a Render Target</internal>\nReturns the Render Target texture that is used internally for the <page text=\"Bloom\">Global.DrawBloom</page> <page text=\"Post Processing\">Post-Processing_Materials</page> effect.",
        "name": "GetBloomTex0",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The render target texture named `s_pBloomTex0`.",
            "type": "ITexture"
          }
        ]
      },
      {
        "description": "<internal>You probably want to just use a custom render target. See <page>Global.GetRenderTargetEx</page>.</internal>\n\nReturns the Render Target texture used internally for the <page text=\"Blur\">render.BlurRenderTarget</page> <page text=\"Post Processing\">Post-Processing_Materials</page> effect.\n\nDespite its name, this function is not used for the <page text=\"Bloom\">Global.DrawBloom</page> effect.",
        "name": "GetBloomTex1",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The render target texture named `s_pBloomTex1`.",
            "type": "ITexture"
          }
        ]
      },
      {
        "description": "Returns the current color modulation values as normals.",
        "name": "GetColorModulation",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "r",
            "type": "number"
          },
          {
            "description": "g",
            "type": "number"
          },
          {
            "description": "b",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the maximum available directX version.",
        "name": "GetDXLevel",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "dxLevel",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the current fog color.",
        "name": "GetFogColor",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Red part of the color.",
            "type": "number"
          },
          {
            "description": "Green part of the color",
            "type": "number"
          },
          {
            "description": "Blue part of the color",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the fog start and end distance.",
        "name": "GetFogDistances",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Fog start distance set by <page>render.FogStart</page>",
            "type": "number"
          },
          {
            "description": "For end distance set by <page>render.FogEnd</page>",
            "type": "number"
          },
          {
            "description": "Fog Z distance set by <page>render.SetFogZ</page>",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the fog mode.",
        "name": "GetFogMode",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Fog mode, see <page>Enums/MATERIAL_FOG</page>",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the full screen depth texture.",
        "name": "GetFullScreenDepthTexture",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The `_rt_FullFrameDepth` texture.",
            "type": "ITexture"
          }
        ]
      },
      {
        "description": "Returns whether HDR is currently enabled or not. This takes into account hardware support, current map and current client settings.",
        "name": "GetHDREnabled",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "`true` if the player currently has HDR enabled.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The position of the surface to get the light from.",
            "name": "position",
            "type": "Vector"
          }
        ],
        "description": "Gets the light exposure on the specified position.",
        "name": "GetLightColor",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "lightColor",
            "type": "Vector"
          }
        ]
      },
      {
        "description": "<internal>You probably want to just use a custom render target. See <page>Global.GetRenderTargetEx</page>.</internal>\n\nReturns the first render target texture that is used internally for Motion Blur and Frame Blend post processing effects.",
        "name": "GetMoBlurTex0",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The render target named `s_pMoBlurTex0`.",
            "type": "ITexture"
          }
        ]
      },
      {
        "description": "<internal>You probably want to just use a custom render target. See <page>Global.GetRenderTargetEx</page>.</internal>\n\nReturns the second render target texture that is used internally for Motion Blur and Frame Blend post processing effects.",
        "name": "GetMoBlurTex1",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The render target named `s_pMoBlurTex1`.",
            "type": "ITexture"
          }
        ]
      },
      {
        "description": "<internal>You probably want to just use a custom render target. See <page>Global.GetRenderTargetEx</page>.</internal>\n\nReturns the first render target texture that was used internally for Morph post processing effect\n\nThe post processing effect was removed from the base game at some point during development of Garry's Mod 13, but can still be found as a community mod: https://steamcommunity.com/sharedfiles/filedetails/?id=501088470",
        "name": "GetMorphTex0",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The render target texture named `s_pMorphTexture0`.",
            "type": "ITexture"
          }
        ]
      },
      {
        "description": "<internal>You probably want to just use a custom render target. See <page>Global.GetRenderTargetEx</page>.</internal>\n\nReturns the second render target texture that was used internally for Morph post processing effect.\n\nSee <page>render.GetMorphTex0</page> for more information..",
        "name": "GetMorphTex1",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The render target texture named `s_pMorphTexture1`.",
            "type": "ITexture"
          }
        ]
      },
      {
        "description": "Returns the Power Of Two Frame Buffer texture.",
        "name": "GetPowerOfTwoTexture",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The power of two texture, which is `_rt_PowerOfTwoFB` by default.",
            "type": "ITexture"
          }
        ]
      },
      {
        "description": "<deprecated>Alias of <page>render.GetPowerOfTwoTexture</page>.</deprecated>\n\nAlias of <page>render.GetPowerOfTwoTexture</page>.",
        "name": "GetRefractTexture",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The <page>render.GetPowerOfTwoTexture</page>.",
            "type": "ITexture"
          }
        ]
      },
      {
        "description": "Returns the currently active render target.\n\nInstead of saving the current render target using this function and restoring to it later, it is generally better practice to use <page>render.PushRenderTarget</page> and <page>render.PopRenderTarget</page>.",
        "name": "GetRenderTarget",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The currently active Render Target",
            "type": "ITexture"
          }
        ]
      },
      {
        "description": "Returns the `_rt_ResolvedFullFrameDepth` texture for SSAO depth. It will only be updated if <page>GM:NeedsDepthPass</page> returns true.",
        "name": "GetResolvedFullFrameDepth",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The depth texture.",
            "type": "ITexture"
          }
        ]
      },
      {
        "arguments": [
          {
            "default": "0",
            "description": "Max index is 3, but engine only creates the first two for you.",
            "name": "textureIndex",
            "type": "number"
          }
        ],
        "description": "Obtain an <page>ITexture</page> of the screen. You must call <page>render.UpdateScreenEffectTexture</page> in order to update this texture with the currently rendered scene.\n\nThis texture is mainly used within <page>GM:RenderScreenspaceEffects</page>",
        "name": "GetScreenEffectTexture",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The requested texture.",
            "type": "ITexture"
          }
        ]
      },
      {
        "description": "Returns the first quarter sized frame buffer texture.",
        "name": "GetSmallTex0",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The render target texture named `_rt_SmallFB0`.",
            "type": "ITexture"
          }
        ]
      },
      {
        "description": "Returns the second quarter sized frame buffer texture.",
        "name": "GetSmallTex1",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The render target texture named `_rt_SmallFB1`.",
            "type": "ITexture"
          }
        ]
      },
      {
        "description": "Returns a floating point texture (RGBA16161616F format) the same resolution as the screen.\n\n<note>The <page>gmodscreenspace</page> doesn't behave as expected when drawing a floating-point texture to an integer texture (e.g. the default render target). Use an UnlitGeneric material instead</note>",
        "name": "GetSuperFPTex",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Render target named `__rt_SuperTexture1`",
            "type": "ITexture"
          }
        ]
      },
      {
        "description": "See <page>render.GetSuperFPTex</page>",
        "name": "GetSuperFPTex2",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Render target named `__rt_SuperTexture2`.",
            "type": "ITexture"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The start position to trace from.",
            "name": "startPos",
            "type": "Vector"
          },
          {
            "description": "The end position of the trace.",
            "name": "endPos",
            "type": "Vector"
          }
        ],
        "description": "Performs a render trace and returns the color of the surface hit, this uses a low res version of the texture.",
        "name": "GetSurfaceColor",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "color",
            "type": "Vector"
          }
        ]
      },
      {
        "description": "Returns a vector representing linear tone mapping scale.",
        "name": "GetToneMappingScaleLinear",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The vector representing linear tone mapping scale.",
            "type": "Vector"
          }
        ]
      },
      {
        "arguments": [
          {
            "default": "false",
            "description": "If `true`, returns the `view-&gt;GetViewSetup`, if `false` - returns `view-&gt;GetPlayerViewSetup`",
            "name": "noPlayer",
            "type": "boolean"
          }
        ],
        "description": "Returns the current view setup.",
        "name": "GetViewSetup",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Current current view setup. See <page>Structures/ViewSetup</page>",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "default": "nil",
            "description": "The material to use as override, use `nil` to disable.",
            "name": "material",
            "type": "IMaterial|nil"
          }
        ],
        "description": "Sets the render material override for all next calls of <page>Entity:DrawModel</page>. Also overrides <page>render.MaterialOverrideByIndex</page>.",
        "name": "MaterialOverride",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "default": "nil",
            "description": "The index of the material to override, in range of 0 to 31. `nil` will reset all overrides.",
            "name": "index",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "The material to override with, `nil` will reset the override for given index.",
            "name": "material",
            "type": "IMaterial"
          }
        ],
        "description": "Similar to <page>render.MaterialOverride</page>, but overrides the materials per index. Similar to <page>Entity:SetSubMaterial</page>\n\n<page>render.MaterialOverride</page> overrides effects of this function.",
        "name": "MaterialOverrideByIndex",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Returns the maximum texture height the renderer can handle.",
        "name": "MaxTextureHeight",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "maxTextureHeight",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the maximum texture width the renderer can handle.",
        "name": "MaxTextureWidth",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "maxTextureWidth",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Requires:\n* <page>string</page> model - The model to draw\n* <page>Vector</page> pos - The position to draw the model at\n* <page>Angle</page> angle - The angles to draw the model at",
            "name": "settings",
            "type": "table"
          },
          {
            "default": "nil",
            "description": "If provided, this entity will be reused instead of creating a new one with <page>Global.ClientsideModel</page>. Note that the ent's model, position and angles will be changed, and <page>Entity:SetNoDraw</page> will be set to true.",
            "name": "ent",
            "type": "CSEnt"
          }
        ],
        "description": "Creates a new <page>Global.ClientsideModel</page>, renders it at the specified pos/ang, and removes it. Can also be given an existing <page>CSEnt</page> to reuse instead.\n\n<note>This function is only meant to be used in a single render pass kind of scenario, if you need to render a model continuously, use a cached <page>Global.ClientsideModel</page> and provide it as a second argument.</note>\n\n<bug issue=\"2688\">Using this with a map model (<page>game.GetWorld</page>():<page text=\"GetModel\">Entity:GetModel</page>()) crashes the game.</bug>",
        "name": "Model",
        "parent": "render",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/extensions/client/render.lua",
          "lineEnd": 199,
          "lineStart": 175
        }
      },
      {
        "arguments": [
          {
            "description": "The <page>IMaterial</page> that will be used for all upcoming draw operations, or `nil` to stop overriding.",
            "name": "material",
            "type": "IMaterial"
          }
        ],
        "description": "Forces all future draw operations to use a specific <page>IMaterial</page>.\n\nBecause this is independent of a specific <page>Entity</page>, it can be used to change materials on static models that are part of maps.",
        "name": "ModelMaterialOverride",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Enable or disable the override.",
            "name": "enable",
            "type": "boolean"
          },
          {
            "description": "If the previous argument is true, sets whether the next rendering operations should write to the alpha channel or not. Has no effect if the previous argument is false.",
            "name": "shouldWrite",
            "type": "boolean"
          }
        ],
        "description": "Overrides the write behaviour of all next rendering operations towards the alpha channel of the current render target.\n\nSee also <page>render.OverrideBlend</page>.\n\n<note>Doing <page>surface</page> draw calls with alpha set to 0 is a no-op and will never have any effect.</note>",
        "name": "OverrideAlphaWriteEnable",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "Set to `true` to enable Blend Overrides.",
            "name": "enabled",
            "type": "boolean"
          },
          {
            "description": "This determines which value each affected pixel's **Source color and alpha** will be multiplied by before they are sent to the Blending Function.\nOne of the <page>Enums/BLEND</page> enums.",
            "name": "sourceMultiplier",
            "type": "number{BLEND}"
          },
          {
            "description": "This determines which value each affected pixel's **Destination color and alpha** will be multiplied by before they are sent to the Blending Function.\nOne of the <page>Enums/BLEND</page> enums.",
            "name": "destinationMultiplier",
            "type": "number{BLEND}"
          },
          {
            "description": "After the Source and Destination color and alpha have been multiplied against their corresponding multipliers, they are passed to the Blending Function which combines them into the final color and alpha for the pixel.\nOne of the <page>Enums/BLENDFUNC</page> enums.",
            "name": "blendingFunction",
            "type": "number{BLENDFUNC}"
          }
        ],
        "description": "Overrides the way that the final color and alpha is calculated for each pixel affected by upcoming draw operations.\n\nWhen a draw operation is performed, the rendering system examines each pixel that is affected by the draw operation and determines its new color by combining (or \"Blending\") the pixel's current color (Called the \"Destination\" or \"Dst\" color) with the new color produced by the draw operation (Called the \"Source\" or \"Src\" color.)\n\nThis function allows you to control the way that those two colors (The Source and Destination) are combined to produce the final pixel color.\n\nIt's important to know that while <page text=\"Colors\">Global.Color</page> use values in the range `(0-255)`, the color and alpha values used here are normalized to the range `(0-1)` so that they can be multiplied together to produce a value that is still in the range `(0-1)`.",
        "name": "OverrideBlend",
        "overloads": [
          {
            "arguments": [
              {
                "description": "Set to `true` to enable Blend Overrides.",
                "name": "enabled",
                "type": "boolean"
              },
              {
                "description": "This determines which value each affected pixel's **Source color** will be multiplied by before they are sent to the Color Blending Function.\nOne of the <page>Enums/BLEND</page> enums.",
                "name": "sourceColorMultiplier",
                "type": "number{BLEND}"
              },
              {
                "description": "This determines which value each affected pixel's **Destination color** will be multiplied by before they are sent to the Color Blending Function.\nOne of the <page>Enums/BLEND</page> enums.",
                "name": "destinationColorMultiplier",
                "type": "number{BLEND}"
              },
              {
                "description": "After the Source and Destination colors have been multiplied against their corresponding multipliers, they are passed to the Color Blending Function which combines them into the final color and alpha for the pixel.\nOne of the <page>Enums/BLENDFUNC</page> enums.",
                "name": "colorBlendingFunction",
                "type": "number{BLENDFUNC}"
              },
              {
                "default": "none",
                "description": "This determines which value each affected pixel's **Source alpha** will be multiplied by before they are sent to the Alpha Blending Function.\nOne of the <page>Enums/BLEND</page> enums.",
                "name": "sourceAlphaMultiplier",
                "type": "number{BLEND}"
              },
              {
                "default": "none",
                "description": "This determines which value each affected pixel's **Destination alpha** will be multiplied by before they are sent to the Alpha Blending Function.\nOne of the <page>Enums/BLEND</page> enums.",
                "name": "destinationAlphaMultiplier",
                "type": "number{BLEND}"
              },
              {
                "default": "none",
                "description": "After the Source and Destination alphas have been multiplied against their corresponding multipliers, they are passed to the Alpha Blending Function which combines them into the final alpha for the pixel.",
                "name": "alphaBlendingFunction",
                "type": "number{BLENDFUNC}"
              }
            ]
          },
          {
            "arguments": [
              {
                "description": "Set to `false` to disable blend overrides.",
                "name": "enabled",
                "type": "boolean"
              }
            ]
          }
        ],
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "true to enable, false to disable. No other arguments are required when disabling.",
            "name": "enabled",
            "type": "boolean"
          },
          {
            "description": "The source color blend function <page>Enums/BLEND</page>. Determines how a rendered texture's final color should be calculated.",
            "name": "srcBlend",
            "type": "number"
          },
          {
            "description": "",
            "name": "destBlend",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "The source alpha blend function <page>Enums/BLEND</page>. Determines how a rendered texture's final alpha should be calculated.",
            "name": "srcBlendAlpha",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "",
            "name": "destBlendAlpha",
            "type": "number"
          }
        ],
        "description": "<deprecated>Use <page>render.OverrideBlend</page> instead.</deprecated>\n\nOverrides the internal graphical functions used to determine the final color and alpha of a rendered texture.\n\nSee also <page>render.OverrideAlphaWriteEnable</page>.\n\n<note>Doing <page>surface</page> draw calls with alpha set to 0 is a no-op and will never have any effect.</note>",
        "name": "OverrideBlendFunc",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "Enable or disable the override.",
            "name": "enable",
            "type": "boolean"
          },
          {
            "description": "If the previous argument is true, sets whether the next rendering operations should write to the color channel or not. Has no effect if the previous argument is false.",
            "name": "shouldWrite",
            "type": "boolean"
          }
        ],
        "description": "Overrides the write behaviour of all next rendering operations towards the color channel of the current render target.",
        "name": "OverrideColorWriteEnable",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "Enable or disable the override.",
            "name": "enable",
            "type": "boolean"
          },
          {
            "description": "If the previous argument is true, sets whether the next rendering operations should write to the depth buffer or not. Has no effect if the previous argument is false.",
            "name": "shouldWrite",
            "type": "boolean"
          }
        ],
        "description": "Overrides the write behaviour of all next rendering operations towards the depth buffer.",
        "name": "OverrideDepthEnable",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "description": "Performs a Stencil operation on every pixel in the active <page text=\"Render Target\">render_rendertargets</page> without performing a draw operation.\n\nFor more detailed information on the Stencil system, including usage examples, see the <page text=\"Stencils Render Reference\">render_stencils</page> page",
        "name": "PerformFullScreenStencilOperation",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "description": "Removes the current active clipping plane from the clip plane stack.",
        "name": "PopCustomClipPlane",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "description": "Pops (Removes) the texture filter most recently pushed (Added) onto the magnification texture filter stack.\n\nThis function should only be called *after* a magnification filter has been pushed via <page text=\"render.PushFilterMag()\">render.PushFilterMag</page>\n\nFor more detailed information and a usage example, see <page text=\"the texture minification and magnification render reference.\">render_min_mag_filters</page>",
        "name": "PopFilterMag",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "description": "Pops (Removes) the texture filter most recently pushed (Added) onto the minification texture filter stack.\n\nThis function should only be called *after* a minification filter has been pushed via <page text=\"render.PushFilterMin()\">render.PushFilterMin</page>\n\nFor more detailed information and a usage example, see <page text=\"the texture minification and magnification render reference.\">render_min_mag_filters</page>",
        "name": "PopFilterMin",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "description": "Pops the current flashlight mode from the flashlight mode stack.",
        "name": "PopFlashlightMode",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Pops the last render target and viewport from the RT stack and sets them as the current render target and viewport.\n\nThis is should be called to restore the previous render target and viewport after a call to <page>render.PushRenderTarget</page>.",
        "name": "PopRenderTarget",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The normal of the clipping plane.",
            "name": "normal",
            "type": "Vector"
          },
          {
            "description": "The distance of the plane from the world origin. You can use <page>Vector:Dot</page> between the normal and any point on the plane to find this.",
            "name": "distance",
            "type": "number"
          }
        ],
        "description": "Pushes a new clipping plane of the clip plane stack and sets it as active.\n\n<bug issue=\"2687\">A max of 2 clip planes are supported on Linux/POSIX, and 6 on Windows.</bug>",
        "name": "PushCustomClipPlane",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The texture filter to use. For available options, see <page>Enums/TEXFILTER</page>",
            "name": "texFilterType",
            "type": "number"
          }
        ],
        "description": "Pushes (Adds) a texture filter onto the magnification texture filter stack.\nThis will modify how textures are stretched to sizes larger than their native resolution for upcoming rendering and drawing operations.\nFor a version of this same function that modifies filtering for texture sizes smaller than their native resolution, see <page text=\"render.PushFilterMin()\">render.PushFilterMin</page>\n\nAlways be sure to call <page text=\"render.PopFilterMag()\">render.PopFilterMag</page> afterwards to avoid texture filtering problems.\n\nFor more detailed information and a usage example, see <page text=\"the texture minification and magnification render reference.\">render_min_mag_filters</page>",
        "name": "PushFilterMag",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The texture filter to use. For available options, see <page>Enums/TEXFILTER</page>",
            "name": "texFilterType",
            "type": "number"
          }
        ],
        "description": "Pushes (Adds) a texture filter onto the minification texture filter stack.\nThis will modify how textures are compressed to a lower resolution than their native resolution for upcoming rendering and drawing operations.\nFor a version of this same function that modifies filtering for texture sizes larger than their native resolution, see <page text=\"render.PushFilterMag()\">render.PushFilterMag</page>\n\nAlways be sure to call <page text=\"render.PopFilterMin()\">render.PopFilterMin</page> afterwards to avoid texture filtering problems.\n\nFor more detailed information and a usage example, see <page text=\"the texture minification and magnification render reference.\">render_min_mag_filters</page>",
        "name": "PushFilterMin",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "default": "false",
            "description": "Whether the flashlight mode should be enabled or disabled.",
            "name": "enable",
            "type": "boolean"
          }
        ],
        "description": "Enables the flashlight projection for the upcoming rendering.\n\n<deprecated>This will leave models lit under specific conditions. You should use <page>render.RenderFlashlights</page> which is meant as a direct replacement for this function.</deprecated>",
        "name": "PushFlashlightMode",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "default": "nil",
            "description": "The new render target to be used.\nCan be set to `nil` to push the main game frame buffer.",
            "name": "texture",
            "type": "ITexture"
          },
          {
            "default": "0",
            "description": "X origin of the viewport.",
            "name": "x",
            "type": "number"
          },
          {
            "default": "0",
            "description": "Y origin of the viewport.",
            "name": "y",
            "type": "number"
          },
          {
            "default": "texture:Width()",
            "description": "Width of the viewport.",
            "name": "w",
            "type": "number"
          },
          {
            "default": "texture:Height()",
            "description": "Height of the viewport",
            "name": "h",
            "type": "number"
          }
        ],
        "description": "Pushes the current render target and viewport to the RT stack then sets a new current render target and viewport. If the viewport is not specified, the dimensions of the render target are used instead.\n\nThis is similar to a call to <page>render.SetRenderTarget</page> and <page>render.SetViewPort</page> where the current render target and viewport have been saved beforehand, except the viewport isn't clipped to screen bounds.\n\nSee also <page>render.PopRenderTarget</page>.\n\n<note>If you want to render to the render target in 2d mode and it is not the same size as the screen, use <page>cam.Start2D</page> and <page>cam.End2D</page>.</note>\n<note>If the render target is bigger than the screen, rendering done with the surface library will be clipped to the screen bounds unless you call <page>Global.DisableClipping</page></note>",
        "name": "PushRenderTarget",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The x coordinate.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The y coordinate.",
            "name": "y",
            "type": "number"
          }
        ],
        "description": "Reads the color of the specified pixel from the RenderTarget sent by <page>render.CapturePixels</page>",
        "name": "ReadPixel",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The red channel value.",
            "name": "r",
            "type": "number"
          },
          {
            "description": "The green channel value.",
            "name": "g",
            "type": "number"
          },
          {
            "description": "The blue channel value.",
            "name": "b",
            "type": "number"
          },
          {
            "description": "The alpha channel value or <page>no value</page> if the render target has no alpha channel.",
            "name": "a",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "default": "false",
            "description": "When true, this will also apply lighting changes to static props. This is really slow on large maps.",
            "name": "DoStaticProps",
            "type": "boolean"
          },
          {
            "default": "false",
            "description": "Forces all props to update their static lighting. Can be slow.",
            "name": "UpdateStaticLighting",
            "type": "boolean"
          }
        ],
        "description": "This applies the changes made to map lighting using <page>engine.LightStyle</page>.",
        "name": "RedownloadAllLightmaps",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The function that renders the <page>IMesh</page>, or a model.",
            "name": "renderFunc",
            "type": "function"
          }
        ],
        "description": "Renders additive flashlights on an <page>IMesh</page>, a direct replacement for <page>render.PushFlashlightMode</page>.",
        "name": "RenderFlashlights",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "X position for the HUD draw origin.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "Y position for the HUD draw origin.",
            "name": "y",
            "type": "number"
          },
          {
            "description": "Width of the HUD draw.",
            "name": "w",
            "type": "number"
          },
          {
            "description": "Height of the HUD draw.",
            "name": "h",
            "type": "number"
          }
        ],
        "description": "Renders the HUD on the screen.",
        "name": "RenderHUD",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "default": "nil",
            "description": "The view data to be used in the rendering. See <page>Structures/ViewData</page>. Any missing value is assumed to be that of the current view. Similarly, you can make a normal render by simply not passing this table at all.",
            "name": "view",
            "type": "table"
          }
        ],
        "description": "Renders the scene with the specified viewData to the current active render target.\n\n<bug issue=\"1330\">Static props and LODs are rendered improperly due to incorrectly perceived distance.</bug>\n<bug>Using render.RenderView on a RenderTarget texture in a 3d context like SWEP:PostDrawViewModel() while drawing the RenderTarget texture causes screen flickers</bug>",
        "name": "RenderView",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The red part of the color, 0-1",
            "name": "r",
            "type": "number"
          },
          {
            "description": "The green part of the color, 0-1",
            "name": "g",
            "type": "number"
          },
          {
            "description": "The blue part of the color, 0-1",
            "name": "b",
            "type": "number"
          }
        ],
        "description": "Resets the model lighting to the specified color.\n\nCalls <page>render.SetModelLighting</page> for every direction with given color.",
        "name": "ResetModelLighting",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The value which should be used as multiplier.",
            "name": "scale",
            "type": "number"
          }
        ],
        "description": "Resets the HDR tone multiplier to the specified value.\n\nThis will only work on HDR maps, and the value will automatically fade to what it was ( or whatever <page>render.SetGoalToneMappingScale</page> is ) if called only once.",
        "name": "ResetToneMappingScale",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The red part of the color, 0-1.",
            "name": "r",
            "type": "number"
          },
          {
            "description": "The green part of the color, 0-1.",
            "name": "g",
            "type": "number"
          },
          {
            "description": "The blue part of the color, 0-1.",
            "name": "b",
            "type": "number"
          }
        ],
        "description": "Sets the ambient lighting for any upcoming render operation.",
        "name": "SetAmbientLight",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The alpha (transparency) for upcoming draw operations.\nA value in the range `(0-1)` where `0` is fully transparent, `0.5` is 50% visible, and `1` is fully opaque.",
            "name": "blending",
            "type": "number"
          }
        ],
        "description": "Sets the alpha blending (or transparency) for upcoming render operations.\n\nSee <page>render.SetColorModulation</page> for the function to affect RGB color channels.\n\nBy itself, this will cause visible overlapping on parts of a model that are in front of other parts of the same model.\nFor a solution to this, see the examples below.\n\n<bug issue=\"3166\">This does not affect non-model `render.Draw*` functions.</bug>\n<note>If a material has the [$alphatest](https://developer.valvesoftware.com/wiki/$alphatest) flag enabled then this function might not behave as expected because alpha will be binary, this has a default cutoff of `0.7`.</note>",
        "name": "SetBlend",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Sets the current drawing material to \"color\".\n\nThe material is defined as:\n```\n\n\"UnlitGeneric\"\n{\n\"$basetexture\" \"color/white\"\n\"$model\" \t\t1\n\"$translucent\" \t1\n\"$vertexalpha\" \t1\n\"$vertexcolor\" \t1\n}\n```",
        "name": "SetColorMaterial",
        "parent": "render",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/extensions/client/render.lua",
          "lineEnd": 76,
          "lineStart": 74
        }
      },
      {
        "description": "Sets the current drawing material to `color_ignorez`.\n\nThe material is defined as:\n```\n\n\"UnlitGeneric\"\n{\n\"$basetexture\" \"color/white\"\n\"$model\" \t\t1\n\"$translucent\" \t1\n\"$vertexalpha\" \t1\n\"$vertexcolor\" \t1\n\"$ignorez\"\t\t1\n}\n```",
        "name": "SetColorMaterialIgnoreZ",
        "parent": "render",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/extensions/client/render.lua",
          "lineEnd": 82,
          "lineStart": 80
        }
      },
      {
        "arguments": [
          {
            "description": "The red channel multiplier normal ranging from 0-1.",
            "name": "r",
            "type": "number"
          },
          {
            "description": "The green channel multiplier normal ranging from 0-1.",
            "name": "g",
            "type": "number"
          },
          {
            "description": "The blue channel multiplier normal ranging from 0-1.",
            "name": "b",
            "type": "number"
          }
        ],
        "description": "Sets the color modulation for upcoming render operations, such as rendering models.\n\nThe values can exceed 1 for stronger effect.\n\nSee <page>render.SetBlend</page> for the function to affect alpha channel.",
        "name": "SetColorModulation",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The fog Z.",
            "name": "fogZ",
            "type": "number"
          }
        ],
        "description": "If the <page text=\"fog mode\">render.FogMode</page> is set to <page text=\"MATERIAL_FOG_LINEAR_BELOW_FOG_Z\">Enums/MATERIAL_FOG</page>, the fog will only be rendered below the specified height.",
        "name": "SetFogZ",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The target scale.",
            "name": "scale",
            "type": "number"
          }
        ],
        "description": "Sets the goal HDR tone mapping scale.\n\nUse this in a rendering/think hook as it is reset every frame.",
        "name": "SetGoalToneMappingScale",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Lighting render mode\n\nPossible values are:\n* 0 - Default\n* 1 - Total fullbright, similar to `mat_fullbright 1` but excluding some weapon view models\n* 2 - Increased brightness(?), models look fullbright",
            "name": "Mode",
            "type": "number"
          }
        ],
        "description": "Sets lighting mode when rendering something.\n\n<note>**Do not forget to restore the default value** to avoid unexpected behavior, like the world and the HUD/UI being affected</note>",
        "name": "SetLightingMode",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The position which will be used to calculate lighting for the current model.",
            "name": "lightingOrigin",
            "type": "Vector"
          }
        ],
        "description": "Sets lighting origin for the current model.\n\n<bug issue=\"2804\">This does not work for prop_physics.</bug>",
        "name": "SetLightingOrigin",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The texture to be used as the lightmap.",
            "name": "tex",
            "type": "ITexture"
          }
        ],
        "description": "Sets the texture to be used as the lightmap in upcoming rendering operations. This is required when rendering meshes using a material with a lightmapped shader such as LightmappedGeneric.",
        "name": "SetLightmapTexture",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "default": "{}",
            "description": "A table containing up to 4 tables for each light source that should be set up. Each of these tables should contain the properties of its associated light source, see <page>Structures/LocalLight</page>.",
            "name": "lights",
            "type": "table"
          }
        ],
        "description": "Sets up the local lighting for any upcoming render operation. Up to 4 local lights can be defined, with one of three different types (point, directional, spot).\n\nDisables all local lights if called with no arguments.",
        "name": "SetLocalModelLights",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The material to be used.",
            "name": "mat",
            "type": "IMaterial"
          }
        ],
        "description": "Sets the material to be used in any upcoming render operation using the <page>render</page>.\n\nNot to be confused with <page>surface.SetMaterial</page>.",
        "name": "SetMaterial",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The light source to edit, see <page>Enums/BOX</page>.",
            "name": "lightDirection",
            "type": "number{BOX}"
          },
          {
            "description": "The red component of the light color.",
            "name": "red",
            "type": "number"
          },
          {
            "description": "The green component of the light color.",
            "name": "green",
            "type": "number"
          },
          {
            "description": "The blue component of the light color.",
            "name": "blue",
            "type": "number"
          }
        ],
        "description": "Sets up the ambient lighting for any upcoming render operation. Ambient lighting can be seen as a cube enclosing the object to be drawn, each of its faces representing a directional light source that shines towards the object. Thus, there is a total of six different light sources that can be configured separately.\n\nLight color components are not restricted to a specific range (i.e. 0-255), instead, higher values will result in a brighter light.",
        "name": "SetModelLighting",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The new render target to be used.",
            "name": "texture",
            "type": "ITexture"
          }
        ],
        "description": "Sets the render target to the specified rt.",
        "name": "SetRenderTarget",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The index of the rt to set.",
            "name": "rtIndex",
            "type": "number"
          },
          {
            "description": "The new render target to be used.",
            "name": "texture",
            "type": "ITexture"
          }
        ],
        "description": "Sets the render target with the specified index to the specified rt.",
        "name": "SetRenderTargetEx",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "X start coordinate of the scissor rectangle in screen-space coordinates.",
            "name": "startX",
            "type": "number"
          },
          {
            "description": "Y start coordinate of the scissor rectangle in screen-space coordinates.",
            "name": "startY",
            "type": "number"
          },
          {
            "description": "X end coordinate of the scissor rectangle in screen-space coordinates.",
            "name": "endX",
            "type": "number"
          },
          {
            "description": "Y end coordinate of the scissor rectangle in screen-space coordinates.",
            "name": "endY",
            "type": "number"
          },
          {
            "description": "Enable or disable the scissor rect.",
            "name": "enable",
            "type": "boolean"
          }
        ],
        "description": "Sets a scissoring rectangle which limits the drawing area. (otherwise known as clipping)",
        "name": "SetScissorRect",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The red channel of the shadow color.",
            "name": "red",
            "type": "number"
          },
          {
            "description": "The green channel of the shadow color.",
            "name": "green",
            "type": "number"
          },
          {
            "description": "The blue channel of the shadow color.",
            "name": "blue",
            "type": "number"
          }
        ],
        "description": "Sets the shadow color.",
        "name": "SetShadowColor",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The new shadow direction.",
            "name": "shadowDirections",
            "type": "Vector"
          }
        ],
        "description": "Sets the shadow projection direction.",
        "name": "SetShadowDirection",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The new maximum shadow distance.",
            "name": "shadowDistance",
            "type": "number"
          }
        ],
        "description": "Sets the maximum shadow projection range.",
        "name": "SetShadowDistance",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "",
            "name": "newState",
            "type": "boolean"
          }
        ],
        "description": "Sets whether any future render operations will ignore shadow drawing.",
        "name": "SetShadowsDisabled",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The Compare Function that each affected pixel's Stencil Buffer value will be evaluated against during a draw operation.",
            "name": "compareFunction",
            "type": "number{STENCILCOMPARISONFUNCTION}"
          }
        ],
        "description": "Sets the Compare Function that all pixels affected by a draw operation will have their Stencil Buffer value tested against.\n\nWhen not set to a static value like NEVER or ALWAYS, the Stencil Buffer value corresponding to each affected pixel will be compared against the current <page text=\"Reference Value\">render.SetStencilReferenceValue</page>.\n\nPixels that **Pass** the Compare Function check move on to the Depth Test, which determines if the draw operation will ultimately be allowed to overwrite the pixel's Color Channel, Stencil Buffer, and Depth Buffer values.\n\nPixels that **Fail** the Compare Function check have the <page text=\"Fail Operation\">render.SetStencilFailOperation</page> performed on their Stencil Buffer value and do **not** have any of their Render Target layers modified by the draw operation.\n\nFor more detailed information on the Stencil system, including usage examples, see the <page text=\"Stencils Render Reference\">render_stencils</page> page",
        "name": "SetStencilCompareFunction",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The new state.",
            "name": "newState",
            "type": "boolean"
          }
        ],
        "description": "Enables or disables the Stencil system for future draw operations.\n\nWhile enabled, all pixels affected by draw operations will have their corresponding values in the active <page text=\"Render Target's\">render_rendertargets</page> Stencil Buffer compared against the current <page text=\"Reference Value\">render.SetStencilReferenceValue</page> and their current Depth Buffer value compared against the depth of the corresponding pixel from the draw operation.\nDepending on the outcomes of these comparisons, one of either the <page text=\"Pass\">render.SetStencilPassOperation</page>, <page text=\"Fail\">render.SetStencilFailOperation</page>, or <page text=\"Z-Fail\">render.SetStencilZFailOperation</page> operations is performed on the pixel's Stencil Buffer value.\nA pixel will only be updated in the active <page text=\"Render Target\">render_rendertargets</page> if the <page text=\"Pass Operation\">render.SetStencilPassOperation</page> is performed.\n\nFor more detailed information on the Stencil system, including usage examples, see the <page text=\"Stencils Render Reference\">render_stencils</page> page\n\n<note>The Stencil system's configuration does **not** reset automatically.\nTo prevent unexpected behavior, always manually ensure that the Stencil system is configured appropriately for your use-case after enabling it.</note>",
        "name": "SetStencilEnable",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The Stencil Operation to be performed if the Compare Function does not Pass a pixel.",
            "name": "failOperation",
            "type": "number{STENCILOPERATION}"
          }
        ],
        "description": "Sets the <page text=\"Stencil Operation\">Enums/STENCILOPERATION</page> that will be performed on the Stencil Buffer values of pixels affected by draw operations if the <page text=\"Compare Function\">render.SetStencilCompareFunction</page> did **not** <page text=\"Pass\">render.SetStencilPassOperation</page> the pixel.\n\nFor more detailed information on the Stencil system, including usage examples, see the <page text=\"Stencils Render Reference\">render_stencils</page> page",
        "name": "SetStencilFailOperation",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The Stencil Operation to be performed if the Compare Function Passes a pixel.",
            "name": "passOperation",
            "type": "number{STENCILOPERATION}"
          }
        ],
        "description": "Sets the <page text=\"Stencil Operation\">Enums/STENCILOPERATION</page> that will be performed on the Stencil Buffer values of pixels affected by draw operations if the <page text=\"Compare Function\">render.SetStencilCompareFunction</page> Passes the pixel.\n\nFor more detailed information on the Stencil system, including usage examples, see the <page text=\"Stencils Render Reference\">render_stencils</page> page",
        "name": "SetStencilPassOperation",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The value that the Compare function and the pass, fail, and z-fail operations will use.\nThis is an 8-bit (`byte`) unsigned integer value in the range [`0-255`]",
            "name": "referenceValue",
            "type": "number"
          }
        ],
        "description": "Sets the Stencil system's Reference Value which is compared against each pixel's corresponding Stencil Buffer value in the <page text=\"Compare Function\">render.SetStencilCompareFunction</page> and can be used to modify the Stencil Buffer value of those same pixels in the <page text=\"Pass\">render.SetStencilPassOperation</page>, <page text=\"Fail\">render.SetStencilFailOperation</page>, and <page text=\"Z Fail\">render.SetStencilZFailOperation</page> operations.\n\nFor more detailed information on the Stencil system, including usage examples, see the <page text=\"Stencils Render Reference\">render_stencils</page> page",
        "name": "SetStencilReferenceValue",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The 8-bit (`byte`) mask\nSet to `255` to make no change to read Stencil Buffer values.",
            "name": "bitMask",
            "type": "number"
          }
        ],
        "description": "Sets the unsigned 8-bit (`byte`) bitflag mask that will be bitwise ANDed with all values as they are read (tested) from the Stencil Buffer\n\nThis can be considered a \"niche\" Stencil function as it is not required for many Stencil use-cases.\n\nThis is a companion function to <page>render.SetStencilWriteMask</page> which modifies Stencil Buffer values as they are written.\n\nFor more detailed information on the Stencil system, including usage examples, see the <page text=\"Stencils Render Reference\">render_stencils</page> page",
        "name": "SetStencilTestMask",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The 8-bit (`byte`) mask\nSet to `255` to make no change to written Stencil Buffer values.",
            "name": "bitMask",
            "type": "number"
          }
        ],
        "description": "Sets the unsigned 8-bit (`byte`) bitflag mask that will be bitwise ANDed with all values as they are written to the Stencil Buffer\n\nThis can be considered a \"niche\" Stencil function as it is not required for many Stencil use-cases.\n\nThis is a companion function to <page>render.SetStencilTestMask</page> which modifies Stencil Buffer values as they are read.\n\nFor more detailed information on the Stencil system, including usage examples, see the <page text=\"Stencils Render Reference\">render_stencils</page> page",
        "name": "SetStencilWriteMask",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The Stencil Operation to be performed if the Compare Function Passes a pixel, but the pixel fails the Depth Test.",
            "name": "zFailOperation",
            "type": "number{STENCILOPERATION}"
          }
        ],
        "description": "Sets the <page text=\"Stencil Operation\">Enums/STENCILOPERATION</page> that will be performed on the Stencil Buffer values of pixels affected by draw operations if the <page text=\"Compare Function\">render.SetStencilCompareFunction</page> Passed a given pixel, but it did **not** Pass the Depth Test.\n\nFor more detailed information on the Stencil system, including usage examples, see the <page text=\"Stencils Render Reference\">render_stencils</page> page",
        "name": "SetStencilZFailOperation",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The tonemapping scales.\n* X - Output scale\n* Y - Lightmap scale\n* Z - Reflection map scale",
            "name": "scales",
            "type": "Vector"
          }
        ],
        "description": "Sets the tone mapping scale for upcoming rendering operations.",
        "name": "SetToneMappingScaleLinear",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "X origin of the view port.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "Y origin of the view port.",
            "name": "y",
            "type": "number"
          },
          {
            "description": "Width of the view port.",
            "name": "w",
            "type": "number"
          },
          {
            "description": "Height of the view port.",
            "name": "h",
            "type": "number"
          }
        ],
        "description": "Changes the view port position and size. The values will be clamped to the game's screen resolution.\n\nIf you are looking to render something to a texture (render target), you should use <page>render.PushRenderTarget</page>.\n\n<note>This function will override values of <page>Global.ScrW</page> and <page>Global.ScrH</page> with the ones you set.</note>",
        "name": "SetViewPort",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "",
            "name": "enable",
            "type": "boolean"
          }
        ],
        "description": "Sets the internal parameter **INT_RENDERPARM_WRITE_DEPTH_TO_DESTALPHA**",
        "name": "SetWriteDepthToDestAlpha",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Swaps the frame buffers/cycles the frame. In other words, this updates the screen.\n\nIf you take a really long time during a single frame render, it is a good idea to use this and let the user know that the game isn't stuck.",
        "name": "Spin",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The number of Beam Segments that this multi-segment Beam will contain",
            "name": "segmentCount",
            "type": "number"
          }
        ],
        "description": "<rendercontext hook=\"false\" type=\"3D\"></rendercontext>\n\nBegin drawing a multi-segment Beam.\n\nFor more detailed information on Beams, as well as usage examples, see the <page text=\"Beams Render Reference\">render_beams</page>",
        "name": "StartBeam",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Returns whether the player's hardware supports HDR. (High Dynamic Range) HDR can still be disabled by the `mat_hdr_level` console variable or just not be supported by the map.",
        "name": "SupportsHDR",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "`true` if the player's hardware supports HDR.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/client/render.lua",
          "lineEnd": 53,
          "lineStart": 47
        }
      },
      {
        "description": "Returns if the current settings and the system allow the usage of pixel shaders 1.4.",
        "name": "SupportsPixelShaders_1_4",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whether Pixel Shaders 1.4 are supported or not.",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Returns if the current settings and the system allow the usage of pixel shaders 2.0.",
        "name": "SupportsPixelShaders_2_0",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whether Pixel Shaders 2.0 are supported or not.",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Returns if the current settings and the system allow the usage of vertex shaders 2.0.",
        "name": "SupportsVertexShaders_2_0",
        "parent": "render",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whether Vertex Shaders 2.0 are supported or not.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "True to suppress false to enable.",
            "name": "suppressLighting",
            "type": "boolean"
          }
        ],
        "description": "Suppresses or enables any engine lighting for any upcoming render operation.\n\n<bug issue=\"4070\">This does not affect <page>IMesh</page>es.</bug>",
        "name": "SuppressEngineLighting",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Enables HDR tone mapping which influences the brightness.",
        "name": "TurnOnToneMapping",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Updates the texture returned by <page>render.GetFullScreenDepthTexture</page>.\n\nSilently fails if <page>render.SupportsPixelShaders_2_0</page> returns false.",
        "name": "UpdateFullScreenDepthTexture",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "description": "Updates the power of two texture.",
        "name": "UpdatePowerOfTwoTexture",
        "parent": "render",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The <page>render.GetPowerOfTwoTexture</page>.",
            "type": "ITexture"
          }
        ]
      },
      {
        "description": "Pretty much alias of <page>render.UpdatePowerOfTwoTexture</page> but does not return the texture.",
        "name": "UpdateRefractTexture",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "default": "0",
            "description": "Texture index to update. Max index is 3, but engine only creates the first two for you.",
            "name": "textureIndex",
            "type": "number"
          }
        ],
        "description": "Copies the entire screen to the screen effect texture, which can be acquired via <page>render.GetScreenEffectTexture</page>. This function is mainly intended to be used in <page>GM:RenderScreenspaceEffects</page>",
        "name": "UpdateScreenEffectTexture",
        "parent": "render",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "default": "nil",
            "description": "",
            "name": "mat",
            "type": "IMaterial"
          }
        ],
        "description": "This function overrides all map materials for one frame.",
        "name": "WorldMaterialOverride",
        "parent": "render",
        "realms": [
          "client"
        ]
      }
    ],
    "name": "render"
  },
  {
    "description": "The resource library is used to control what files are sent to clients who join a server, this includes models, materials, sounds, text files but not Lua files.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Virtual path of the file to be added, relative to `garrysmod/`.\nDo not add `.bz2` to the filepath.\nDo not put `gamemodes/*gamemodename*/content/` or `addons/*addonname*/` into the path.",
            "name": "path",
            "type": "string"
          }
        ],
        "description": "Adds the specified and all related files to the files the client should download from the server.\n\nFor convenience, this function will automatically add any other files that are related to the selected one, and throw an error if it can't find them. For example, a `.vmt` file will automatically add the `.vtf` with the same name, and a `.mdl` file will automatically add all `.vvd`, `.ani`, `.dx80.vtx`, `.dx90.vtx`, `.sw.vtx`, `.phy`, `.png` and `.jpg` files with the same name, with a separate error for each missing file.\n\nIf you do not want it to do this, use <page>resource.AddSingleFile</page>.\n\n<warning>There's a 8192 downloadable file limit. If you need more, consider using Workshop addons - <page>resource.AddWorkshop</page>. You should also consider the fact that you have way too many downloads. This limit is shared among all `resource.Add*` functions.</warning>\n\n<note>The file must exist on the server it will not be added to the downloadables list!</note>",
        "name": "AddFile",
        "parent": "resource",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Path of the file to be added, relative to garrysmod/",
            "name": "path",
            "type": "string"
          }
        ],
        "description": "Adds the specified file to the files the client should download from the server.\n\nIf you wish to add textures or models, consider using <page>resource.AddFile</page> to add all the files required for a texture/model.\n\n<warning>There's a 8192 downloadable file limit. If you need more, consider using Workshop addons - <page>resource.AddWorkshop</page>. You should also consider the fact that you have way too many downloads. This limit is shared among all `resource.Add*` functions.</warning>\n\n<note>The file must exist on the server or players will not download it!</note>",
        "name": "AddSingleFile",
        "parent": "resource",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The workshop id of the file. This cannot be a collection.",
            "name": "workshopid",
            "type": "string"
          }
        ],
        "description": "Adds a workshop addon for the client to download before entering the server. This will not \"install\" the addon on your server, see <page>Workshop for Dedicated Servers</page> for installing Steam Workshop addons onto your servers.\n\nHaving the raw files from a workshop item does not count as having already downloaded it.<br>\nSo players who previously downloaded a map through Fast Download will have to re-download it if it is part of a workshop addon.\n\nYou should try to only add addons that have custom content (models, sounds, etc).\n\nGamemodes that are <page text=\"workshop enabled\">Gamemode_Creation#Gamemode_Text_File</page> and the current map are automatically added to this list, if they come from the servers' workshop collection - so there's no need to manually add them.\n\n<warning>There's a 8192 downloadable file limit. If you need more, consider the fact that you have way too many downloads. This limit is shared among all `resource.Add*` functions.</warning>",
        "name": "AddWorkshop",
        "parent": "resource",
        "realms": [
          "server"
        ]
      }
    ],
    "name": "resource"
  },
  {
    "description": "The saverestore library contains functions relating to the singleplayer save system built into the game.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The unique identifier for this hook.",
            "name": "identifier",
            "type": "string"
          },
          {
            "description": "The function to be called when an engine save is being loaded.\n\n<callback>\n<arg type=\"IRestore\" name=\"save\">The restore object to be used to read data from save file that is being loaded.</arg>\n</callback>\n\nYou can also use those functions to read data:\n* <page>saverestore.ReadVar</page>\n* <page>saverestore.ReadTable</page>\n* <page>saverestore.LoadEntity</page>",
            "name": "callback",
            "type": "function"
          }
        ],
        "description": "Adds a restore/load hook for the Half-Life 2 save system.",
        "name": "AddRestoreHook",
        "parent": "saverestore",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/saverestore.lua",
          "lineEnd": 369,
          "lineStart": 362
        }
      },
      {
        "arguments": [
          {
            "description": "The unique identifier for this hook.",
            "name": "identifier",
            "type": "string"
          },
          {
            "description": "The function to be called when an engine save is being saved.\n\n<callback>\n<arg type=\"ISave\" name=\"save\">The save object to be used to write data to the save file that is being saved.</arg>\n</callback>\n\nYou can also use those functions to save data:\n* <page>saverestore.WriteVar</page>\n* <page>saverestore.WriteTable</page>\n* <page>saverestore.SaveEntity</page>",
            "name": "callback",
            "type": "function"
          }
        ],
        "description": "Adds a save hook for the Half-Life 2 save system. You can this to carry data through level transitions in Half-Life 2.",
        "name": "AddSaveHook",
        "parent": "saverestore",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/saverestore.lua",
          "lineEnd": 355,
          "lineStart": 348
        }
      },
      {
        "arguments": [
          {
            "description": "The entity which will receive the loaded values from the save.",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "The restore object to read the <page>Entity:GetTable</page> from.",
            "name": "save",
            "type": "IRestore"
          }
        ],
        "description": "Loads <page>Entity:GetTable</page> from the save game file that is being loaded and merges it with the given entitys <page>Entity:GetTable</page>.",
        "name": "LoadEntity",
        "parent": "saverestore",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/saverestore.lua",
          "lineEnd": 341,
          "lineStart": 325
        }
      },
      {
        "arguments": [
          {
            "description": "The restore object to read data from the save file with.",
            "name": "save",
            "type": "IRestore"
          }
        ],
        "description": "<internal></internal>\n\nCalled by engine when a save is being loaded.\n\nThis handles loading gamemode and calls all of the hooks added with <page>saverestore.AddRestoreHook</page>.",
        "name": "LoadGlobal",
        "parent": "saverestore",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/saverestore.lua",
          "lineEnd": 425,
          "lineStart": 399
        }
      },
      {
        "description": "<internal></internal>\n\nCalled by the engine just before <page>saverestore.LoadGlobal</page> is.",
        "name": "PreRestore",
        "parent": "saverestore",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/saverestore.lua",
          "lineEnd": 60,
          "lineStart": 55
        }
      },
      {
        "description": "<internal></internal>\n\nCalled by the engine just before <page>saverestore.SaveGlobal</page> is.",
        "name": "PreSave",
        "parent": "saverestore",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/saverestore.lua",
          "lineEnd": 53,
          "lineStart": 48
        }
      },
      {
        "arguments": [
          {
            "description": "The restore object to read the table from.",
            "name": "save",
            "type": "IRestore"
          }
        ],
        "description": "Reads a table from the save game file that is being loaded.",
        "name": "ReadTable",
        "parent": "saverestore",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The table that has been read, if any",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/saverestore.lua",
          "lineEnd": 304,
          "lineStart": 264
        }
      },
      {
        "arguments": [
          {
            "description": "The restore object to read variables from.",
            "name": "save",
            "type": "IRestore"
          }
        ],
        "description": "Loads a variable from the save game file that is being loaded.\n\nVariables will be read in the save order you have saved them.",
        "name": "ReadVar",
        "parent": "saverestore",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The variable that was read, if any.",
            "type": "any"
          }
        ],
        "source": {
          "file": "lua/includes/modules/saverestore.lua",
          "lineEnd": 207,
          "lineStart": 178
        }
      },
      {
        "arguments": [
          {
            "description": "The entity to save <page>Entity:GetTable</page> of.",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "The save object to save <page>Entity:GetTable</page> to.",
            "name": "save",
            "type": "ISave"
          }
        ],
        "description": "Saves entitys <page>Entity:GetTable</page> to the save game file that is being saved.",
        "name": "SaveEntity",
        "parent": "saverestore",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/saverestore.lua",
          "lineEnd": 319,
          "lineStart": 311
        }
      },
      {
        "arguments": [
          {
            "description": "The save object to write data into the save file.",
            "name": "save",
            "type": "ISave"
          }
        ],
        "description": "<internal></internal>\n\nCalled by engine when a save is being saved.\n\nThis handles saving gamemode and calls all of the hooks added with <page>saverestore.AddSaveHook</page>.",
        "name": "SaveGlobal",
        "parent": "saverestore",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/saverestore.lua",
          "lineEnd": 392,
          "lineStart": 376
        }
      },
      {
        "arguments": [
          {
            "description": "The table to test.",
            "name": "table",
            "type": "table"
          }
        ],
        "description": "Returns how many writable keys are in the given table.",
        "name": "WritableKeysInTable",
        "parent": "saverestore",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The number of keys that can be written with <page>saverestore.WriteTable</page>.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/saverestore.lua",
          "lineEnd": 137,
          "lineStart": 125
        }
      },
      {
        "arguments": [
          {
            "description": "The table to write",
            "name": "table",
            "type": "table"
          },
          {
            "description": "The save object to write the table to.",
            "name": "save",
            "type": "ISave"
          }
        ],
        "description": "Write a table to a save game file that is being saved.",
        "name": "WriteTable",
        "parent": "saverestore",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/saverestore.lua",
          "lineEnd": 258,
          "lineStart": 213
        }
      },
      {
        "arguments": [
          {
            "description": "The value to save.\n\nIt can be one of the following types: <page>number</page>, <page>boolean</page>, <page>string</page>, <page>Entity</page>, <page>Angle</page>, <page>Vector</page> or <page>table</page>.",
            "name": "value",
            "type": "any"
          },
          {
            "description": "The save object to write the variable to.",
            "name": "save",
            "type": "ISave"
          }
        ],
        "description": "Writes a variable to the save game file that is being saved.",
        "name": "WriteVar",
        "parent": "saverestore",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/saverestore.lua",
          "lineEnd": 171,
          "lineStart": 144
        }
      }
    ],
    "name": "saverestore"
  },
  {
    "description": "The scripted_ents library allows you to access information about any scripted entities loaded into the game, as well as register your own entities.",
    "functions": [
      {
        "arguments": [
          {
            "description": "A new string which can be used to refer to another classname",
            "name": "alias",
            "type": "string"
          },
          {
            "description": "The classname the alias should refer to",
            "name": "classname",
            "type": "string"
          }
        ],
        "description": "Defines an alias string that can be used to refer to another classname",
        "name": "Alias",
        "parent": "scripted_ents",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/scripted_ents.lua",
          "lineEnd": 260,
          "lineStart": 256
        }
      },
      {
        "arguments": [
          {
            "description": "The classname of the ENT table to return, can be an alias",
            "name": "classname",
            "type": "string"
          }
        ],
        "description": "Returns a copy of the ENT table for a class, including functions defined by the base class\n<internal></internal>",
        "name": "Get",
        "parent": "scripted_ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "entTable",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/scripted_ents.lua",
          "lineEnd": 193,
          "lineStart": 159
        }
      },
      {
        "description": "Returns a copy of the list of all ENT tables registered",
        "name": "GetList",
        "parent": "scripted_ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of all entities in the following format: (table keys are the classnames)\n* <page>table</page> t - The <page text=\"ENT\">Structures/ENT</page> table associated with the entity\n* <page>boolean</page> isBaseType - Always true\n* <page>string</page> Base - The entity base (note capital B in the key name)\n* <page>string</page> type - The entity type",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/scripted_ents.lua",
          "lineEnd": 236,
          "lineStart": 228
        }
      },
      {
        "arguments": [
          {
            "description": "Entity's class name",
            "name": "class",
            "type": "string"
          },
          {
            "description": "Name of member to retrieve",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Retrieves a member of entity's table.",
        "name": "GetMember",
        "parent": "scripted_ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The member or nil if failed",
            "type": "any"
          }
        ],
        "source": {
          "file": "lua/includes/modules/scripted_ents.lua",
          "lineEnd": 278,
          "lineStart": 262
        }
      },
      {
        "description": "Returns a list of all ENT tables which contain ENT.Spawnable",
        "name": "GetSpawnable",
        "parent": "scripted_ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of <page>Structures/ENT</page>s",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/scripted_ents.lua",
          "lineEnd": 254,
          "lineStart": 238
        }
      },
      {
        "arguments": [
          {
            "description": "The classname of the ENT table to return",
            "name": "classname",
            "type": "string"
          }
        ],
        "description": "Returns the actual ENT table for a class. Modifying functions/variables in this table will change newly spawned entities",
        "name": "GetStored",
        "parent": "scripted_ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "entTable",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/scripted_ents.lua",
          "lineEnd": 222,
          "lineStart": 220
        }
      },
      {
        "arguments": [
          {
            "description": "The classname to check",
            "name": "classname",
            "type": "string"
          }
        ],
        "description": "Returns the 'type' of a class, this will one of the following: 'anim', 'ai', 'brush', 'point'.",
        "name": "GetType",
        "parent": "scripted_ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "type",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/modules/scripted_ents.lua",
          "lineEnd": 214,
          "lineStart": 195
        }
      },
      {
        "arguments": [
          {
            "description": "Entity's class name to be checked",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Base class name to be checked",
            "name": "base",
            "type": "string"
          }
        ],
        "description": "Checks if name is based on base",
        "name": "IsBasedOn",
        "parent": "scripted_ents",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns true if class name is based on base, else false.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/scripted_ents.lua",
          "lineEnd": 51,
          "lineStart": 44
        }
      },
      {
        "description": "<internal></internal>\n\nCalled after all ENTS have been loaded and runs <page>baseclass.Set</page> on each one.\n\nYou can retrieve all the currently registered ENTS with <page>scripted_ents.GetList</page>.\n\n<note>This is not called after an ENT auto refresh, and thus the inherited baseclass functions retrieved with <page>baseclass.Get</page> will not be updated</note>",
        "name": "OnLoaded",
        "parent": "scripted_ents",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/scripted_ents.lua",
          "lineEnd": 157,
          "lineStart": 144
        }
      },
      {
        "arguments": [
          {
            "description": "The ENT table to register.\nFor the table's format and available options see the <page>Structures/ENT</page> page.",
            "name": "ENT",
            "type": "table"
          },
          {
            "description": "The classname to register.",
            "name": "classname",
            "type": "string"
          }
        ],
        "description": "Registers an ENT table with a classname. Reregistering an existing classname will automatically update the functions of all existing entities of that class.\n\n<bug pull=\"1300\">Sub-tables provided in the first argument will not carry over their metatable, and will receive a BaseClass key if the table was merged with the base's. Userdata references, which includes Vectors, Angles, Entities, etc. will not be copied.</bug>",
        "name": "Register",
        "parent": "scripted_ents",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/scripted_ents.lua",
          "lineEnd": 139,
          "lineStart": 53
        }
      }
    ],
    "name": "scripted_ents"
  },
  {
    "description": "The search library",
    "functions": [
      {
        "arguments": [
          {
            "description": "Provider function.\n\n<callback>\n<arg type=\"string\" name=\"searchQuery\">The search query user has inputed.</arg>\n<ret type=\"table\" name=\"data\">\nYou must return a list of tables structured like this:\n* <page>string</page> text - Text to \"Copy to clipboard\"\n* <page>function</page> func - Function to use/spawn the item\n* <page>Panel</page> icon - A panel to add to spawnmenu\n* <page>table</page> words - A table of words?\n\n</ret>\n</callback>",
            "name": "provider",
            "type": "function"
          },
          {
            "default": "nil",
            "description": "If provided, ensures that only one provider exists with the given ID at a time.",
            "name": "id",
            "type": "string"
          }
        ],
        "description": "Adds a search result provider. For examples, see [gamemodes/sandbox/gamemode/cl_search_models.lua](https://github.com/Facepunch/garrysmod/blob/7c23addd2c35d3d046c80e3d0cb6052055eca3e2/garrysmod/gamemodes/sandbox/gamemode/cl_search_models.lua)",
        "name": "AddProvider",
        "parent": "search",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/search.lua",
          "lineEnd": 18,
          "lineStart": 6
        }
      },
      {
        "arguments": [
          {
            "description": "Search query",
            "name": "query",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "If set, only searches given provider type(s), instead of everything. For example `\"tool\"` will only search tools in Sandbox. Can be a table for multiple types.",
            "name": "types",
            "type": "string"
          },
          {
            "default": "1024",
            "description": "How many results to stop at",
            "name": "maxResults",
            "type": "number"
          }
        ],
        "description": "Retrieves search results.",
        "name": "GetResults",
        "parent": "search",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "A table of results",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/search.lua",
          "lineEnd": 49,
          "lineStart": 20
        }
      }
    ],
    "name": "search"
  },
  {
    "description": "Menu state library to query the master server list.",
    "functions": [
      {
        "arguments": [
          {
            "description": "`true` if to add, or `false` if to remove from favorites.",
            "name": "addOrRemove",
            "type": "boolean"
          }
        ],
        "description": "<internal></internal>Adds current server the player is on to their favorites.",
        "name": "AddCurrentServerToFavorites",
        "parent": "serverlist",
        "realms": [
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "Server Address. **IP:Port like \"127.0.0.1:27015\"**",
            "name": "address",
            "type": "string"
          }
        ],
        "description": "Adds the given server address to their favorites.",
        "name": "AddServerToFavorites",
        "parent": "serverlist",
        "realms": [
          "menu"
        ]
      },
      {
        "description": "Returns true if the current server address is in their favorites.",
        "name": "IsCurrentServerFavorite",
        "parent": "serverlist",
        "realms": [
          "menu"
        ],
        "returnValues": [
          {
            "description": "true if the current server is in their favorites",
            "name": "favorite",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Server Address. **IP:Port like \"127.0.0.1:27015\"**",
            "name": "address",
            "type": "string"
          }
        ],
        "description": "Returns true if the given server address is in their favorites.",
        "name": "IsServerFavorite",
        "parent": "serverlist",
        "realms": [
          "menu"
        ],
        "returnValues": [
          {
            "description": "true if the server address is in their favorites",
            "name": "favorite",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The IP address of the server, including the port.",
            "name": "ip",
            "type": "string"
          },
          {
            "description": "The function to be called if and when the request finishes.\n\nCallback has arguments described here: <page>Structures/ServerQueryData</page>.",
            "name": "callback",
            "type": "function"
          }
        ],
        "description": "Queries a server for its information/ping.",
        "name": "PingServer",
        "parent": "serverlist",
        "realms": [
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The IP address of the server, including the port.",
            "name": "ip",
            "type": "string"
          },
          {
            "description": "The function to be called if and when the request finishes.\n\n<callback>\n<arg type=\"table\" name=\"data\">\nA list of players and their info. Each entry has the following fields:\n* <page>number</page> **time** - The amount of time the player is playing on the server, in seconds\n* <page>string</page> **name** - The player name\n* <page>number</page> **score** - The players score\n</arg>\n</callback>",
            "name": "callback",
            "type": "function"
          }
        ],
        "description": "Queries a server for its player list.",
        "name": "PlayerList",
        "parent": "serverlist",
        "realms": [
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The information about what kind of servers we want. See <page>Structures/ServerQueryData</page>",
            "name": "data",
            "type": "table"
          }
        ],
        "description": "Queries the master server for server list.",
        "name": "Query",
        "parent": "serverlist",
        "realms": [
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "Server Address. **IP:Port like \"127.0.0.1:27015\"**",
            "name": "address",
            "type": "string"
          }
        ],
        "description": "Removes the given server address from their favorites.",
        "name": "RemoveServerFromFavorites",
        "parent": "serverlist",
        "realms": [
          "menu"
        ]
      }
    ],
    "name": "serverlist"
  },
  {
    "description": "Used primarily for adding new soundscript entries.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The sounds properties. See <page>Structures/SoundData</page>",
            "name": "soundData",
            "type": "table{SoundData}"
          }
        ],
        "description": "Creates a sound script. It can also override sounds, which seems to only work when set on the server.\n\nYou can find a list of common sound scripts that are shipped with the game by default here: <page>Common Sounds</page>.\n\nA list of sound scripts can be retrieved with <page>sound.GetTable</page>.",
        "name": "Add",
        "parent": "sound",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Path to the script file to load.",
            "name": "filepath",
            "type": "string"
          }
        ],
        "description": "Overrides sounds defined inside of a txt file; typically used for adding map-specific sounds.",
        "name": "AddSoundOverrides",
        "parent": "sound",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The hint to emit. This can be a bit flag. See <page>Enums/SOUND</page>",
            "name": "hint",
            "type": "number"
          },
          {
            "description": "The position to emit the hint at",
            "name": "pos",
            "type": "Vector"
          },
          {
            "description": "The volume or radius of the hint",
            "name": "volume",
            "type": "number"
          },
          {
            "description": "The duration of the hint in seconds",
            "name": "duration",
            "type": "number"
          },
          {
            "default": "NULL",
            "description": "If set, the sound hint will be ignored/deleted when the given entity is destroyed.",
            "name": "owner",
            "type": "Entity"
          }
        ],
        "description": "Emits a sound hint to the game elements to react to, for example to repel or attract antlions.",
        "name": "EmitHint",
        "parent": "sound",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "A unique identifier for the sound.\n\n<warning>You cannot override already existing ones.</warning>",
            "name": "identifier",
            "type": "string"
          },
          {
            "description": "The sample rate of the sound. Must be `11025`, `22050` or `44100`.",
            "name": "samplerate",
            "type": "number"
          },
          {
            "description": "The length in seconds of the sound to generate.",
            "name": "length",
            "type": "number"
          },
          {
            "description": "A function which will be called to generate every sample on the sound.\n\n<callback>\n<arg type=\"number\" name=\"sampleIndex\">The current sample number.</arg>\n<ret type=\"number\" name=\"sampleValue\">The return value must be between `-1.0` and `1.0`.\nOther values will wrap back to the -1 to 1 range and basically clip.\nThere are **65535** possible quantifiable values between `-1` and `1`.</ret>\n</callback>\n\nThis argument can also be given a table of samples, where values must range from `-1` to `1`.\nThis argument can also be a string of raw 16bit binary data, (each sample is unsigned short).",
            "name": "callbackOrData",
            "type": "function"
          },
          {
            "default": "nil",
            "description": "Sample ID of the loop start. If given, the sound will be looping and will restart playing at given position after reaching its end.",
            "name": "loopStart",
            "type": "number"
          }
        ],
        "description": "Creates a sound from a function.",
        "name": "Generate",
        "parent": "sound",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The types of sounds to choose from. See <page text=\"SOUND_ enums\">Enums/SOUND</page>.",
            "name": "types",
            "type": "number"
          },
          {
            "description": "The position to sense sounds at.",
            "name": "pos",
            "type": "Vector"
          }
        ],
        "description": "Returns the most dangerous/closest sound hint based on given location and types of sounds to sense.",
        "name": "GetLoudestSoundHint",
        "parent": "sound",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "A table with <page text=\"SoundHintData\">Structures/SoundHintData</page> structure or `nil` if no sound hints are nearby.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the sound script",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Returns properties of the soundscript.",
        "name": "GetProperties",
        "parent": "sound",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The properties of the soundscript. See <page>Structures/SoundData</page>",
            "type": "table{SoundData}"
          }
        ]
      },
      {
        "description": "Returns a list of all registered sound scripts.\n\nNew ones can be registered using <page>sound.Add</page>, and detailed information about each one can be retrieved via <page>sound.GetProperties</page>.",
        "name": "GetTable",
        "parent": "sound",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The list/array of all registered sound scripts ( No other information is provided )",
            "type": "table<string>"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The sound to play. This should either be a sound script name (<page>sound.Add</page>) or a file path relative to the `sound/` folder. (Make note that it's not sound**s**)",
            "name": "snd",
            "type": "string"
          },
          {
            "description": "Where the sound should play.",
            "name": "pos",
            "type": "Vector"
          },
          {
            "default": "75",
            "description": "Sound level in decibels. 75 is normal. Ranges from 20 to 180, where 180 is super loud. This affects how far away the sound will be heard, see <page>Enums/SNDLVL</page>.",
            "name": "level",
            "type": "number"
          },
          {
            "default": "100",
            "description": "The sound pitch. Range is from 0 to 255. 100 is normal pitch.",
            "name": "pitch",
            "type": "number"
          },
          {
            "default": "1",
            "description": "Output volume of the sound in range 0 to 1.",
            "name": "volume",
            "type": "number"
          },
          {
            "default": "0",
            "description": "The DSP preset for this sound. [List of DSP presets](https://developer.valvesoftware.com/wiki/Dsp_presets)",
            "name": "dsp",
            "type": "number"
          }
        ],
        "description": "Plays a sound from the specified position in the world.\nIf you want to play a sound without a position, such as a UI sound, use <page>surface.PlaySound</page> instead.\n\nThis function is similar to <page>Global.EmitSound</page>, but with less options.",
        "name": "Play",
        "parent": "sound",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The path to the file to play.\n\nUnlike other sound functions and structures, the path is relative to `garrysmod/` instead of `garrysmod/sound/`",
            "name": "path",
            "type": "string"
          },
          {
            "description": "Flags for the sound. Can be one or more of following, separated by a space (\" \"):\n* 3d - Makes the sound 3D, so you can set its position\n* mono - Forces the sound to have only one channel\n* noplay - Forces the sound not to play as soon as this function is called\n* noblock - Disables streaming in blocks. It is more resource-intensive, but it is required for <page>IGModAudioChannel:SetTime</page>.\n\nIf you don't want to use any of the above, you can just leave it as \"\".",
            "name": "flags",
            "type": "string"
          },
          {
            "description": "Callback function that is called as soon as the the stream is loaded.\n\n<callback>\n<arg type=\"IGModAudioChannel\" name=\"channel\">The sound channel. Will be nil if an error occurred.</arg>\n<arg type=\"number\" name=\"errorID\">ID of an error if an error has occurred. Will be nil, otherwise.</arg>\n<arg type=\"string\" name=\"errorName\">Name of an error if an error has occurred. Will be nil, otherwise.</arg>\n</callback>",
            "name": "callback",
            "type": "function"
          }
        ],
        "description": "Plays a file from GMod directory. You can find a list of all error codes [here](http://www.un4seen.com/doc/#bass/BASS_ErrorGetCode.html)\n\nFor external file/stream playback, see <page>sound.PlayURL</page>.\n\n<bug issue=\"1752\">This fails for looping .wav files in 3D mode.</bug>\n\n<bug issue=\"2304\">This fails with unicode file names.</bug>",
        "name": "PlayFile",
        "parent": "sound",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The URL of the sound to play",
            "name": "url",
            "type": "string"
          },
          {
            "description": "Flags for the sound. Can be one or more of following, separated by a space (`\" \"`):\n* 3d - Makes the sound 3D, so you can set its position\n* mono - Forces the sound to have only one channel\n* noplay - Forces the sound not to play as soon as this function is called\n* noblock - Disables streaming in blocks. It is more resource-intensive, but it is required for <page>IGModAudioChannel:SetTime</page>.\n\nIf you don't want to use any of the above, you can just leave it as `\"\"`.",
            "name": "flags",
            "type": "string"
          },
          {
            "description": "Callback function that is called as soon as the the stream is loaded.\n<callback>\n<arg type=\"IGModAudioChannel\" name=\"channel\">The sound channel. Will be nil if an error occurred.</arg>\n<arg type=\"number\" name=\"errorID\">ID of an error if an error has occurred. Will be nil, otherwise.</arg>\n<arg type=\"string\" name=\"errorName\">Name of an error if an error has occurred. Will be nil, otherwise.</arg>\n</callback>",
            "name": "callback",
            "type": "function"
          }
        ],
        "description": "Allows you to play external sound files, as well as online radio streams.\nYou can find a list of all error codes [here](http://www.un4seen.com/doc/#bass/BASS_ErrorGetCode.html)\n\nFor offline file playback, see <page>sound.PlayFile</page>.\n\n<bug issue=\"2296\">Due to a bug with [BASS](http://www.un4seen.com/), AAC codec streams cannot be played in 3D mode.</bug>",
        "name": "PlayURL",
        "parent": "sound",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Path to the model file to set the gender of.",
            "name": "modelPath",
            "type": "string"
          },
          {
            "description": "Gender to set. Only 2 options are permitted: `female` and `male`. Any other option will be ignored.",
            "name": "gender",
            "type": "string"
          }
        ],
        "description": "Sets the gender of a specific actor (model). This is a system from [base Half-Life 2](https://developer.valvesoftware.com/wiki/Global_actors) - `global_actors.txt`.\n\nThis will affect what voice lines `npc_citizen` will use when they have the given model set.\n\nIt is not limited to `npc_citizens` - any sound played on any entity with given model can have gender specific sounds playing, including soundscripts, by including `$gender` token in the sound file path.\n\n<warning>Internally the gender is stored by model file name only (i.e. `models/alyx.mdl` would be stored as `alyx`), not the full path! Be aware of potential collisions.</warning>",
        "name": "SetActorGender",
        "parent": "sound",
        "realms": [
          "client",
          "server"
        ]
      }
    ],
    "name": "sound"
  },
  {
    "description": "The spawnmenu library is a set of functions that allow you to control the spawn (Q) menu.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Tool class/file name",
            "name": "tool",
            "type": "string"
          },
          {
            "default": "false",
            "description": "Should we activate this tool in the menu only or also the toolgun? `true` = menu only,`false` = toolgun aswell",
            "name": "menu_only",
            "type": "boolean"
          }
        ],
        "description": "Activates a tool, opens context menu and brings up the tool gun.",
        "name": "ActivateTool",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 129,
          "lineStart": 101
        }
      },
      {
        "arguments": [
          {
            "description": "The tabID of the tab to open the context menu in",
            "name": "tab",
            "type": "number"
          },
          {
            "description": "The control panel to open",
            "name": "cp",
            "type": "Panel"
          }
        ],
        "description": "Activates tools context menu in specified tool tab.",
        "name": "ActivateToolPanel",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 98,
          "lineStart": 81
        }
      },
      {
        "description": "Returns currently opened control panel of a tool, post process effect or some other menu in spawnmenu.",
        "name": "ActiveControlPanel",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The currently opened control panel, if any.",
            "type": "Panel"
          }
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 26,
          "lineStart": 24
        }
      },
      {
        "arguments": [
          {
            "description": "An unique name of the content type.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "A function that is called whenever we need create a new panel for this content type.\n\n<callback>\n<arg type=\"Panel\" name=\"container\">The container/parent of the new panel from <page>spawnmenu.CreateContentIcon</page></arg>\n<arg type=\"table\" name=\"data\">Data for the content type passed from <page>spawnmenu.CreateContentIcon</page>.</arg>\n\n<ret type=\"Panel\" name=\"pnl\">The created panel</ret>\n</callback>",
            "name": "constructor",
            "type": "function"
          }
        ],
        "description": "Registers a new content type that is saveable into spawnlists.\nCreated/called by <page>spawnmenu.CreateContentIcon</page>.",
        "name": "AddContentType",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 287,
          "lineStart": 285
        }
      },
      {
        "arguments": [
          {
            "description": "What text will appear on the tab (i.e Spawnlists).",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The function called to generate the content of the tab.\n<callback>\n<ret type=\"Panel\" name=\"content\">A container panel that holds all of the content for the new tab.</ret>\n</callback>",
            "name": "function",
            "type": "function"
          },
          {
            "default": "icon16/exclamation.png",
            "description": "Path to the material that will be used as an icon on the tab.",
            "name": "material",
            "type": "string"
          },
          {
            "default": "1000",
            "description": "The order in which this tab should be shown relative to the other tabs on the creation menu.",
            "name": "order",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "The tooltip to be shown for this tab.",
            "name": "tooltip",
            "type": "string"
          }
        ],
        "description": "Inserts a new tab into the CreationMenus table, which will be used by the creation menu to generate its tabs (Spawnlists, Weapons, Entities, etc.)",
        "name": "AddCreationTab",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 190,
          "lineStart": 182
        }
      },
      {
        "arguments": [
          {
            "description": "A unique classname of the list.",
            "name": "classname",
            "type": "string"
          },
          {
            "description": "The name of the category displayed to the player, e.g. `Comic Props`.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "A table of entries for the spawn menu. It must be numerically indexed.\n\nEach member of the table is a sub-table containing a type member, and other members depending on the type.\n\nNew content types can be added via <page>spawnmenu.AddContentType</page>.\n\n| <page>string</page> type | Description | Other members |\n| ------------- | ---------- | ----------------- |\n| \"header\" | a simple header for organization | <page>string</page> text - The text that the header will display |\n| \"model\" | spawns a model where the player is looking | <page>string</page> model - The path to the model file <br>\t <page>number</page> skin - The skin for the model to use (optional) <br> <page>string</page> body - The bodygroups for the model (optional) <br> <page>number</page> wide - The width of the spawnicon (optional) <br> <page>number</page> tall - The height of the spawnicon (optional) |\n| \"entity\" | spawns an entity where the player is looking<br>(appears in the Entities tab by default) | <page>string</page> spawnname - The filename of the entity, for example \"sent_ball\" <br> <page>string</page> nicename - The name of the entity to display <br> <page>string</page> material - The icon to display, this should be set to `entities/[sent_name].png` <br>\t<page>boolean</page> admin - Whether the entity is only spawnable by admins (optional) |\n| \"vehicle\" | spawns a vehicle where the player is looking <br> (appears in the Vehicles tab by default) | <page>string</page> spawnname - The filename of the vehicle <br> <page>string</page> nicename - The name of the vehicle to display <br> <page>string</page> material - The icon to display <br> <page>boolean</page> admin - Whether the vehicle is only spawnable by admins (optional) |\n| \"npc\" | spawns an NPC where the player is looking <br> (appears in the NPCs tab by default) | <page>string</page> spawnname - The spawn name of the NPC <br>\t<page>string</page> nicename - The name to display <br> <page>string</page> material - The icon to display <br> <page>table</page> weapon - A table of potential weapons (each a string) to give to the NPC.<br> When spawned, one of these will be chosen randomly each time. <br> <page>boolean</page> admin - Whether the NPC is only spawnable by admins (optional) |\n| \"weapon\" | When clicked, gives the player a weapon; <br> When middle-clicked, spawns a weapon where the player is looking <br> (appears in the Weapons tab by default) |<page>string</page> spawnname - The spawn name of the weapon <br> <page>string</page> nicename - The name to display <br> <page>string</page> material - The icon to display <br> <page>boolean</page> admin - Whether the weapon is only spawnable by admins (optional) |",
            "name": "contents",
            "type": "table"
          },
          {
            "description": "The icon to use in the tree.",
            "name": "icon",
            "type": "string"
          },
          {
            "default": "1000",
            "description": "The unique ID number for the spawnlist category. Used to make sub categories. See \"parentID\" parameter below. If not set, it will be automatically set to ever increasing number, starting with 1000.",
            "name": "id",
            "type": "number"
          },
          {
            "default": "0",
            "description": "The unique ID of the parent category. This will make the created category a subcategory of category with given unique ID. `0` makes this a base category (such as `Builder`).",
            "name": "parentID",
            "type": "number"
          },
          {
            "default": "",
            "description": "The needed game for this prop category, if one is needed. If the specified game is not mounted, the category isn't shown. This uses the shortcut name, e.g. `cstrike`, and not the Steam AppID.",
            "name": "needsApp",
            "type": "string"
          }
        ],
        "description": "Used to add addon spawnlists to the spawnmenu tree. This function should be called within <page>SANDBOX:PopulatePropMenu</page>.\n\nAddon spawnlists will not save to disk if edited.\n\n<warning>You should never try to modify player customized spawnlists!</warning>",
        "name": "AddPropCategory",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 237,
          "lineStart": 224
        }
      },
      {
        "arguments": [
          {
            "description": "The ToolTab name, as created with <page>spawnmenu.AddToolTab</page>.\n\nYou can also use the default ToolTab names \"Main\" and \"Utilities\".",
            "name": "tab",
            "type": "string"
          },
          {
            "description": "The identifier name",
            "name": "RealName",
            "type": "string"
          },
          {
            "description": "The displayed name",
            "name": "PrintName",
            "type": "string"
          }
        ],
        "description": "Used to create a new category in the list inside of a spawnmenu ToolTab.\n\nYou must call this function from <page>SANDBOX:AddToolMenuCategories</page> for it to work properly.",
        "name": "AddToolCategory",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 145,
          "lineStart": 131
        }
      },
      {
        "arguments": [
          {
            "description": "The spawnmenu tab to add into (for example \"Utilities\")",
            "name": "tab",
            "type": "string"
          },
          {
            "description": "The category to add into (for example \"Admin\")",
            "name": "category",
            "type": "string"
          },
          {
            "description": "Unique identifier of option to add",
            "name": "class",
            "type": "string"
          },
          {
            "description": "The nice name of item",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Command to execute when the item is selected",
            "name": "cmd",
            "type": "string"
          },
          {
            "description": "Config name, used in older versions to load tool settings UI from a file. No longer works.\n\n<warning>We advise against using this. It may be changed or removed in a future update.</warning>",
            "name": "config",
            "type": "string"
          },
          {
            "description": "A function to build the context panel.\n\n<callback>\n<arg type=\"Panel\" name=\"pnl\">A <page>DForm</page> that will be shown in the context menu</arg>\n</callback>",
            "name": "cpanel",
            "type": "function"
          },
          {
            "default": "{}",
            "description": "Allows to override the table that will be added to the tool list. Some of the fields will be overwritten by this function.",
            "name": "table",
            "type": "table"
          }
        ],
        "description": "Adds an option to the right side of the spawnmenu",
        "name": "AddToolMenuOption",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 175,
          "lineStart": 147
        }
      },
      {
        "arguments": [
          {
            "description": "The internal name of the tab. This is used for sorting.",
            "name": "name",
            "type": "string"
          },
          {
            "default": "name",
            "description": "The 'nice' name of the tab (Tip: <page>language.Add</page>)",
            "name": "label",
            "type": "string"
          },
          {
            "default": "icon16/wrench.png",
            "description": "The filepath to the icon of the tab. Should be a .png",
            "name": "icon",
            "type": "string"
          }
        ],
        "description": "Adds a new tool tab to the right side of the spawnmenu via the <page>SANDBOX:AddToolMenuTabs</page> hook.\n\nThis function is a inferior duplicate of <page>spawnmenu.GetToolMenu</page>, just without its return value.",
        "name": "AddToolTab",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 70,
          "lineStart": 66
        }
      },
      {
        "description": "Clears all the tools from the different tool categories and the categories itself, if ran at the correct place.\n\nSeems to only work when ran at initialization.",
        "name": "ClearToolMenus",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 64,
          "lineStart": 60
        }
      },
      {
        "arguments": [
          {
            "description": "The type of the content icon.\n\nDefault content types are:\n* model\n\nSandbox only content types:\n* tool\n* header\n* entity\n* vehicle\n* npc\n* weapon\n* postprocess",
            "name": "type",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "The parent to add the <page>ContentIcon</page> to.",
            "name": "parent",
            "type": "Panel"
          },
          {
            "description": "The data to send to the content icon in <page>spawnmenu.AddContentType</page>. Data required will depend on the content type.",
            "name": "data",
            "type": "table"
          }
        ],
        "description": "Creates a new <page>ContentIcon</page> previously defined via <page>spawnmenu.AddContentType</page>.",
        "name": "CreateContentIcon",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The created <page>ContentIcon</page>, if it was returned by <page>spawnmenu.AddContentType</page>.",
            "type": "Panel"
          }
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 306,
          "lineStart": 301
        }
      },
      {
        "arguments": [
          {
            "description": "A table containing spawnlists.",
            "name": "spawnlists",
            "type": "table"
          }
        ],
        "description": "<internal></internal>\n\nCalls <page>spawnmenu.SaveToTextFiles</page>.",
        "name": "DoSaveToTextFiles",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 264,
          "lineStart": 260
        }
      },
      {
        "arguments": [
          {
            "description": "The content type name.",
            "name": "contentType",
            "type": "string"
          }
        ],
        "description": "Returns the function to create an vgui element for a specified content type, previously defined by <page>spawnmenu.AddContentType</page>.\n\nIf a content type doesn't exist, a dummy function will be returned, and a warning printed to the console.\n\nYou probably want to use <page>spawnmenu.CreateContentIcon</page> to create icons.",
        "name": "GetContentType",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The panel creation function.\n\n<callback>\n<arg type=\"Panel\" name=\"container\">The container panel to parent the created icon to.</arg>\n<arg type=\"table\" name=\"data\">Data for the content type passed from <page>spawnmenu.CreateContentIcon</page>.</arg>\n\n<ret type=\"Panel\" name=\"pnl\">The created panel</ret>\n</callback>",
            "type": "function"
          }
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 299,
          "lineStart": 289
        }
      },
      {
        "description": "Returns the list of Creation tabs. Creation tabs are added via <page>spawnmenu.AddCreationTab</page>.",
        "name": "GetCreationTabs",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The list of Creation tabs. See the <page>Structures/CreationMenus</page>.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 196,
          "lineStart": 192
        }
      },
      {
        "description": "Similar to <page>spawnmenu.GetPropTable</page>, but only returns spawnlists created by addons via <page>spawnmenu.AddPropCategory</page>.\n\nThese spawnlists are shown in a separate menu in-game.",
        "name": "GetCustomPropTable",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "See <page>spawnmenu.GetPropTable</page> for table format.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 222,
          "lineStart": 218
        }
      },
      {
        "description": "Returns a table of all prop categories and their props in the spawnmenu.\n\nNote that if the spawnmenu has not been populated, this will return an empty table.\n\nThis will not return spawnlists created by addons, see  <page>spawnmenu.GetCustomPropTable</page> for that.",
        "name": "GetPropTable",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Table of all the prop categories and props in the following format:\n\n```\n{\n[\"settings/spawnlist/001-construction props.txt\"] = {\nname = \"Construction Props\",\nicon = \"icon16/page.png\",\nid = 1,\nparentid = 0,\nneedsapp = \"\",\ncontents = {\n{\nmodel = \"models/Cranes/crane_frame.mdl\",\ntype = \"model\"\n}\n-- etc.\n},\n}\n-- etc.\n}\n```",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 216,
          "lineStart": 212
        }
      },
      {
        "arguments": [
          {
            "description": "The internal name of the tab. This is used for sorting.",
            "name": "name",
            "type": "string"
          },
          {
            "default": "name",
            "description": "The 'nice' name of the tab",
            "name": "label",
            "type": "string"
          },
          {
            "default": "icon16/wrench.png",
            "description": "The filepath to the icon of the tab. Should be a .png",
            "name": "icon",
            "type": "string"
          }
        ],
        "description": "Adds a new tool tab (or returns an existing one by name) to the right side of the spawnmenu via the <page>SANDBOX:AddToolMenuTabs</page> hook.",
        "name": "GetToolMenu",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "A table of tables representing categories and items in the left part of the tab. See example below to example structure.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 58,
          "lineStart": 32
        }
      },
      {
        "description": "Gets a table of tools on the client.",
        "name": "GetTools",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "A table with groups of tools, along with information on each tool.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 30,
          "lineStart": 28
        }
      },
      {
        "description": "<internal></internal>\n\nCalls <page>spawnmenu.PopulateFromTextFiles</page>.",
        "name": "PopulateFromEngineTextFiles",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 257,
          "lineStart": 240
        }
      },
      {
        "arguments": [
          {
            "description": "The function to call.\n\n<callback>\n<arg type=\"string\" name=\"strFilename\">The file name for the spawnlist.</arg>\n<arg type=\"string\" name=\"strName\">The \"nice\" title for the spawnlist.</arg>\n<arg type=\"table\" name=\"tabContents\">The list of contents for this spawnlist.</arg>\n<arg type=\"string\" name=\"icon\">Path to an `.png` icon of the spawnlist, should be 16x16 image.</arg>\n<arg type=\"number\" name=\"id\">Unique ID of the spawnlist</arg>\n<arg type=\"number\" name=\"parentid\">UniqueID of the parents spawnlist ID</arg>\n<arg type=\"string\" name=\"needsapp\">If not empty, the internal folder name of an mountable game that is required for this spawnlist to show up.</arg>\n</callback>",
            "name": "callback",
            "type": "function"
          }
        ],
        "description": "<internal></internal>\nLoads spawnlists from text files. You probably are looking for <page>spawnmenu.AddPropCategory</page>.",
        "name": "PopulateFromTextFiles",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "A table containing spawnlists.",
            "name": "spawnlists",
            "type": "table"
          }
        ],
        "description": "<internal></internal>\n\nSaves a table of spawnlists to files.",
        "name": "SaveToTextFiles",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "The panel to set.",
            "name": "pnl",
            "type": "Panel"
          }
        ],
        "description": "<internal></internal>Sets currently active control panel to be returned by <page>spawnmenu.ActiveControlPanel</page>.",
        "name": "SetActiveControlPanel",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 22,
          "lineStart": 20
        }
      },
      {
        "arguments": [
          {
            "description": "The tab ID to open",
            "name": "id",
            "type": "string"
          }
        ],
        "description": "Switches the creation tab (left side of the spawnmenu) on the spawnmenu to the given tab.",
        "name": "SwitchCreationTab",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 205,
          "lineStart": 198
        }
      },
      {
        "arguments": [
          {
            "description": "The tab ID to open",
            "name": "id",
            "type": "number"
          }
        ],
        "description": "Opens specified tool tab in spawnmenu.",
        "name": "SwitchToolTab",
        "parent": "spawnmenu",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/spawnmenu.lua",
          "lineEnd": 79,
          "lineStart": 72
        }
      }
    ],
    "name": "spawnmenu"
  },
  {
    "description": "The SQL library allows you to access powerful database software included with Garry's Mod. It is the preferred and fastest method of storing large amounts of data. The database is located in sv.db serverside and cl.db clientside, both in the Garry's Mod base folder. SQL is a whole scripting language in itself although relatively simple, it's something you'll need to read up on before using this library.\n\n\nExample of using sql.\n```\n-- Creating a table\nsql.Query(\"CREATE TABLE my_db_table( id NUMBER , name TEXT )\" )\n\n-- Inserting a value to the table\nsql.Query(\"INSERT INTO my_db_table( id , name ) VALUES( 1 , 'First') \")\n\n-- Printing the tables data\nPrintTable( sql.Query(\"SELECT * FROM my_db_table \") )\n\n-- Deleting the table\nsql.Query(\"DROP TABLE my_db_table\")\n```\n\nKnown GMod [SQLite](https://www.sqlite.org/compile.html) settings:\n* Temp files are stored in memory (`SQLITE_TEMP_STORE = 3`)\n* No `ATTACH` and `DETACH` operations (`SQLITE_OMIT_ATTACH = 1`)\n* No Virtual Tables (`SQLITE_OMIT_VIRTUALTABLE = 1`)\n* No `VACUUM` operation (`SQLITE_OMIT_VACUUM = 1`)\n* No `LIMIT` and `ORDER BY` clauses in `DELETE` and `UPDATE` statements (`SQLITE_ENABLE_UPDATE_DELETE_LIMIT`)",
    "functions": [
      {
        "description": "Tells the engine a set of queries is coming. Will wait until <page>sql.Commit</page> is called to run them.<br>\nThis is most useful when you run more than 100+ queries.<br>\nThis is equivalent to :\n```\nsql.Query( \"BEGIN;\" )\n```",
        "name": "Begin",
        "parent": "sql",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/util/sql.lua",
          "lineEnd": 93,
          "lineStart": 87
        }
      },
      {
        "description": "Tells the engine to execute a series of queries queued for execution, must be preceded by <page>sql.Begin</page>.\n\nThis is equivalent to `sql.Query( \"COMMIT;\" )`.",
        "name": "Commit",
        "parent": "sql",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/util/sql.lua",
          "lineEnd": 101,
          "lineStart": 96
        }
      },
      {
        "arguments": [
          {
            "description": "The name of the index to check.",
            "name": "indexName",
            "type": "string"
          }
        ],
        "description": "Returns true if the index with the specified name exists.",
        "name": "IndexExists",
        "parent": "sql",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "exists",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/util/sql.lua",
          "lineEnd": 50,
          "lineStart": 41
        }
      },
      {
        "description": "Returns the last error from a SQLite query.",
        "name": "LastError",
        "parent": "sql",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Last error from SQLite database.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/util/sql.lua",
          "lineEnd": 109,
          "lineStart": 104
        }
      },
      {
        "arguments": [
          {
            "description": "The query to execute.",
            "name": "query",
            "type": "string"
          }
        ],
        "description": "Performs a query on the local SQLite database, returns a table as result set, nil if result is empty and false on error.\n<warning>\nTo run SQL queries with this function safely, it is crucial to ensure that the concatenated variables in the query string are safe to avoid vulnerabilities like SQL injections. For this, it is recommended to use the <page>sql.SQLStr</page>, which allows arguments to be escaped correctly.\n</warning>",
        "name": "Query",
        "parent": "sql",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "`false` is returned if there is an error, `nil` if the query returned no data.",
            "type": "table|boolean|nil"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The query as used in sql.Query",
            "name": "query",
            "type": "string"
          },
          {
            "default": "1",
            "description": "The row number.",
            "name": "row",
            "type": "number"
          }
        ],
        "description": "Performs the <page>sql.Query</page> and returns the n'th row.\n\nThis function is equivalent to safely returning\n```lua\nsql.Query(query)[row]\n```",
        "name": "QueryRow",
        "parent": "sql",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The returned row.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/util/sql.lua",
          "lineEnd": 66,
          "lineStart": 52
        }
      },
      {
        "arguments": [
          {
            "description": "The query to execute with optional `?` parameter placeholders.\n\n<warning>\n* Always use parameter binding with `?` placeholders instead of string concatenation to prevent SQL injection vulnerabilities.\n</warning>",
            "name": "query",
            "type": "string"
          },
          {
            "description": "Parameters to bind to the query placeholders. Supports <page>nil</page>, <page>boolean</page>, <page>number</page>, and <page>string</page> types.\n\nThe number of query parameters must match the number of `?` placeholders, or the query will fail. See examples.",
            "name": "queryParams",
            "type": "vararg"
          }
        ],
        "description": "Performs a query on the local SQLite database with proper type handling and parameter binding, returns a table as result set, empty table if no results, and false on error. Unlike <page>sql.Query</page>, this function properly handles SQLite data types and allows safe parameter binding to prevent SQL injection attacks.\n<warning>\n* This function only executes a single SQL statement, unlike <page>sql.Query</page> which can execute multiple statements separated by semicolons.\n\n* Large INTEGER values (beyond ±9,007,199,254,740,991) are returned as strings to preserve exact values. This is because Lua represents all numbers as doubles, which lose precision for integers larger than 2⁵³-1. Returning them as strings prevents data corruption from rounding errors.\n</warning>",
        "name": "QueryTyped",
        "parent": "sql",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "`false` is returned if there is an error (See <page>sql.LastError</page>), otherwise a table with properly typed column values (empty table if no results).",
            "type": "table|boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The input query.",
            "name": "query",
            "type": "string"
          }
        ],
        "description": "Performs the query like <page>sql.QueryRow</page>, but returns the first value found.",
        "name": "QueryValue",
        "parent": "sql",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The returned value.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/util/sql.lua",
          "lineEnd": 85,
          "lineStart": 68
        }
      },
      {
        "arguments": [
          {
            "description": "The string to be escaped.",
            "name": "string",
            "type": "string"
          },
          {
            "default": "false",
            "description": "Set this as `true`, and the function will not wrap the input string in apostrophes.",
            "name": "bNoQuotes",
            "type": "boolean"
          }
        ],
        "description": "Escapes dangerous characters and symbols from user input used in an SQLite SQL Query.\n\n<note>This function is not meant to be used with external database engines such as `MySQL`. Escaping strings with inadequate functions is dangerous!</note>",
        "name": "SQLStr",
        "parent": "sql",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The escaped input.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/util/sql.lua",
          "lineEnd": 27,
          "lineStart": 6
        }
      },
      {
        "arguments": [
          {
            "description": "The name of the table to check.",
            "name": "tableName",
            "type": "string"
          }
        ],
        "description": "Returns true if the table with the specified name exists.",
        "name": "TableExists",
        "parent": "sql",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "exists",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/util/sql.lua",
          "lineEnd": 39,
          "lineStart": 30
        }
      }
    ],
    "name": "sql"
  },
  {
    "description": "Steamworks related functions.",
    "functions": [
      {
        "description": "Refreshes clients addons.",
        "name": "ApplyAddons",
        "parent": "steamworks",
        "realms": [
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The Preview ID of workshop item.",
            "name": "workshopPreviewID",
            "type": "string"
          },
          {
            "description": "Whether to uncompress the file or not, assuming it was compressed with LZMA.<br>\nYou will usually want to set this to true.",
            "name": "uncompress",
            "type": "boolean"
          },
          {
            "description": "The function to process retrieved data.\n\n<callback>\n<arg type=\"string\" name=\"path\">Path to the downloaded file.</arg>\n</callback>",
            "name": "resultCallback",
            "type": "function"
          }
        ],
        "description": "<note>You really should be using <page>steamworks.DownloadUGC</page>. This is a legacy function.</note>\n\nDownloads a file from the supplied addon and saves it as a `.cache` file in `garrysmod/cache/` folder.\n\nThis is mostly used to download the preview image of the addon.\n\nIn case the retrieved file is an image and you need the <page>IMaterial</page>, use <page>Global.AddonMaterial</page> with the path supplied from the callback.",
        "name": "Download",
        "parent": "steamworks",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of workshop item to download. **NOT** a file ID.",
            "name": "workshopID",
            "type": "string"
          },
          {
            "description": "The function to process retrieved data.\n\n<callback>\n<arg type=\"string\" name=\"path\">Contains a path to the saved file, or nil if the download failed for any reason.</arg>\n<arg type=\"file_class\" name=\"file\">A file object pointing to the downloaded .gma file. The file handle will be closed after the function exits.</arg>\n</callback>",
            "name": "resultCallback",
            "type": "function"
          }
        ],
        "name": "DownloadUGC",
        "parent": "steamworks",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of Steam Workshop item.",
            "name": "workshopItemID",
            "type": "string"
          },
          {
            "description": "The function to process retrieved data.\n\n<callback>\n<arg type=\"table\" name=\"data\">The data about the item, if the request succeeded, `nil` otherwise. See <page>Structures/UGCFileInfo</page>.</arg>\n</callback>",
            "name": "resultCallback",
            "type": "function"
          }
        ],
        "description": "Retrieves info about supplied Steam Workshop addon.",
        "name": "FileInfo",
        "parent": "steamworks",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The type of items to retrieve. Possible values include:\n* popular (All invalid options will equal to this)\n* trending\n* latest\n* friends\n* followed - Items of people the player is following on Steam\n* friend_favs - Favorites of player's friends\n* favorite - Player's favorites",
            "name": "type",
            "type": "string"
          },
          {
            "description": "A table of tags to match.",
            "name": "tags",
            "type": "table"
          },
          {
            "description": "How much of results to skip from first one. This is useful for pagination. Negative values are invalid.",
            "name": "offset",
            "type": "number"
          },
          {
            "description": "How many items to retrieve, up to `50` at a time. Negative values are invalid.",
            "name": "numRetrieve",
            "type": "number"
          },
          {
            "description": "When getting `popular` or `trending` content from Steam, this determines a time period, in range of days from `0` to `365`. ( `7` = most popular addons in last 7 days, `30` = most popular addons in the last month, etc ). If given a zero, will automatically choose a value, which is `7` for `trending`.",
            "name": "days",
            "type": "number"
          },
          {
            "description": "`\"0\"` to retrieve all addons, `\"1\"` to retrieve addons only published by you, or a valid SteamID64 of a user to get workshop items of.",
            "name": "userID",
            "type": "string"
          },
          {
            "description": "The function to process retrieved data.\n\n<callback>\n<arg type=\"table\" name=\"data\">The list of items, or nil in case of error.</arg>\n</callback>",
            "name": "resultCallback",
            "type": "function"
          }
        ],
        "description": "Retrieves a customized list of Steam Workshop addons.",
        "name": "GetList",
        "parent": "steamworks",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The 64bit Steam ID ( aka Community ID ) of the player",
            "name": "steamID64",
            "type": "string"
          }
        ],
        "description": "<deprecated>You should use the callback of <page>steamworks.RequestPlayerInfo</page> instead.</deprecated>\n\nRetrieves players name by their 64bit SteamID.\n\nYou must call <page>steamworks.RequestPlayerInfo</page> a decent amount of time before calling this function.",
        "name": "GetPlayerName",
        "parent": "steamworks",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The name of that player",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of the Steam Workshop item.",
            "name": "workshopItemID",
            "type": "string"
          }
        ],
        "description": "Returns whenever the client is subscribed to the specified Steam Workshop item.",
        "name": "IsSubscribed",
        "parent": "steamworks",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Is the client subscribed to the addon or not.",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Opens the workshop website in the steam overlay browser.",
        "name": "OpenWorkshop",
        "parent": "steamworks",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "Path to the file to upload",
            "name": "filename",
            "type": "string"
          },
          {
            "description": "Path to the image to use as icon",
            "name": "image",
            "type": "string"
          },
          {
            "description": "Name of the Workshop submission",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Description of the Workshop submission",
            "name": "desc",
            "type": "string"
          },
          {
            "description": "The workshop tags to apply",
            "name": "tags",
            "type": "table"
          },
          {
            "description": "Callback for when the publishing process finishes.\n\n<callback>\n<arg type=\"number\" name=\"fileID\">If success, file id of the published item.</arg>\n<arg type=\"string\" name=\"error\">On failure, the error message.</arg>\n</callback>",
            "name": "callback",
            "type": "function"
          },
          {
            "default": "nil",
            "description": "If set, the file ID to update",
            "name": "fileid",
            "type": "number"
          },
          {
            "default": "None given.",
            "description": "List of changes when updating an item.",
            "name": "changelist",
            "type": "string"
          }
        ],
        "description": "<internal></internal>\nPublishes dupes, saves or demos to workshop.",
        "name": "Publish",
        "parent": "steamworks",
        "realms": [
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The 64bit Steam ID of player.",
            "name": "steamID64",
            "type": "string"
          },
          {
            "description": "A callback function with the data when it arrives.\n<callback>\n<arg type=\"string\" name=\"name\">The player's name.</arg>\n</callback>",
            "name": "callback",
            "type": "function"
          }
        ],
        "description": "Requests information of the player with SteamID64 for later use with <page>steamworks.GetPlayerName</page>.",
        "name": "RequestPlayerInfo",
        "parent": "steamworks",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The Steam Workshop item id",
            "name": "workshopid",
            "type": "string"
          }
        ],
        "description": "Sets the workshop item as \"completed\" by the player. There will be a visual indicator on the Steam Workshop for completed items.",
        "name": "SetFileCompleted",
        "parent": "steamworks",
        "realms": [
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whatever you have put in as first argument",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The Steam Workshop item ID",
            "name": "workshopid",
            "type": "string"
          }
        ],
        "description": "Sets whether you have played this addon or not. This will be shown to the user in the Steam Workshop itself:\n<img src=\"steamworksSetFilePlayedExample.png\">",
        "name": "SetFilePlayed",
        "parent": "steamworks",
        "realms": [
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whatever you have put in as first argument",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of the Steam Workshop item we should enable/disable",
            "name": "workshopItemID",
            "type": "string"
          },
          {
            "description": "true to enable the item, false to disable.",
            "name": "shouldMount",
            "type": "boolean"
          }
        ],
        "description": "Sets if an addon should be enabled or disabled. Call <page>steamworks.ApplyAddons</page> afterwards to update.",
        "name": "SetShouldMountAddon",
        "parent": "steamworks",
        "realms": [
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of the Steam Workshop",
            "name": "workshopItemID",
            "type": "string"
          }
        ],
        "description": "Returns whenever the specified Steam Workshop addon will be mounted or not.",
        "name": "ShouldMountAddon",
        "parent": "steamworks",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Will the workshop item be mounted or not",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of the Steam Workshop item we should subscribe to",
            "name": "workshopItemID",
            "type": "string"
          }
        ],
        "description": "<internal></internal>\n\nSubscribes to the specified workshop addon. Call <page>steamworks.ApplyAddons</page> afterwards to update.",
        "name": "Subscribe",
        "parent": "steamworks",
        "realms": [
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of the Steam Workshop item we should unsubscribe from.",
            "name": "workshopItemID",
            "type": "string"
          }
        ],
        "description": "<internal></internal> Unsubscribes to the specified workshop addon. Call <page>steamworks.ApplyAddons</page> afterwards to update.\n\nThis function should `never` be called without a user's consent and should not be called if the addon is currently in use (aka: the user is not in the main menu) as it may result in unexpected behaviour.",
        "name": "Unsubscribe",
        "parent": "steamworks",
        "realms": [
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of workshop item.",
            "name": "workshopItemID",
            "type": "string"
          }
        ],
        "description": "Opens the workshop website for specified Steam Workshop item in the Steam overlay browser.",
        "name": "ViewFile",
        "parent": "steamworks",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of workshop item.",
            "name": "workshopItemID",
            "type": "string"
          },
          {
            "description": "Sets if the user should vote up/down. True makes them upvote, false down",
            "name": "upOrDown",
            "type": "boolean"
          }
        ],
        "description": "<internal></internal> Makes the user vote for the specified addon",
        "name": "Vote",
        "parent": "steamworks",
        "realms": [
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of workshop item.",
            "name": "workshopItemID",
            "type": "string"
          },
          {
            "description": "The function to process retrieved data.\n<callback>\n<arg type=\"table\" name=\"data\">The vote information. See <page>Structures/UGCFileInfo</page>.</arg>\n</callback>",
            "name": "resultCallback",
            "type": "function"
          }
        ],
        "description": "<deprecated>Use data <page>steamworks.FileInfo</page> instead.</deprecated>\n\nRetrieves vote info of supplied addon.",
        "name": "VoteInfo",
        "parent": "steamworks",
        "realms": [
          "client",
          "menu"
        ]
      }
    ],
    "name": "steamworks"
  },
  {
    "description": "The string *type* is a sequence of characters.\n\nThe string *library* is a standard Lua library which provides functions for the manipulation of strings.[[1]](https://www.lua.org/pil/20.html)\n\nIn Garry's Mod there are several extra useful functions and features added to this library.<br>\nMost notably all strings will access this library through the string metatable index function.[[2]](https://github.com/Facepunch/garrysmod/blob/master/garrysmod/lua/includes/extensions/string.lua#L311-L322)\n\nThis means all strings are treated like table objects and the string library as its <page text=\"Meta Table\">Meta_Tables</page>\n\n```lua\nlocal x = \"Kittens\"\nfunction string.Foobar(self) return self:Right(4) end\n\nstring.Right(x,4) == x:Right(4) == x:Foobar() == (\"Kittens\"):Right(4) == x[-4]..x[-3]..x[-2]..x[-1]\n```\n\n\nThe string *metatable* however is something else, and to access that you must use `getmetatable(\"\")`.\n\nThe difference here is related to <page>Metamethods</page>, such as using (+) instead of (..) to concatenate strings.\n<warning>Using `+` operator for concatenation breaks lua metamethod to sum string as numbers (Example: `\"10\" + \"1\"` return `11` (number)) and this is 400 times SLOWER!</warning>\n\n```lua\nlocal stringmeta = getmetatable(\"\")\nfunction stringmeta.__add(str,x) return str..x end -- This will work\nfunction string.__add(str,x) return str..x end -- But this will not.\n\nprint(\"Kittens\" + \" And \" + \"Puppies\")\n```\n\nSee <page>Meta Tables</page> and <page>Metamethods</page> for more information.\n<warning>Making changes to the string *metatable* is not a good idea unless you know what you are doing. Use the string *library* instead.</warning>\n\nThis category lists functions available in the string *library*.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The string to get the chars from.",
            "name": "string",
            "type": "string"
          },
          {
            "default": "1",
            "description": "The first character of the string to get the byte of.",
            "name": "startPos",
            "type": "number"
          },
          {
            "default": "startPos",
            "description": "The last character of the string to get the byte of.",
            "name": "endPos",
            "type": "number"
          }
        ],
        "description": "Returns the given string's characters in their numeric ASCII representation.\n<warning>This function will throw an error if the slice length is greater than 8000 characters.</warning>",
        "name": "byte",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Numerical bytes",
            "type": "vararg"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "A number to convert to ordinal.",
            "name": "input",
            "type": "number"
          }
        ],
        "description": "Converts a cardinal (`111`) number to its [ordinal/sequential variation](https://en.wikipedia.org/wiki/Ordinal_numeral) (`111th`).\n\nSee also <page>Global.STNDRD</page> for a function that returns just the suffix.",
        "name": "CardinalToOrdinal",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The ordinal numeral.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 411,
          "lineStart": 385
        }
      },
      {
        "arguments": [
          {
            "description": "The bytes to create the string from.",
            "name": "bytes",
            "type": "vararg"
          }
        ],
        "description": "Takes the given numerical bytes and converts them to a string.",
        "name": "char",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "String built from given bytes",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The input number to commafy",
            "name": "value",
            "type": "number"
          },
          {
            "default": ",",
            "description": "An optional string that will be used instead of the default comma.",
            "name": "separator",
            "type": "string"
          }
        ],
        "description": "Inserts commas for every third digit of a given number.",
        "name": "Comma",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The commafied string",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 371,
          "lineStart": 357
        }
      },
      {
        "arguments": [
          {
            "description": "The function to get the bytecode of",
            "name": "func",
            "type": "function"
          },
          {
            "default": "false",
            "description": "True to strip the debug data, false to keep it",
            "name": "stripDebugInfo",
            "type": "boolean"
          }
        ],
        "description": "Returns the binary bytecode of the given function.\n\n<note>This does not work with functions created in C/C++. An error will be thrown if it is</note>",
        "name": "dump",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Bytecode",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The string whose end is to be checked.",
            "name": "str",
            "type": "string"
          },
          {
            "description": "The string to be matched with the end of the first.",
            "name": "end",
            "type": "string"
          }
        ],
        "description": "Returns whether or not the second passed string matches the end of the first.",
        "name": "EndsWith",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "`true` if the first string ends with the second, or the second is empty, otherwise `false`.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 335,
          "lineStart": 331
        }
      },
      {
        "arguments": [
          {
            "description": "The string will be separated wherever this sequence is found.",
            "name": "separator",
            "type": "string"
          },
          {
            "description": "The string to split up.",
            "name": "str",
            "type": "string"
          },
          {
            "default": "false",
            "description": "Set this to true if your separator is a <page text=\"pattern\">Patterns</page>.",
            "name": "withpattern",
            "type": "boolean"
          }
        ],
        "description": "Splits a string up wherever it finds the given separator.\n\nThe function <page>string.Split</page> is an alias of this function, except that function doesn't support using patterns.\n\nSee <page>string.Implode</page> for the reverse operation of this function.",
        "name": "Explode",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Exploded string as a numerical sequential table.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 104,
          "lineStart": 83
        }
      },
      {
        "arguments": [
          {
            "description": "The string to search in.",
            "name": "haystack",
            "type": "string"
          },
          {
            "description": "The string to find, can contain patterns if enabled.",
            "name": "needle",
            "type": "string"
          },
          {
            "default": "1",
            "description": "The position to start the search from, can be negative start position will be relative to the end position.",
            "name": "startPos",
            "type": "number"
          },
          {
            "default": "false",
            "description": "Disable patterns.",
            "name": "noPatterns",
            "type": "boolean"
          }
        ],
        "description": "Attempts to find the specified substring in a string.\n\n<warning>This function uses <page text=\"Lua Patterns\">Patterns</page> by default.</warning>",
        "name": "find",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Starting position of the found text, or nil if the text wasn't found",
            "type": "number"
          },
          {
            "description": "Ending position of found text, or nil if the text wasn't found",
            "type": "number"
          },
          {
            "description": "Matched text for each group if patterns are enabled and used, or nil if the text wasn't found",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The string to be formatted.<br>\nFollows this format: http://www.cplusplus.com/reference/cstdio/printf/\n\nThe following features are not supported in Lua:\n* The `n` specifier\n* The `*` width modifier\n* The `.*` precision modifier\n* All length modifiers\n\nThe following specifiers are exclusive to LuaJIT:\n\n| Format | Description | Example of the output |\n|:------:|:-----------:|:---------------------:|\n| %p | Returns pointer to supplied structure (table/function) | `0xf20a8968` |\n| %q | Formats a string between double quotes, using escape sequences when necessary to ensure that it can safely be read back by the Lua interpreter | `\"test\\1\\2test\"` |",
            "name": "format",
            "type": "string"
          },
          {
            "description": "Values to be formatted into the string.",
            "name": "formatParameters",
            "type": "vararg"
          }
        ],
        "description": "Formats the specified values into the string given.",
        "name": "format",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The formatted string",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The time in seconds to format.",
            "name": "float",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "An optional formatting to use. If no format it specified, a table will be returned instead.",
            "name": "format",
            "type": "string"
          }
        ],
        "description": "Returns the time as a formatted string or as a table if no format is given.",
        "name": "FormattedTime",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns the time as a formatted string only if a format was specified.\n\nReturns a table only if no format was specified. The table will contain these fields:\n* <page>number</page> ms - milliseconds\n* <page>number</page> s - seconds\n* <page>number</page> m - minutes\n* <page>number</page> h - hours",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 198,
          "lineStart": 186
        }
      },
      {
        "arguments": [
          {
            "description": "The <page>Color</page> to put in the string.",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Creates a string from a Color variable.",
        "name": "FromColor",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Output",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 341,
          "lineStart": 337
        }
      },
      {
        "arguments": [
          {
            "description": "The string that you will be searching with the supplied index.",
            "name": "str",
            "type": "string"
          },
          {
            "description": "The index's value of the string to be returned.",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "<deprecated>Use either string.sub(str, index, index) or str[index].</deprecated> Returns char value from the specified index in the supplied string.",
        "name": "GetChar",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "str",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 309,
          "lineStart": 305
        }
      },
      {
        "arguments": [
          {
            "description": "The string eg. file-path to get the file extension from.",
            "name": "path",
            "type": "string"
          }
        ],
        "description": "Returns extension of the file.",
        "name": "GetExtensionFromFilename",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "File extension or `nil`.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineStart": 124
        }
      },
      {
        "arguments": [
          {
            "description": "The string eg. file-path to get the file-name from.",
            "name": "path",
            "type": "string"
          }
        ],
        "description": "Returns file name and extension.",
        "name": "GetFileFromFilename",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "File name or unmodified string.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 173,
          "lineStart": 166
        }
      },
      {
        "arguments": [
          {
            "description": "The string eg. file-path to get the path from.",
            "name": "path",
            "type": "string"
          }
        ],
        "description": "Returns the path only from a file's path.",
        "name": "GetPathFromFilename",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Path or empty string.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineStart": 152
        }
      },
      {
        "arguments": [
          {
            "description": "The string to search in",
            "name": "data",
            "type": "string"
          },
          {
            "description": "The pattern to search for",
            "name": "pattern",
            "type": "string"
          }
        ],
        "description": "<deprecated>This function is removed in Lua versions later than what GMod is currently using. Use <page>string.gmatch</page> instead.</deprecated>Returns an iterator function that is called for every complete match of the pattern, all sub matches will be passed as to the loop.",
        "name": "gfind",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The iterator function that can be used in a for-in loop",
            "type": "function"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The string to search in",
            "name": "data",
            "type": "string"
          },
          {
            "description": "The pattern to search for",
            "name": "pattern",
            "type": "string"
          }
        ],
        "description": "Using <page>Patterns</page>, returns an iterator which will return either one value if no capture groups are defined, or any capture group matches.",
        "name": "gmatch",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The iterator function that can be used in a for-in loop",
            "type": "function"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "String which should be modified.",
            "name": "string",
            "type": "string"
          },
          {
            "description": "The pattern that defines what should be matched and eventually be replaced.",
            "name": "pattern",
            "type": "string"
          },
          {
            "description": "In case of a string the matched sequence will be replaced with it.\n\nIn case of a table, the matched sequence will be used as key and the table will tested for the key, if a value exists it will be used as replacement.\n\nIn case of a function all matches will be passed as parameters to the function, the return value(s) of the function will then be used as replacement.",
            "name": "replacement",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "Maximum number of replacements to be made.",
            "name": "maxReplaces",
            "type": "number"
          }
        ],
        "description": "This functions main purpose is to replace certain character sequences in a string using <page>Patterns</page>.",
        "name": "gsub",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "replaceResult",
            "type": "string"
          },
          {
            "description": "replaceCount",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "default": "",
            "description": "The separator to insert between each piece.",
            "name": "separator",
            "type": "string"
          },
          {
            "description": "The table of pieces to concatenate. The keys for these must be numeric and sequential.",
            "name": "pieces",
            "type": "table"
          }
        ],
        "description": "<deprecated>You really should just use <page>table.concat</page>.</deprecated>\n\nJoins the values of a table together to form a string.\n\nThis is the reverse of <page>string.Explode</page> and is functionally identical to <page>table.concat</page>, but with less features.",
        "name": "Implode",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Imploded pieces",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 117,
          "lineStart": 115
        }
      },
      {
        "arguments": [
          {
            "description": "The string that should be interpolated.",
            "name": "str",
            "type": "string"
          },
          {
            "description": "The table to search in.",
            "name": "lookuptable",
            "type": "table"
          }
        ],
        "description": "Interpolates a given string with the given table. This is useful for formatting localized strings.",
        "name": "Interpolate",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The modified string.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 383,
          "lineStart": 379
        }
      },
      {
        "arguments": [
          {
            "description": "The string that should be escaped.",
            "name": "str",
            "type": "string"
          }
        ],
        "description": "Escapes special characters for JavaScript in a string, making the string safe for inclusion in to JavaScript strings.",
        "name": "JavascriptSafe",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The escaped string.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 52,
          "lineStart": 42
        }
      },
      {
        "arguments": [
          {
            "description": "The string to extract from.",
            "name": "str",
            "type": "string"
          },
          {
            "description": "Amount of chars relative to the beginning (starting from 1).",
            "name": "num",
            "type": "number"
          }
        ],
        "description": "Returns everything left of supplied place of that string.",
        "name": "Left",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns a string containing a specified number of characters from the left side of a string.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineStart": 244
        }
      },
      {
        "arguments": [
          {
            "description": "The string to find the length of.",
            "name": "str",
            "type": "string"
          }
        ],
        "description": "Counts the number of characters in the string (length). This is equivalent to using the length operator (#).",
        "name": "len",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Length of the string",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The string to convert.",
            "name": "str",
            "type": "string"
          }
        ],
        "description": "Changes any upper-case letters in a string to lower-case letters.\n<note>This function doesn't work on special non-English UTF-8 characters.</note>",
        "name": "lower",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A string representing the value of a string converted to lower-case.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "String which should be searched in for matches.",
            "name": "string",
            "type": "string"
          },
          {
            "description": "The pattern that defines what should be matched.",
            "name": "pattern",
            "type": "string"
          },
          {
            "default": "1",
            "description": "The start index to start the matching from, can be negative to start the match from a position relative to the end.",
            "name": "startPosition",
            "type": "number"
          }
        ],
        "description": "Finds a <page text=\"Pattern\">Patterns</page> in a string.",
        "name": "match",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Matched text(s)",
            "type": "vararg"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The name to transform.",
            "name": "text",
            "type": "string"
          }
        ],
        "description": "Converts a `\"string_likeThis\"` to a more human-friendly `\"String like This\"`.\n\nThis is used internally by Faceposer and other code to transform flex and bodygroup names to a more friendly format.",
        "name": "NiceName",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The more human-friendly version of the input text.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 451,
          "lineStart": 413
        }
      },
      {
        "arguments": [
          {
            "description": "The filesize in bytes.",
            "name": "bytes",
            "type": "number"
          }
        ],
        "description": "Converts a digital filesize to human-readable text.",
        "name": "NiceSize",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The human-readable filesize, in Bytes/KB/MB/GB (whichever is appropriate).",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 294,
          "lineStart": 283
        }
      },
      {
        "arguments": [
          {
            "description": "The number to format, in seconds.",
            "name": "num",
            "type": "number"
          }
        ],
        "description": "Formats the supplied number (in seconds) to the highest possible time unit.",
        "name": "NiceTime",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A nicely formatted time string.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 242,
          "lineStart": 210
        }
      },
      {
        "arguments": [
          {
            "description": "The string to be sanitized",
            "name": "str",
            "type": "string"
          }
        ],
        "description": "Escapes all special characters within a string, making the string safe for inclusion in a Lua pattern.",
        "name": "PatternSafe",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The string that has been sanitized for inclusion in Lua patterns",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 76,
          "lineStart": 58
        }
      },
      {
        "arguments": [
          {
            "description": "The string to convert.",
            "name": "str",
            "type": "string"
          },
          {
            "description": "Times to repeat, this value gets rounded internally.",
            "name": "repetitions",
            "type": "number"
          },
          {
            "default": "",
            "description": "String that will separate the repeated piece. Notice that it doesn't add this string to the start or the end of the result, only between the repeated parts.",
            "name": "separator",
            "type": "string"
          }
        ],
        "description": "Repeats a string by the provided number, with an optional separator.",
        "name": "rep",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Repeated string.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The string we are seeking to replace an occurrence(s).",
            "name": "str",
            "type": "string"
          },
          {
            "description": "What we are seeking to replace.",
            "name": "find",
            "type": "string"
          },
          {
            "description": "What to replace find with.",
            "name": "replace",
            "type": "string"
          }
        ],
        "description": "Replaces all occurrences of the supplied second string.",
        "name": "Replace",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The processed string with replacements.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 251,
          "lineStart": 247
        }
      },
      {
        "arguments": [
          {
            "description": "The string to be reversed.",
            "name": "str",
            "type": "string"
          }
        ],
        "description": "Reverses a string.",
        "name": "reverse",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "reversed string",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The string to extract from.",
            "name": "str",
            "type": "string"
          },
          {
            "description": "Amount of chars relative to the end (starting from 1).",
            "name": "num",
            "type": "number"
          }
        ],
        "description": "Returns the last n-th characters of the string.",
        "name": "Right",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns a string containing a specified number of characters from the right side of a string.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineStart": 245
        }
      },
      {
        "arguments": [
          {
            "description": "The input string",
            "name": "InputString",
            "type": "string"
          },
          {
            "description": "The character index, 1 is the first from left.",
            "name": "Index",
            "type": "number"
          },
          {
            "description": "String to replace with.",
            "name": "ReplacementChar",
            "type": "string"
          }
        ],
        "description": "Sets the character at the specific index of the string.",
        "name": "SetChar",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "ModifiedString",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 303,
          "lineStart": 299
        }
      },
      {
        "arguments": [
          {
            "description": "String to split",
            "name": "Inputstring",
            "type": "string"
          },
          {
            "description": "Character(s) to split with.",
            "name": "Separator",
            "type": "string"
          }
        ],
        "description": "Splits the string into a table of strings, separated by the second argument.\n\nThis is an alias of <page>string.Explode</page>, but with flipped arguments.",
        "name": "Split",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Split table",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 108,
          "lineStart": 106
        }
      },
      {
        "arguments": [
          {
            "description": "String to check.",
            "name": "inputStr",
            "type": "string"
          },
          {
            "description": "String to check with.",
            "name": "start",
            "type": "string"
          }
        ],
        "description": "Returns whether or not the first string starts with the second.",
        "name": "StartsWith",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether the first string starts with the second.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 329,
          "lineStart": 324
        }
      },
      {
        "arguments": [
          {
            "description": "String to check.",
            "name": "inputStr",
            "type": "string"
          },
          {
            "description": "String to check with.",
            "name": "start",
            "type": "string"
          }
        ],
        "description": "<deprecated>Use <page>string.StartsWith</page>.</deprecated>\n\nReturns whether or not the first string starts with the second. This is a alias of <page>string.StartsWith</page>.",
        "name": "StartWith",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether the first string starts with the second.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 328,
          "lineStart": 324
        }
      },
      {
        "arguments": [
          {
            "description": "The string eg. file-path to strip the extension.",
            "name": "path",
            "type": "string"
          }
        ],
        "description": "Removes the extension of a path.",
        "name": "StripExtension",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "File-path without extension or unmodified string.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 145,
          "lineStart": 137
        }
      },
      {
        "arguments": [
          {
            "description": "The string you'll take a sub-string out of.",
            "name": "string",
            "type": "string"
          },
          {
            "description": "The position of the first character that will be included in the sub-string. It can be negative to count from the end.",
            "name": "StartPos",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "The position of the last character to be included in the sub-string. It can be negative to count from the end.",
            "name": "EndPos",
            "type": "number"
          }
        ],
        "description": "Returns a sub-string, starting from the character at position `StartPos` of the string (inclusive), and optionally ending at the character at position `EndPos` of the string (also inclusive). If EndPos is not given, the rest of the string is returned.",
        "name": "sub",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The substring.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The string to convert from.",
            "name": "Inputstring",
            "type": "string"
          }
        ],
        "description": "Fetches a Color type from a string.",
        "name": "ToColor",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The output <page>Color</page>",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 355,
          "lineStart": 343
        }
      },
      {
        "arguments": [
          {
            "description": "Time in seconds",
            "name": "time",
            "type": "number"
          }
        ],
        "description": "Returns given time in \"MM:SS\" format.",
        "name": "ToMinutesSeconds",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Formatted time",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineStart": 204
        }
      },
      {
        "arguments": [
          {
            "description": "Time in seconds",
            "name": "time",
            "type": "number"
          }
        ],
        "description": "Returns given time in \"MM:SS:MS\" format.",
        "name": "ToMinutesSecondsMilliseconds",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Formatted time",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineStart": 203
        }
      },
      {
        "arguments": [
          {
            "description": "The string you'll turn into a table.",
            "name": "str",
            "type": "string"
          }
        ],
        "description": "Splits the string into characters and creates a sequential table of characters.\n\n<warning>As a result of the  encoding, non-ASCII characters will be split into more than one character in the output table. Each character value in the output table will always be 1 byte.</warning>",
        "name": "ToTable",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A sequential table where each value is a character from the given string",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 19,
          "lineStart": 8
        }
      },
      {
        "arguments": [
          {
            "description": "The string to trim.",
            "name": "Inputstring",
            "type": "string"
          },
          {
            "default": "%s",
            "description": "String to match - can be multiple characters. Matches spaces by default.",
            "name": "Char",
            "type": "string"
          }
        ],
        "description": "Removes leading and trailing matches of a string.",
        "name": "Trim",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Modified string",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 261,
          "lineStart": 258
        }
      },
      {
        "arguments": [
          {
            "description": "String to trim",
            "name": "str",
            "type": "string"
          },
          {
            "default": "%s",
            "description": "Custom character to remove",
            "name": "char",
            "type": "string"
          }
        ],
        "description": "Removes leading spaces/characters from a string.",
        "name": "TrimLeft",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Trimmed string",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 281,
          "lineStart": 278
        }
      },
      {
        "arguments": [
          {
            "description": "String to remove from",
            "name": "str",
            "type": "string"
          },
          {
            "default": "%s",
            "description": "Custom character to remove, default is a space",
            "name": "char",
            "type": "string"
          }
        ],
        "description": "Removes trailing spaces/passed character from a string.",
        "name": "TrimRight",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Trimmed string",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/string.lua",
          "lineEnd": 271,
          "lineStart": 268
        }
      },
      {
        "arguments": [
          {
            "description": "The string to convert.",
            "name": "str",
            "type": "string"
          }
        ],
        "description": "Changes any lower-case letters in a string to upper-case letters.\n<note>This function doesn't work on special non-English UTF-8 characters.</note>",
        "name": "upper",
        "parent": "string",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A string representing the value of a string converted to upper-case.",
            "type": "string"
          }
        ]
      }
    ],
    "name": "string"
  },
  {
    "description": "The surface library allows you to draw text and shapes on the screen. Primarily used for making HUDs &amp; custom GUI panels.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The new font name.",
            "name": "fontName",
            "type": "string"
          },
          {
            "description": "The font properties. See the <page>Structures/FontData</page>.",
            "name": "fontData",
            "type": "table{FontData}"
          }
        ],
        "description": "Creates a new font.\n\nTo prevent the font from displaying incorrectly when using the `outline` setting, set `antialias` to false. This will ensure the text properly fills out the entire outline.\n\nBe sure to check the <page text=\"List of Default Fonts\">Default_Fonts</page> first! Those fonts can be used without using this function.\n\nSee Also: <page>Finding the Font Name</page>.\n\n<warning>Due to the static nature of fonts, do **NOT** create the font more than once. You should only be creating them once, it is recommended to create them at the top of your script. Do not use this function within <page>GM:HUDPaint</page> or any other hook!\n\nDefine fonts that you will actually use, as fonts are very taxing on performance and will cause crashes! Do not create fonts for every size.</warning>",
        "name": "CreateFont",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "True to disable, false to enable the clipping",
            "name": "disable",
            "type": "boolean"
          }
        ],
        "description": "<deprecated><br>Alias of <page>Global.DisableClipping</page> so use that instead.</deprecated>\n\nEnables or disables the clipping used by the VGUI that limits the drawing operations to a panels bounds.\n\nIdentical to <page>Global.DisableClipping</page>. See also <page>Panel:NoClipping</page>.",
        "name": "DisableClipping",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whether the clipping was enabled or not before this function call",
            "name": "oldState",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The center x integer coordinate.",
            "name": "originX",
            "type": "number"
          },
          {
            "description": "The center y integer coordinate.",
            "name": "originY",
            "type": "number"
          },
          {
            "description": "The radius of the circle.",
            "name": "radius",
            "type": "number"
          },
          {
            "description": "The red value of the color to draw the circle with, or a <page>Color</page>.",
            "name": "r",
            "type": "number"
          },
          {
            "description": "The green value of the color to draw the circle with. Unused if a <page>Color</page> was given.",
            "name": "g",
            "type": "number"
          },
          {
            "description": "The blue value of the color to draw the circle with. Unused if a <page>Color</page> was given.",
            "name": "b",
            "type": "number"
          },
          {
            "default": "255",
            "description": "The alpha value of the color to draw the circle with. Unused if a <page>Color</page> was given.",
            "name": "a",
            "type": "number"
          }
        ],
        "description": "Draws a hollow circle, made of lines. For a filled circle, see examples for <page>surface.DrawPoly</page>.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "DrawCircle",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The start x float coordinate.",
            "name": "startX",
            "type": "number"
          },
          {
            "description": "The start y float coordinate.",
            "name": "startY",
            "type": "number"
          },
          {
            "description": "The end x float coordinate.",
            "name": "endX",
            "type": "number"
          },
          {
            "description": "The end y float coordinate.",
            "name": "endY",
            "type": "number"
          }
        ],
        "description": "Draws a line from one point to another.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "DrawLine",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The start x integer coordinate.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The start y integer coordinate.",
            "name": "y",
            "type": "number"
          },
          {
            "description": "The integer width.",
            "name": "w",
            "type": "number"
          },
          {
            "description": "The integer height.",
            "name": "h",
            "type": "number"
          },
          {
            "default": "1",
            "description": "The thickness of the outlined box border.",
            "name": "thickness",
            "type": "number"
          }
        ],
        "description": "Draws a hollow box with a given border width.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "DrawOutlinedRect",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "A table containing integer vertices. See the <page>Structures/PolygonVertex</page>.\n\n**The vertices must be in clockwise order.**",
            "name": "vertices",
            "type": "table"
          }
        ],
        "description": "Draws a textured polygon (secretly a triangle fan) with a maximum of 4096 vertices.\nOnly works properly with convex polygons. You may try to render concave polygons, but there is no guarantee that things wont get messed up.\n\nUnlike most surface library functions, non-integer coordinates are not rounded.\n\n<warning>You must reset the drawing color and texture before calling the function to ensure consistent results. See examples below.</warning>\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "DrawPoly",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The X integer co-ordinate.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The Y integer co-ordinate.",
            "name": "y",
            "type": "number"
          },
          {
            "description": "The integer width of the rectangle.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "The integer height of the rectangle.",
            "name": "height",
            "type": "number"
          }
        ],
        "description": "Draws a solid rectangle on the screen.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "DrawRect",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The text to be rendered.",
            "name": "text",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "`true` to force text to render additive, `false` to force not additive, `nil` to use font's value.\n\nWhen additive rendering is enabled, the rendered text pixels will be added to the existing screen pixels, rather than replacing them outright. This means black text will be invisible, and drawing on a pure white background will be impossible.\n\n<upload src=\"70c/8db6ce804200a43.png\" size=\"21270\" name=\"image.png\">\n</upload>",
            "name": "forceAdditive",
            "type": "boolean"
          }
        ],
        "description": "Draw the specified text on the screen, using the previously set [position](surface.SetTextPos), [font](surface.SetFont) and [color](surface.SetTextColor). This function does **not** handle newlines.\n\nThis function moves the [text position](surface.SetTextPos) by the length of the drawn text - this can be used to change text properties (such as font or color) without having to manually recalculate the text position. See example #2 for example use of this behavior.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "DrawText",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The X integer co-ordinate.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The Y integer co-ordinate.",
            "name": "y",
            "type": "number"
          },
          {
            "description": "The integer width of the rectangle.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "The integer height of the rectangle.",
            "name": "height",
            "type": "number"
          }
        ],
        "description": "Draw a textured rectangle with the given position and dimensions on the screen, using the current active texture set with <page>surface.SetMaterial</page>. It is also affected by <page>surface.SetDrawColor</page>.\n\nSee also <page>render.SetMaterial</page> and <page>render.DrawScreenQuadEx</page>.\nSee also <page>surface.DrawTexturedRectUV</page> and <page>surface.DrawTexturedRectRotated</page>.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "DrawTexturedRect",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The X integer co-ordinate, representing the center of the rectangle.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The Y integer co-ordinate, representing the center of the rectangle.",
            "name": "y",
            "type": "number"
          },
          {
            "description": "The integer width of the rectangle.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "The integer height of the rectangle.",
            "name": "height",
            "type": "number"
          },
          {
            "description": "The rotation of the rectangle, in degrees.",
            "name": "rotation",
            "type": "number"
          }
        ],
        "description": "Draw a textured rotated rectangle with the given position and dimensions and angle on the screen, using the current active texture.\n\nSee also <page>surface.DrawTexturedRectUV</page> and <page>surface.DrawTexturedRect</page>.\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>",
        "name": "DrawTexturedRectRotated",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The X integer coordinate.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The Y integer coordinate.",
            "name": "y",
            "type": "number"
          },
          {
            "description": "The integer width of the rectangle.",
            "name": "width",
            "type": "number"
          },
          {
            "description": "The integer height of the rectangle.",
            "name": "height",
            "type": "number"
          },
          {
            "description": "The U texture mapping of the rectangle origin.",
            "name": "startU",
            "type": "number"
          },
          {
            "description": "The V texture mapping of the rectangle origin.",
            "name": "startV",
            "type": "number"
          },
          {
            "description": "The U texture mapping of the rectangle end.",
            "name": "endU",
            "type": "number"
          },
          {
            "description": "The V texture mapping of the rectangle end.",
            "name": "endV",
            "type": "number"
          }
        ],
        "description": "Draws a textured rectangle with a repeated or partial texture.\n\n`u` and `v` refer to texture coordinates.\n* (u, v) = (0, 0) is the top left\n* (u, v) = (1, 0) is the top right\n* (u, v) = (1, 1) is the bottom right\n* (u, v) = (0, 1) is the bottom left\n\nUsing a start point of (1, 0) and an end point to (0, 1), you can draw an image flipped horizontally, same goes with other directions. Going above 1 will tile the texture. Negative values are allowed as well.\n\nHere's a helper image:\n<upload src=\"70c/8d7bba248dc08bd.png\" size=\"183359\" name=\"image.png\">\n\nSee also <page>surface.DrawTexturedRect</page> and <page>surface.DrawTexturedRectRotated</page>.\n\n<note>If you are using a .png image, you need supply the \"noclamp\" flag as second parameter for <page>Global.Material</page> if you intend to use tiling.</note>\n\n<note>If you find that `surface.DrawTexturedRectUV` is getting your texture coordinates (u0, v0), (u1, v1) wrong and you're rendering with a material created with <page>Global.CreateMaterial</page>, try adjusting them with the following code:\n\n```\nlocal du = 0.5 / 32 -- half pixel anticorrection\nlocal dv = 0.5 / 32 -- half pixel anticorrection\nlocal u0, v0 = (u0 - du) / (1 - 2 * du), (v0 - dv) / (1 - 2 * dv)\nlocal u1, v1 = (u1 - du) / (1 - 2 * du), (v1 - dv) / (1 - 2 * dv)\n```\n\n\n**Explanation:**\n`surface.DrawTexturedRectUV` tries to correct the texture coordinates by half a pixel (something to do with sampling) and computes the correction using `IMaterial::GetMappingWidth()`/`GetMappingHeight()`. If the material was created without a `$basetexture`, then `GetMappingWidth()`/`GetMappingHeight()` uses the width and height of the error material (which is 32x32).</note>\n\n<rendercontext hook=\"false\" type=\"2D\"></rendercontext>\n\n<bug issue=\"3173\">The UV offsets might require (sub-)pixel correction for accurate tiling results.</bug>\n</upload>",
        "name": "DrawTexturedRectUV",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "description": "Returns the current alpha multiplier affecting drawing operations. This is set by <page>surface.SetAlphaMultiplier</page> or by the game engine in certain other cases.",
        "name": "GetAlphaMultiplier",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The multiplier ranging from 0 to 1.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the current color affecting draw operations.",
        "name": "GetDrawColor",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The color that drawing operations will use as a <page>Color</page>.",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the texture.",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Returns the [HUD icon](https://github.com/Facepunch/garrysmod/blob/master/garrysmod/scripts/hud_textures.txt) TextureID of a texture with the specified name.\n\nYou probably want to use <page>Global.Material</page> and <page>surface.SetMaterial</page>.",
        "name": "GetHUDTexture",
        "parent": "surface",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The texture ID, for use with <page>surface.SetTexture</page>.",
            "name": "texID",
            "type": "number"
          }
        ]
      },
      {
        "description": "Retrieves the position and <page text=\"ScissorRect\">render.SetScissorRect</page> information for the <page>Panel</page> that is currently being drawn.\n\nWhen using the <page>surface</page> library (and, by extension, the <page>draw</page> library) inside of the <page>PANEL:Paint</page> function, the origin (The on-screen position of `(0,0)`) is automatically shifted to the top-left corner of the panel to make it easier to draw the panel's contents.  Additionally, <page>render.SetScissorRect</page> is used to clip (or \"mask\") all drawn content to within the boundaries of the panel.  This function returns the information used by the <page>surface</page> library about the current panel's origin and <page text=\"ScissorRect\">render.SetScissorRect</page>.",
        "name": "GetPanelPaintState",
        "parent": "surface",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "A table containing the position and <page text=\"ScissorRect\">render.SetScissorRect</page> boundaries for the <page>Panel</page> currently being drawn.\n\nFor the table's format and available options see the <page>Structures/PanelPaintState</page> page.",
            "type": "table"
          }
        ]
      },
      {
        "description": "Returns the current color affecting text draw operations.",
        "name": "GetTextColor",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The color that text drawing operations will use as a <page>Color</page>.",
            "type": "table"
          }
        ]
      },
      {
        "description": "Returns the X and Y co-ordinate that has been set with <page>surface.SetTextPos</page> or changed by <page>surface.DrawText</page>.",
        "name": "GetTextPos",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The X integer co-ordinate.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The Y integer co-ordinate.",
            "name": "y",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The string to check the size of.",
            "name": "text",
            "type": "string"
          }
        ],
        "description": "Returns the width and height (in pixels) of the given text with the font that has been set with <page>surface.SetFont</page>.\n\n<validate>\nDoes not take into account new lines, the returned height is for the entire font (as specified by the font), not maximum of individual characters.</validate>",
        "name": "GetTextSize",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Width of the provided text.",
            "type": "number"
          },
          {
            "description": "Height of the provided text.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Name or path of the texture.",
            "name": "name/path",
            "type": "string"
          }
        ],
        "description": "Returns the texture id of the material with the given name/path, for use with <page>surface.SetTexture</page>.\n\nOpposite version of this function is <page>surface.GetTextureNameByID</page>.\n\n<note>This function will not work with .png or .jpg images. For that, see <page>Global.Material</page>. You will probably want to use it regardless.</note>",
        "name": "GetTextureID",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The texture ID",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "ID of texture.",
            "name": "id",
            "type": "number"
          }
        ],
        "description": "Returns name/path of texture by ID. Opposite version of this function is <page>surface.GetTextureID</page>.",
        "name": "GetTextureNameByID",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Returns name/path of texture.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The texture ID, returned by <page>surface.GetTextureID</page>.",
            "name": "textureID",
            "type": "number"
          }
        ],
        "description": "Returns the size of the texture with the associated texture ID.\n\nFor `.png/.jpg` textures loaded with <page>Global.Material</page> you can use the `$realheight` and `$realwidth` material parameters (<page>IMaterial:GetInt</page>) to get the size of the image.",
        "name": "GetTextureSize",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The texture width.",
            "type": "number"
          },
          {
            "description": "The texture height.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The path to the sound file.\n\nThis should either be a sound script name (<page>sound.Add</page>) or a file path relative to the `sound/` folder. (Make note that it's not sound**s**)",
            "name": "soundfile",
            "type": "string"
          }
        ],
        "description": "Play a sound file directly on the client (such as UI sounds, etc).\n\n<note>\nValid sample rates: **11025 Hz, 22050 Hz and 44100 Hz**, otherwise you may see this kind of message:\n\n`Unsupported 32-bit wave file your_sound.wav` and\n`Invalid sample rate (48000) for sound 'your_sound.wav'`\n</note>",
        "name": "PlaySound",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "description": "<deprecated>You should use <page>Global.ScrH</page> instead.</deprecated>\nReturns the height of the current client's screen.",
        "name": "ScreenHeight",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "screenHeight",
            "type": "number"
          }
        ]
      },
      {
        "description": "<deprecated>You should use <page>Global.ScrW</page> instead.</deprecated>\nReturns the width of the current client's screen.",
        "name": "ScreenWidth",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "screenWidth",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The multiplier ranging from 0 to 1.",
            "name": "multiplier",
            "type": "number"
          }
        ],
        "description": "Sets the alpha multiplier that will influence all upcoming drawing operations.\nSee also <page>render.SetBlend</page>.",
        "name": "SetAlphaMultiplier",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The red value of color.",
            "name": "r",
            "type": "number"
          },
          {
            "description": "The green value of color.",
            "name": "g",
            "type": "number"
          },
          {
            "description": "The blue value of color.",
            "name": "b",
            "type": "number"
          },
          {
            "default": "255",
            "description": "The alpha value of color.",
            "name": "a",
            "type": "number"
          }
        ],
        "description": "Set the color of any future shapes to be drawn, can be set by either using R, G, B, A as separate values or by a <page>Color</page>.\n\n<note>The alpha value may not work properly if you're using a material without `$vertexalpha`.</note>\n<note>Due to post processing and gamma correction the color you set with this function may appear differently when rendered. This problem does not occur on materials drawn with <page>surface.DrawTexturedRect</page>.</note>",
        "name": "SetDrawColor",
        "overloads": [
          {
            "arguments": [
              {
                "description": "A <page>Color</page> object/table to read the color from. This is slower than providing four numbers. You could use <page>Color:Unpack</page> to address this. You should also cache your color objects if you wish to use them, for performance reasons.",
                "name": "color",
                "type": "table"
              }
            ]
          }
        ],
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the font to use.",
            "name": "fontName",
            "type": "string"
          }
        ],
        "description": "Set the current font to be used for text operations later.\n\nThe fonts must first be created with <page>surface.CreateFont</page> or be one of the <page>Default Fonts</page>.",
        "name": "SetFont",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The material to be used.\n\n<note>When using <page>render.PushRenderTarget</page> or <page>render.SetRenderTarget</page>, the material should have the `$ignorez` flag set to make it visible. If the material is not used in 3D rendering, it is probably safe to add it with this code:\n```lua\nmaterial:SetInt( \"$flags\", bit.bor( material:GetInt( \"$flags\" ), 32768 ) )\n```\n\nIf using <page>Global.Material</page>, simply use the `ignorez` parameter.\n</note>",
            "name": "material",
            "type": "IMaterial"
          }
        ],
        "description": "Sets the material to be used in all upcoming draw operations using the surface library.\n\nNot to be confused with <page>render.SetMaterial</page>.\n\nIf you need to unset the texture, use the <page>draw.NoTexture</page> convenience function.\n\n<warning><page>Global.Material</page> function calls are expensive to be done inside this function or inside rendering context, you should be caching the results of <page>Global.Material</page> calls</warning>",
        "name": "SetMaterial",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The red value of color.",
            "name": "r",
            "type": "number"
          },
          {
            "description": "The green value of color",
            "name": "g",
            "type": "number"
          },
          {
            "description": "The blue value of color",
            "name": "b",
            "type": "number"
          },
          {
            "default": "255",
            "description": "The alpha value of color",
            "name": "a",
            "type": "number"
          }
        ],
        "description": "Set the color of any future text to be drawn, can be set by either using R, G, B, A as separate numbers.",
        "name": "SetTextColor",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The X integer co-ordinate.",
            "name": "x",
            "type": "number"
          },
          {
            "description": "The Y integer co-ordinate.",
            "name": "y",
            "type": "number"
          }
        ],
        "description": "Set the top-left position to draw any future text at.",
        "name": "SetTextPos",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of the texture to draw with returned by <page>surface.GetTextureID</page>.",
            "name": "textureID",
            "type": "number"
          }
        ],
        "description": "Sets the texture to be used in all upcoming draw operations using the surface library.\n\nThis is a legacy method, and should probably not be used, see <page>surface.SetMaterial</page> and <page>IMaterial</page> for a better alternative.",
        "name": "SetTexture",
        "parent": "surface",
        "realms": [
          "client",
          "menu"
        ]
      }
    ],
    "name": "surface"
  },
  {
    "description": "The system library provides functions that allow you to gather information about the system running the game, such as operating system, uptime and battery level.",
    "functions": [
      {
        "description": "Returns the total uptime of the current application as reported by Steam.\n\nThis will return a similar value to <page>Global.SysTime</page>.\n\n<note>This function does not work on Dedicated Servers and will instead return no value.</note>",
        "name": "AppTime",
        "parent": "system",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Seconds of game uptime as an integer.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the current battery power.",
        "name": "BatteryPower",
        "parent": "system",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "0-100 if a battery (laptop, UPS, etc) is present.\n\nWill instead return 255 if plugged in without a battery.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Flashes the window, turning the border to white briefly",
        "name": "FlashWindow",
        "parent": "system",
        "realms": [
          "client",
          "menu"
        ]
      },
      {
        "description": "Returns the country code of this computer, determined by the localisation settings of the OS.\n\n<note>This function does not work on Dedicated Servers and will instead return no value.</note>",
        "name": "GetCountry",
        "parent": "system",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Two-letter country code, using [ISO 3166-1](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) standard.",
            "type": "string"
          }
        ]
      },
      {
        "description": "Returns whether or not the game window has focus.\n\n<note>This function does not work on dedicated servers and will instead return no value.</note>",
        "name": "HasFocus",
        "parent": "system",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether or not the game window has focus.",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Returns whether the current OS is Linux.",
        "name": "IsLinux",
        "parent": "system",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether or not the game is running on Linux.",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Returns whether the current OS is OSX.",
        "name": "IsOSX",
        "parent": "system",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether or not the game is running on OSX.",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Returns whether the game is being run in a window or in fullscreen (you can change this by opening the menu, clicking 'Options', then clicking the 'Video' tab, and changing the Display Mode using the dropdown menu):\n\n<img src=\"DisplayModeDropdown.jpeg\">",
        "name": "IsWindowed",
        "parent": "system",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Is the game running in a window?",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Returns whether the current OS is Windows.",
        "name": "IsWindows",
        "parent": "system",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether the system the game runs on is Windows or not.",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Returns the synchronized Steam time. This is the number of seconds since the [Unix epoch](http://en.wikipedia.org/wiki/Unix_time).\n\n<note>This function does not work on Dedicated Servers and will instead return no value.</note>",
        "name": "SteamTime",
        "parent": "system",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Current Steam-synchronized Unix time.",
            "type": "number"
          }
        ]
      },
      {
        "description": "Returns the amount of seconds since the Steam user last moved their mouse.\n\nThis is a direct binding to ISteamUtils-&gt;GetSecondsSinceComputerActive, and is most likely related to Steam's automatic \"Away\" online status.\n\n<note>This function does not work on Dedicated Servers and will instead return no value.</note>",
        "name": "UpTime",
        "parent": "system",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The amount of seconds since the Steam user last moved their mouse.",
            "type": "number"
          }
        ]
      }
    ],
    "name": "system"
  },
  {
    "description": "The <page text=\"table\">Beginner_Tutorial_Tables</page> **type** is an object that can store multiple values.\n\nThe table **library** is a standard Lua library which provides functions to manipulate tables. In Garry's Mod there are several extra useful functions added to this library.\n\nThis category lists the functions available in the table `library`.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The table to insert the new values into.",
            "name": "target",
            "type": "table"
          },
          {
            "description": "The table to retrieve the values from.",
            "name": "source",
            "type": "table"
          }
        ],
        "description": "Adds all values from `source` table into the `target` table. This is most useful for sequential tables, not \"dictionary\" or \"map\" tables. See <page>table.Merge</page> if you want to merge 2 tables into one.\n\nSee <page>table.insert</page> for a function that adds a single value, and <page>table.Inherit</page> for a function that inherits keys from one table to another.",
        "name": "Add",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The target table.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 127,
          "lineStart": 116
        }
      },
      {
        "arguments": [
          {
            "description": "The original table to modify.",
            "name": "table",
            "type": "table"
          },
          {
            "default": "false",
            "description": "Save the keys within each member table. This will insert a new field `__key` into each value, and should not be used if the table contains non-table values.",
            "name": "saveKeys",
            "type": "boolean"
          }
        ],
        "description": "Changes all keys to sequential integers. This creates a new table object and does not affect the original.",
        "name": "ClearKeys",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Table with integer keys.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 512,
          "lineStart": 499
        }
      },
      {
        "arguments": [
          {
            "description": "Input table",
            "name": "input",
            "type": "table"
          }
        ],
        "description": "Collapses a table with keyvalue structure",
        "name": "CollapseKeyValue",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Output table",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 493,
          "lineStart": 475
        }
      },
      {
        "arguments": [
          {
            "description": "The table to concatenate.",
            "name": "tbl",
            "type": "table"
          },
          {
            "default": "\\",
            "description": "A separator to insert between strings",
            "name": "concatenator",
            "type": "string"
          },
          {
            "default": "1",
            "description": "The key to start at",
            "name": "startPos",
            "type": "number"
          },
          {
            "default": "#tbl",
            "description": "The key to end at",
            "name": "endPos",
            "type": "number"
          }
        ],
        "description": "Concatenates the contents of a table to a string.",
        "name": "concat",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Concatenated values",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The table to be copied.",
            "name": "originalTable",
            "type": "table"
          }
        ],
        "description": "Creates a deep copy and returns that copy.\n\n<warning>This function is very slow! If you know the table structure, it is better to write your own copying mechanism</warning>\n<warning>This function does NOT copy userdata, such as <page>Vector</page>s and <page>Angle</page>s!</warning>",
        "name": "Copy",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A deep copy of the original table",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 47,
          "lineStart": 22
        }
      },
      {
        "arguments": [
          {
            "description": "The table to copy from.",
            "name": "source",
            "type": "table"
          },
          {
            "description": "The table to write to.",
            "name": "target",
            "type": "table"
          }
        ],
        "description": "Empties the target table, and merges all values from the source table into it.",
        "name": "CopyFromTo",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 79,
          "lineStart": 71
        }
      },
      {
        "arguments": [
          {
            "description": "The table to count the keys of.",
            "name": "tbl",
            "type": "table"
          }
        ],
        "description": "Counts the amount of keys in a table. This should only be used when a table is not numerically and sequentially indexed. For those tables, consider the length (**#**) operator.\n\nIf you only want to test if the table is empty or not, use <page>table.IsEmpty</page> instead as it is a lot faster.",
        "name": "Count",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The number of keyvalue pairs. This includes non-numeric and non-sequential keys, unlike the length (**#**) operator.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 164,
          "lineStart": 160
        }
      },
      {
        "arguments": [
          {
            "description": "Table to be de-sanitised",
            "name": "tbl",
            "type": "table"
          }
        ],
        "description": "Converts a table that has been sanitised with <page>table.Sanitise</page> back to its original form",
        "name": "DeSanitise",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "De-sanitised table",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 391,
          "lineStart": 344
        }
      },
      {
        "arguments": [
          {
            "description": "The table to empty.",
            "name": "tbl",
            "type": "table"
          }
        ],
        "description": "Removes all values from a table. If your table is not a metatable, it is almost always better to use `tab = {}` to preserve performance.",
        "name": "Empty",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 57,
          "lineStart": 53
        }
      },
      {
        "arguments": [
          {
            "description": "Table to search",
            "name": "tbl",
            "type": "table"
          },
          {
            "description": "Value to return element after",
            "name": "value",
            "type": "any"
          }
        ],
        "description": "<deprecated>Instead, iterate the table using ipairs or increment from the previous index using <page>Global.next</page>. Non-numerically indexed tables are not ordered.</deprecated>\nReturns the value positioned after the supplied value in a table. If it isn't found then the first element in the table is returned",
        "name": "FindNext",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Found element",
            "type": "any"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 667,
          "lineStart": 659
        }
      },
      {
        "arguments": [
          {
            "description": "Table to search",
            "name": "tbl",
            "type": "table"
          },
          {
            "description": "Value to return element before",
            "name": "value",
            "type": "any"
          }
        ],
        "description": "<deprecated>Instead, iterate your table with ipairs, storing the previous value and checking for the target. Non-numerically indexed tables are not ordered.</deprecated>\nReturns the value positioned before the supplied value in a table. If it isn't found then the last element in the table is returned",
        "name": "FindPrev",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Found element",
            "type": "any"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 679,
          "lineStart": 669
        }
      },
      {
        "arguments": [
          {
            "description": "The table to flip items of.",
            "name": "input",
            "type": "table"
          }
        ],
        "description": "Flips key-value pairs of each element within a table, so that each value becomes the key, and each key becomes the value.\n\n<warning>Take care when using this function, as a Lua table cannot contain multiple instances of the same key. As such, data loss is possible when using this function on tables with duplicate values.\n\n```\nlocal test = { test = 1, test2 = 1 }\nlocal f = table.Flip( test )\nPrintTable( f )\n-- Outputs \"1\t=\ttest2\"\n```\n</warning>",
        "name": "Flip",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The flipped table.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 776,
          "lineStart": 766
        }
      },
      {
        "arguments": [
          {
            "default": "{}",
            "description": "Table to insert value in to",
            "name": "tab",
            "type": "table"
          },
          {
            "description": "Value to insert",
            "name": "value",
            "type": "any"
          }
        ],
        "description": "Inserts a value in to the given table even if the table is non-existent",
        "name": "ForceInsert",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The supplied or created table",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 401,
          "lineStart": 393
        }
      },
      {
        "arguments": [
          {
            "description": "The table to iterate over.",
            "name": "tbl",
            "type": "table"
          },
          {
            "description": "The function to run for each key and value.\n\n<callback>\n<arg name=\"key\" type=\"any\">The key of a key-value pair for this iteration.</arg>\n<arg name=\"val\" type=\"any\">The value of a key-value pair for this iteration.</arg>\n</callback>",
            "name": "callback",
            "type": "function"
          }
        ],
        "description": "<deprecated>This was deprecated in Lua 5.1 and removed in 5.2. You should use <page>Global.pairs</page> instead.</deprecated> Iterates for each key-value pair in the table, calling the function with the key and value of the pair. If the function returns anything, the loop is broken.\n\nThe GLua interpretation of this is <page>table.ForEach</page>.",
        "name": "foreach",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 753,
          "lineStart": 747
        }
      },
      {
        "arguments": [
          {
            "description": "The table to iterate over.",
            "name": "table",
            "type": "table"
          },
          {
            "description": "The function to run for each index.",
            "name": "func",
            "type": "function"
          }
        ],
        "description": "<deprecated>This was deprecated in Lua 5.1 and removed in 5.2. You should use <page>Global.ipairs</page>() instead.</deprecated> Iterates for each numeric index in the table in order.\n\nThis is inherited from the original Lua implementation and is deprecated in Lua as of 5.1; see [here](http://lua-users.org/wiki/TableLibraryTutorial). You should use <page>Global.ipairs</page>() instead.",
        "name": "foreachi",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Table to retrieve key from",
            "name": "tab",
            "type": "table"
          }
        ],
        "description": "<deprecated>Instead, expect the first key to be 1.\n\nNon-numerically indexed tables are not ordered and do not have a first key.</deprecated>\nReturns the first key found in the given table",
        "name": "GetFirstKey",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Key",
            "type": "any"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 642,
          "lineStart": 636
        }
      },
      {
        "arguments": [
          {
            "description": "Table to retrieve value from",
            "name": "tab",
            "type": "table"
          }
        ],
        "description": "<deprecated>Instead, index the table with a key of 1.\n\nNon-numerically indexed tables are not ordered and do not have a first key.</deprecated>\nReturns the first value found in the given table",
        "name": "GetFirstValue",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Value",
            "type": "any"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 647,
          "lineStart": 644
        }
      },
      {
        "arguments": [
          {
            "description": "The table to get keys of",
            "name": "tabl",
            "type": "table"
          }
        ],
        "description": "Returns all keys of a table.",
        "name": "GetKeys",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Table of keys",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 767,
          "lineStart": 755
        }
      },
      {
        "arguments": [
          {
            "description": "Table to retrieve key from",
            "name": "tab",
            "type": "table"
          }
        ],
        "description": "<deprecated>Instead, use the result of the length (#) operator, ensuring it is not zero. Non-numerically indexed tables are not ordered and do not have a last key.</deprecated>\nReturns the last key found in the given table",
        "name": "GetLastKey",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Key",
            "type": "any"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 652,
          "lineStart": 649
        }
      },
      {
        "arguments": [
          {
            "description": "Table to retrieve value from",
            "name": "tab",
            "type": "table"
          }
        ],
        "description": "<deprecated>Instead, index the table with the result of the length (#) operator, ensuring it is not zero. Non-numerically indexed tables are not ordered and do not have a last key.</deprecated>\nReturns the last value found in the given table",
        "name": "GetLastValue",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Value",
            "type": "any"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 654,
          "lineStart": 651
        }
      },
      {
        "arguments": [
          {
            "description": "The table to check.",
            "name": "tbl",
            "type": "table"
          }
        ],
        "description": "<deprecated>This function was deprecated in Lua 5.1 and is removed in 5.2. Use the length (#) operator instead.</deprecated> Returns the length of the table.",
        "name": "getn",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Sequential length.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The table to search in.",
            "name": "inputTable",
            "type": "table"
          }
        ],
        "description": "Returns a key of the supplied table with the highest number value.",
        "name": "GetWinningKey",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "winningKey",
            "type": "any"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 692,
          "lineStart": 678
        }
      },
      {
        "arguments": [
          {
            "description": "Table to check",
            "name": "tbl",
            "type": "table"
          },
          {
            "description": "Value to search for",
            "name": "value",
            "type": "any"
          }
        ],
        "description": "Checks if a table has a value.\n<warning>This function is **very inefficient for large tables** (O(n)) and should probably not be called in things that run each frame. Instead, consider a table structure such as example 2 below. Also see: <page>Tables: Bad Habits</page></warning>\n<note>For optimization, functions that look for a value by sorting the table should never be needed if you work on a table that you built yourself.</note>",
        "name": "HasValue",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns true if the table has that value, false otherwise",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 110,
          "lineStart": 105
        }
      },
      {
        "arguments": [
          {
            "description": "Table to copy data to",
            "name": "target",
            "type": "table"
          },
          {
            "description": "Table to copy data from",
            "name": "base",
            "type": "table"
          }
        ],
        "description": "Copies any missing data from `base` to `target`, and sets the `target`'s `BaseClass` member to the `base` table's pointer.\n\nSee <page>table.Merge</page>, which overrides existing values and doesn't add a BaseClass member.\n\n\nSee also <page>table.Add</page>, which simply adds values of one table to another.\n\n<bug pull=\"1304\">Sub-tables aren't inherited. The target's table value will take priority.</bug>",
        "name": "Inherit",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Target",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 20,
          "lineStart": 10
        }
      },
      {
        "arguments": [
          {
            "description": "The table to insert the variable into.",
            "name": "tbl",
            "type": "table"
          },
          {
            "description": "The position in the table to insert the variable. If the third argument is nil this argument becomes the value to insert at the end of given table.",
            "name": "position",
            "type": "number"
          },
          {
            "description": "The variable to insert into the table.",
            "name": "value",
            "type": "any"
          }
        ],
        "description": "Inserts a value into a table at the end of the table or at the given position.\n<note>This function does not call the `__newindex` [metamethod](Metamethods).</note>",
        "name": "insert",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The index the object was placed at.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Table to check.",
            "name": "tab",
            "type": "table"
          }
        ],
        "description": "Returns whether or not the given table is empty.\n\nThis works on both sequential and non-sequential tables, and is a lot faster for non-sequential tables than `table.Count(tbl) == 0`.\nIf you want to check if a table is not empty, use `next(tbl) ~= nil`, as it is slightly faster.\n\nFor sequential tables it is better to use `tab[1] ~= nil`.",
        "name": "IsEmpty",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Is empty?",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 65,
          "lineStart": 63
        }
      },
      {
        "arguments": [
          {
            "description": "Table to check",
            "name": "tab",
            "type": "table"
          }
        ],
        "description": "Returns whether or not the table's keys are sequential",
        "name": "IsSequential",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Is sequential",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 203,
          "lineStart": 196
        }
      },
      {
        "arguments": [
          {
            "description": "Table to search",
            "name": "tab",
            "type": "table"
          },
          {
            "description": "Value to search for",
            "name": "value",
            "type": "any"
          }
        ],
        "description": "Returns the first key found to be containing the supplied value",
        "name": "KeyFromValue",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Key",
            "type": "any"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 698,
          "lineStart": 694
        }
      },
      {
        "arguments": [
          {
            "description": "Table to search",
            "name": "tab",
            "type": "table"
          },
          {
            "description": "Value to search for",
            "name": "value",
            "type": "any"
          }
        ],
        "description": "Returns a table of keys containing the supplied value",
        "name": "KeysFromValue",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Keys",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 621,
          "lineStart": 715
        }
      },
      {
        "arguments": [
          {
            "description": "Table to convert",
            "name": "tbl",
            "type": "table"
          }
        ],
        "description": "Returns a copy of the input table with all string keys converted to be lowercase recursively",
        "name": "LowerKeyNames",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "New table",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 469,
          "lineStart": 445
        }
      },
      {
        "arguments": [
          {
            "description": "The table to search.",
            "name": "tbl",
            "type": "table"
          }
        ],
        "description": "Returns the highest numerical key.",
        "name": "maxn",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The highest numerical key.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The table to search in.",
            "name": "inputTable",
            "type": "table"
          },
          {
            "description": "The key to lookup.",
            "name": "keyName",
            "type": "any"
          }
        ],
        "description": "Returns an array of values of given with given key from each table of given table.\n\nSee also <page>table.KeysFromValue</page>.",
        "name": "MemberValuesFromKey",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A list of found values, or an empty table.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 729,
          "lineStart": 723
        }
      },
      {
        "arguments": [
          {
            "description": "The table you want the source table to merge with.",
            "name": "destination",
            "type": "table"
          },
          {
            "description": "The table you want to merge with the destination table.",
            "name": "source",
            "type": "table"
          },
          {
            "default": "false",
            "description": "If `true`, does not recursively merge sub-tables, and simply replaces them.",
            "name": "forceOverride",
            "type": "boolean"
          }
        ],
        "description": "<note>This function can cause a stack overflow under certain circumstances.</note>\nRecursively merges the key-value pairs of the `source` table with the key-value pairs in the `destination` table.\n\nSee <page>table.Inherit</page>, which doesn't override existing values.\n\n\nSee also <page>table.Add</page>, which simply adds values of one table to another.",
        "name": "Merge",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Destination table",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 99,
          "lineStart": 85
        }
      },
      {
        "arguments": [
          {
            "description": "The source table from which the elements are to be moved.",
            "name": "sourceTbl",
            "type": "table"
          },
          {
            "description": "The start index of the source range from which the elements are to be moved.",
            "name": "from",
            "type": "number"
          },
          {
            "description": "The end index of the source range until which the elements are to be moved.",
            "name": "to",
            "type": "number"
          },
          {
            "description": "The index within the destination table where the moved elements should be inserted.",
            "name": "dest",
            "type": "number"
          },
          {
            "default": "sourceTbl",
            "description": "The destination table to which the elements are to be moved. By default, this is the same as the source table.",
            "name": "destTbl",
            "type": "table"
          }
        ],
        "description": "Moves elements from one part of a table to another part a given table. This is similar to assigning elements from the source table to the destination table in multiple assignments.",
        "name": "move",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The modified destination table.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 802,
          "lineStart": 781
        }
      },
      {
        "arguments": [
          {
            "description": "The items to pack into a table.",
            "name": "items",
            "type": "vararg"
          }
        ],
        "description": "Packs a set of items into a table and returns the new table. It is meant as an alternative implementation of `table.pack` from newer versions of Lua.",
        "name": "Pack",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table containing the `items`.",
            "type": "table"
          },
          {
            "description": "The amount of items that were added to the table.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 4,
          "lineStart": 2
        }
      },
      {
        "arguments": [
          {
            "description": "The table to choose from.",
            "name": "haystack",
            "type": "table"
          }
        ],
        "description": "Returns a random value from the supplied table.\n\n<warning>This function iterates over the given table **twice**, therefore with sequential tables you should instead use following:\n\n```\nmytable[ math.random( #mytable ) ]\n```\n</warning>",
        "name": "Random",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A random value from the table.",
            "type": "any"
          },
          {
            "description": "The key associated with the random value.",
            "type": "any"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 177,
          "lineStart": 166
        }
      },
      {
        "arguments": [
          {
            "description": "The table to remove the value from.",
            "name": "tbl",
            "type": "table"
          },
          {
            "default": "#tbl",
            "description": "The index of the value to remove.",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "Removes a value from a table and shifts any other values down to fill the gap.\n<note>Does nothing if index is less than 1 or greater than `#tbl`</note>",
        "name": "remove",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The value that was removed.",
            "type": "any"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The table that will be searched.",
            "name": "tbl",
            "type": "table"
          },
          {
            "description": "The value to find within the table.",
            "name": "val",
            "type": "any"
          }
        ],
        "description": "Removes the first instance of a given value from the specified table with <page>table.remove</page>, then returns the key that the value was found at.\n\n<warning>Avoid usage of this function. It does not remove all instances of given value in the table, only the first found, and it does not work with non sequential tables!</warning>",
        "name": "RemoveByValue",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The key at which the value was found, or false if the value was not found.",
            "type": "any"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 713,
          "lineStart": 700
        }
      },
      {
        "arguments": [
          {
            "description": "Table to reverse.",
            "name": "tbl",
            "type": "table"
          }
        ],
        "description": "Returns a reversed copy of a sequential table. Any non-sequential and non-numeric keyvalue pairs will not be copied.",
        "name": "Reverse",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A reversed copy of the table.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 742,
          "lineStart": 731
        }
      },
      {
        "arguments": [
          {
            "description": "Table to sanitise",
            "name": "tab",
            "type": "table"
          }
        ],
        "description": "Converts <page>Vector</page>s, <page>Angle</page>s and <page>boolean</page>s to be able to be converted to and from key-values via <page>util.TableToKeyValues</page>.\n\n<page>table.DeSanitise</page> performs the opposite transformation.",
        "name": "Sanitise",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Sanitised table",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 338,
          "lineStart": 284
        }
      },
      {
        "arguments": [
          {
            "description": "The table to shuffle.",
            "name": "target",
            "type": "table"
          }
        ],
        "description": "Performs an inline [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle) on the table in `O(n)` time",
        "name": "Shuffle",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 189,
          "lineStart": 183
        }
      },
      {
        "arguments": [
          {
            "description": "The table to sort.",
            "name": "tbl",
            "type": "table"
          },
          {
            "default": "nil",
            "description": "If specified, the sorting function.\n\n<callback>\n<arg name=\"a\" type=\"any\">Item A to test.</arg>\n<arg name=\"b\" type=\"any\">Item B to test.</arg>\n<ret name=\"result\" type=\"boolean\">Result of the comparison. Return true in this function if you want the first parameter to come first in the sorted array.</ret>\n</callback>",
            "name": "sorter",
            "type": "function"
          }
        ],
        "description": "Sorts a sequential table either ascending or by the given sort function.\n<note>This function modifies the table you give to it and internally uses the [quick sort algorithm](http://www.lua.org/source/5.2/ltablib.c.html#sort).</note>",
        "name": "sort",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Table to sort. All values of this table must be of same type.",
            "name": "tab",
            "type": "table"
          },
          {
            "default": "false",
            "description": "Should the order be descending?",
            "name": "descending",
            "type": "boolean"
          }
        ],
        "description": "Returns a list of keys sorted based on values of those keys.\n\nFor normal sorting see <page>table.sort</page>.",
        "name": "SortByKey",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of keys sorted by values from supplied table.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 154,
          "lineStart": 141
        }
      },
      {
        "arguments": [
          {
            "description": "Table to sort.",
            "name": "tab",
            "type": "table"
          },
          {
            "description": "The key used to identify the member.",
            "name": "memberKey",
            "type": "any"
          },
          {
            "default": "false",
            "description": "Whether or not the order should be ascending.",
            "name": "ascending",
            "type": "boolean"
          }
        ],
        "description": "Sorts a table by a named member.",
        "name": "SortByMember",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 439,
          "lineStart": 407
        }
      },
      {
        "arguments": [
          {
            "description": "The table to sort in descending order.",
            "name": "tbl",
            "type": "table"
          }
        ],
        "description": "Sorts a table in reverse order from <page>table.sort</page>.\n<note>This function modifies the table you give to it. Like table.sort, it does not return anything.</note>",
        "name": "SortDesc",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 135,
          "lineStart": 133
        }
      },
      {
        "arguments": [
          {
            "description": "The table to iterate over.",
            "name": "tbl",
            "type": "table"
          },
          {
            "description": "Optional. A name for the table.",
            "name": "displayName",
            "type": "string"
          },
          {
            "description": "Adds new lines and tabs to the string.",
            "name": "niceFormatting",
            "type": "boolean"
          }
        ],
        "description": "Converts a table into a string",
        "name": "ToString",
        "parent": "table",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The table formatted as a string.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/table.lua",
          "lineEnd": 278,
          "lineStart": 271
        }
      }
    ],
    "name": "table"
  },
  {
    "description": "The team library gives you access to the team system built into the Source engine, and allows you to create custom teams and get information about them.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Index of the team",
            "name": "index",
            "type": "number"
          },
          {
            "description": "Amount to increase the team's score by",
            "name": "increment",
            "type": "number"
          }
        ],
        "description": "Increases the score of the given team",
        "name": "AddScore",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 188,
          "lineStart": 184
        }
      },
      {
        "description": "Returns the team index of the team with the least players. Falls back to TEAM_UNASSIGNED",
        "name": "BestAutoJoinTeam",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Team index",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 211,
          "lineStart": 190
        }
      },
      {
        "description": "Returns the real table consisting of information on every defined team",
        "name": "GetAllTeams",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Team info",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 38,
          "lineStart": 34
        }
      },
      {
        "arguments": [
          {
            "description": "Index of the team",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "Returns the selectable classes for the given team. This can be added to with <page>team.SetClass</page>",
        "name": "GetClass",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Selectable classes",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 103,
          "lineStart": 98
        }
      },
      {
        "arguments": [
          {
            "description": "The team index.",
            "name": "teamIndex",
            "type": "number"
          }
        ],
        "description": "Returns the team's color.",
        "name": "GetColor",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The team's color as a <page>Color</page>.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 176,
          "lineStart": 171
        }
      },
      {
        "arguments": [
          {
            "description": "The team index.",
            "name": "teamIndex",
            "type": "number"
          }
        ],
        "description": "Returns the name of the team.",
        "name": "GetName",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The team name. If the team is not defined, returns an empty string.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 160,
          "lineStart": 155
        }
      },
      {
        "arguments": [
          {
            "description": "The team index.",
            "name": "teamIndex",
            "type": "number"
          }
        ],
        "description": "Returns a table with all player of the specified team.\n<note>This function returns a sequential table, meaning it should be looped with <page>Global.ipairs</page> instead of <page>Global.pairs</page> for efficiency reasons.</note>",
        "name": "GetPlayers",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A sequential table of <page>Player</page>s that belong to the requested team.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 147,
          "lineStart": 135
        }
      },
      {
        "arguments": [
          {
            "description": "The team index.",
            "name": "teamIndex",
            "type": "number"
          }
        ],
        "description": "Returns the score of the team.",
        "name": "GetScore",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "score",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 153,
          "lineStart": 149
        }
      },
      {
        "arguments": [
          {
            "description": "Index of the team",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "Returns a table of valid spawnpoint classes the team can use. These are set with <page>team.SetSpawnPoint</page>.",
        "name": "GetSpawnPoint",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Valid spawnpoint classes",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 59,
          "lineStart": 54
        }
      },
      {
        "arguments": [
          {
            "description": "Index of the team",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "Returns a table of valid spawnpoint entities the team can use. These are set with  <page>team.SetSpawnPoint</page>.",
        "name": "GetSpawnPoints",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Valid spawnpoint entities",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 78,
          "lineStart": 61
        }
      },
      {
        "arguments": [
          {
            "description": "The index of the team.",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "Returns if a team is joinable or not. This is set in <page>team.SetUp</page>.",
        "name": "Joinable",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "True if the team is joinable. False otherwise.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 52,
          "lineStart": 47
        }
      },
      {
        "arguments": [
          {
            "description": "The team index.",
            "name": "teamIndex",
            "type": "number"
          }
        ],
        "description": "Returns the amount of players in a team.",
        "name": "NumPlayers",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "playerCount",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 133,
          "lineStart": 129
        }
      },
      {
        "arguments": [
          {
            "description": "Index of the team",
            "name": "index",
            "type": "number"
          },
          {
            "description": "A class ID or table of class IDs",
            "name": "classes",
            "type": "any"
          }
        ],
        "description": "Sets valid classes for use by a team. Classes can be created using <page>player_manager.RegisterClass</page>",
        "name": "SetClass",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 96,
          "lineStart": 89
        }
      },
      {
        "arguments": [
          {
            "description": "The team index.",
            "name": "teamIndex",
            "type": "number"
          },
          {
            "description": "The team's new color as a <page>Color</page>.",
            "name": "color",
            "type": "table"
          }
        ],
        "description": "Sets the team's color.",
        "name": "SetColor",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 169,
          "lineStart": 162
        }
      },
      {
        "arguments": [
          {
            "description": "Index of the team",
            "name": "index",
            "type": "number"
          },
          {
            "description": "The team's new score",
            "name": "score",
            "type": "number"
          }
        ],
        "description": "Sets the score of the given team",
        "name": "SetScore",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 182,
          "lineStart": 178
        }
      },
      {
        "arguments": [
          {
            "description": "Index of the team",
            "name": "index",
            "type": "number"
          },
          {
            "description": "A spawnpoint classname or table of spawnpoint classnames",
            "name": "classes",
            "type": "any"
          }
        ],
        "description": "Sets valid spawnpoint classes for use by a team.\n\n<note>GM.TeamBased must be set to true for this to work</note>",
        "name": "SetSpawnPoint",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 87,
          "lineStart": 80
        }
      },
      {
        "arguments": [
          {
            "description": "The team index.",
            "name": "teamIndex",
            "type": "number"
          },
          {
            "description": "The team name.",
            "name": "teamName",
            "type": "string"
          },
          {
            "description": "The team color. Uses the <page>Color</page>.",
            "name": "teamColor",
            "type": "table"
          },
          {
            "default": "true",
            "description": "Whether the team is joinable or not.",
            "name": "isJoinable",
            "type": "boolean"
          }
        ],
        "description": "Creates a new team. See <page>GM:CreateTeams</page> for the hook to call this in.",
        "name": "SetUp",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 31,
          "lineStart": 25
        }
      },
      {
        "arguments": [
          {
            "description": "The team index.",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "Returns the total number of deaths of all players in the team.",
        "name": "TotalDeaths",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Total deaths in team.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 115,
          "lineStart": 105
        }
      },
      {
        "arguments": [
          {
            "description": "Entity or number.",
            "name": "Entity or number",
            "type": "Entity"
          }
        ],
        "description": "Get's the total frags in a team.",
        "name": "TotalFrags",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "index",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 127,
          "lineStart": 117
        }
      },
      {
        "arguments": [
          {
            "description": "Index of the team",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "Returns true if the given team index is valid",
        "name": "Valid",
        "parent": "team",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Is valid",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/team.lua",
          "lineEnd": 45,
          "lineStart": 40
        }
      }
    ],
    "name": "team"
  },
  {
    "description": "The timer library is a very useful set of functions which allow you to run a function periodically or after a given delay.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Identifier of the timer to adjust.",
            "name": "identifier",
            "type": "any"
          },
          {
            "description": "The delay interval in seconds. **Must be specified.**",
            "name": "delay",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "Repetitions. Use `0` for infinite or `nil` to keep previous value.",
            "name": "repetitions",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "The new function. Use `nil` to keep previous value.",
            "name": "func",
            "type": "function"
          }
        ],
        "description": "Adjusts a previously created (<page>timer.Create</page>) timer with the given identifier.",
        "name": "Adjust",
        "parent": "timer",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "`true` if succeeded.",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "<deprecated>If you want to check if whether or not a timer exists, use <page>timer.Exists</page>.</deprecated> This function does nothing.",
        "name": "Check",
        "parent": "timer",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Identifier of the timer to create. Must be unique. If a timer already exists with the same identifier, that timer will be updated to the new settings and reset.",
            "name": "identifier",
            "type": "string"
          },
          {
            "description": "The delay interval in seconds. If the delay is too small, the timer will fire on the next <page>GM:Tick</page>.",
            "name": "delay",
            "type": "number"
          },
          {
            "description": "The number of times to repeat the timer. Enter `0` or any value below `0` for infinite repetitions.",
            "name": "repetitions",
            "type": "number"
          },
          {
            "description": "Function called when timer has finished the countdown.",
            "name": "func",
            "type": "function"
          }
        ],
        "description": "Creates a new timer that will repeat its function given amount of times.\nThis function also requires the timer to be named, which allows you to control it after it was created via the <page>timer</page>.\n\nFor a simple one-time timer with no identifiers, see <page>timer.Simple</page>.\n\n<warning>Timers use <page>Global.CurTime</page> internally. Due to this, they won't advance while the client is timing out from the server or on an empty dedicated server due to hibernation. (unless `sv_hibernate_think` is set to `1` or `delay` is set to `0` ).</warning>",
        "name": "Create",
        "parent": "timer",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Identifier of the timer to destroy.",
            "name": "identifier",
            "type": "string"
          }
        ],
        "description": "<deprecated>You should be using <page>timer.Remove</page> instead.</deprecated> Stops and destroys the given timer. Alias of <page>timer.Remove</page>.",
        "name": "Destroy",
        "parent": "timer",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Identifier of the timer.",
            "name": "identifier",
            "type": "string"
          }
        ],
        "description": "Returns whenever the given timer exists or not.\n\nFor debugging purposes you can use the following commands:\n* `lua_dumptimers_cl`\n* `lua_dumptimers_sv`\n* `lua_dumptimers_menu`\n\nThese will list all active timers in each realm.",
        "name": "Exists",
        "parent": "timer",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns true if the timer exists, false if it doesn't",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Identifier of the timer.",
            "name": "identifier",
            "type": "any"
          }
        ],
        "description": "Pauses the given timer.",
        "name": "Pause",
        "parent": "timer",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "false if the timer didn't exist or was already paused, true otherwise.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Identifier of the timer to remove.",
            "name": "identifier",
            "type": "string"
          }
        ],
        "description": "Stops and removes a timer created by <page>timer.Create</page>.\n<warning>The timers are removed in the next frame! Keep this in mind when storing identifiers in variables.</warning>",
        "name": "Remove",
        "parent": "timer",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Identifier of the timer.",
            "name": "identifier",
            "type": "any"
          }
        ],
        "description": "Returns amount of repetitions/executions left before the timer destroys itself.",
        "name": "RepsLeft",
        "parent": "timer",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The amount of executions left.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "How long until the function should be ran (in seconds). Use `0` to have the function run in the next <page>GM:Tick</page>.",
            "name": "delay",
            "type": "number"
          },
          {
            "description": "The function to run after the specified delay.",
            "name": "func",
            "type": "function"
          }
        ],
        "description": "Creates a simple timer that runs the given function after a specified delay.\n\nFor a more advanced version that you can control after creation, see <page>timer.Create</page>.\n\n<warning>Timers use <page>Global.CurTime</page> internally. Due to this, they won't advance while the client is timing out from the server or on an empty dedicated server due to hibernation. (unless `sv_hibernate_think` is set to `1`).</warning>",
        "name": "Simple",
        "parent": "timer",
        "realms": [
          "menu",
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "Identifier of the timer.",
            "name": "identifier",
            "type": "any"
          }
        ],
        "description": "Restarts the given timer.\n\n<note>Timers use <page>Global.CurTime</page> for timing.</note>\n<warning>Timers won't advance while the client is timing out from the server.</warning>",
        "name": "Start",
        "parent": "timer",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "true if the timer exists, false if it doesn't.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Identifier of the timer.",
            "name": "identifier",
            "type": "any"
          }
        ],
        "description": "Stops the given timer and rewinds it.",
        "name": "Stop",
        "parent": "timer",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "false if the timer didn't exist or was already stopped, true otherwise.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Identifier of the timer.",
            "name": "identifier",
            "type": "any"
          }
        ],
        "description": "Returns amount of time left (in seconds) before the timer executes its function.\n\n<note>If the timer is paused, the amount will be negative.</note>",
        "name": "TimeLeft",
        "parent": "timer",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The amount of time left (in seconds).",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Identifier of the timer.",
            "name": "identifier",
            "type": "any"
          }
        ],
        "description": "Runs either <page>timer.Pause</page> or <page>timer.UnPause</page> based on the timer's current status.",
        "name": "Toggle",
        "parent": "timer",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "status of the timer.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Identifier of the timer.",
            "name": "identifier",
            "type": "any"
          }
        ],
        "description": "Unpauses the timer.",
        "name": "UnPause",
        "parent": "timer",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "false if the timer didn't exist or was already running, true otherwise.",
            "type": "boolean"
          }
        ]
      }
    ],
    "name": "timer"
  },
  {
    "description": "<deprecated>You should be using the <page>net</page> library instead</deprecated>\n\nThe umsg (user message) library was previously the most common way of sending information from the server to the client.\n\n<warning>Usermessages have a limit of only 256 bytes!</warning>",
    "functions": [
      {
        "arguments": [
          {
            "description": "The angle to be sent.",
            "name": "angle",
            "type": "Angle"
          }
        ],
        "description": "<deprecated>You should be using the <page>net</page> instead</deprecated>\nWrites an angle to the usermessage.",
        "name": "Angle",
        "parent": "umsg",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The bool to be sent.",
            "name": "bool",
            "type": "boolean"
          }
        ],
        "description": "<deprecated>You should be using the <page>net</page> instead</deprecated>\nWrites a bool to the usermessage.",
        "name": "Bool",
        "parent": "umsg",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The char to be sent.",
            "name": "char",
            "type": "number"
          }
        ],
        "description": "<deprecated>You should be using the <page>net</page> instead</deprecated>\nWrites a signed char to the usermessage.",
        "name": "Char",
        "parent": "umsg",
        "realms": [
          "server"
        ]
      },
      {
        "description": "<deprecated>You should be using the <page>net</page> instead</deprecated>\nDispatches the usermessage to the client(s).",
        "name": "End",
        "parent": "umsg",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The entity to be sent.",
            "name": "entity",
            "type": "Entity"
          }
        ],
        "description": "<deprecated>You should be using the <page>net</page> instead</deprecated>\nWrites an entity object to the usermessage.",
        "name": "Entity",
        "parent": "umsg",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The float to be sent.",
            "name": "float",
            "type": "number"
          }
        ],
        "description": "<deprecated>You should be using the <page>net</page> instead</deprecated>\n\nWrites a float to the usermessage.",
        "name": "Float",
        "parent": "umsg",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The int to be sent.",
            "name": "int",
            "type": "number"
          }
        ],
        "description": "<deprecated>You should be using the <page>net</page> instead</deprecated>\n\nWrites a signed int (32 bit) to the usermessage.",
        "name": "Long",
        "parent": "umsg",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The string to be pooled.",
            "name": "string",
            "type": "string"
          }
        ],
        "description": "<deprecated>Inferior version of <page>util.AddNetworkString</page></deprecated>\n\nThe string specified will be networked to the client and receive a identifying number, which will be sent instead of the string to optimize networking.",
        "name": "PoolString",
        "parent": "umsg",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The short to be sent.",
            "name": "short",
            "type": "number"
          }
        ],
        "description": "<deprecated>You should be using the <page>net</page> instead</deprecated>\n\nWrites a signed short (16 bit) to the usermessage.",
        "name": "Short",
        "parent": "umsg",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the message to be sent.",
            "name": "name",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "If passed a player object, it will only be sent to the player, if passed a <page>CRecipientFilter</page> of players, it will be sent to all specified players, if passed `nil` (or another invalid value), the message will be sent to all players.",
            "name": "filter",
            "type": "Player"
          }
        ],
        "description": "<deprecated>You should be using <page>net</page> instead</deprecated>\n\nStarts a new usermessage.\n\n<warning>Usermessages have a limit of only 256 bytes!</warning>",
        "name": "Start",
        "parent": "umsg",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The string to be sent.",
            "name": "string",
            "type": "string"
          }
        ],
        "description": "<deprecated>You should be using the <page>net</page> instead</deprecated>\nWrites a null terminated string to the usermessage.",
        "name": "String",
        "parent": "umsg",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The vector to be sent.",
            "name": "vector",
            "type": "Vector"
          }
        ],
        "description": "<deprecated>You should be using the <page>net</page> instead</deprecated>\n\nWrites a Vector to the usermessage.",
        "name": "Vector",
        "parent": "umsg",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The vector normal to be sent.",
            "name": "normal",
            "type": "Vector"
          }
        ],
        "description": "<deprecated>You should be using the <page>net</page> instead</deprecated>\n\nWrites a vector normal to the usermessage.",
        "name": "VectorNormal",
        "parent": "umsg",
        "realms": [
          "server"
        ]
      }
    ],
    "name": "umsg"
  },
  {
    "description": "The undo library allows you to add custom entities to the undo list, allowing users to \"undo\" their creation with their undo (default: <key>Z</key>) key.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The entity to add",
            "name": "ent",
            "type": "Entity"
          }
        ],
        "description": "Adds an entity to the current undo block",
        "name": "AddEntity",
        "parent": "undo",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/undo.lua",
          "lineEnd": 244,
          "lineStart": 237
        }
      },
      {
        "arguments": [
          {
            "description": "The function to call.\n<callback>\n<arg type=\"table\" name=\"undo\">See <page text=\"Undo Structure\">Structures/Undo</page>.</arg>\n<arg type=\"vararg\" name=\"...\">What was passed after the function callback argument.</arg>\n\n<ret type=\"boolean\" name=\"result\" default=\"nil\">Returning `false` will mark execution of this function as \"failed\", meaning that the undo might be skipped if no other entities are removed by it. This is useful when for example an entity you want to access is removed therefore there's nothing to do.</ret>\n</callback>",
            "name": "func",
            "type": "function"
          },
          {
            "description": "Arguments to pass to the function (after the undo info table)",
            "name": "arguments",
            "type": "vararg"
          }
        ],
        "description": "Adds a function to call when the current undo block is undone. Note that if an undo has a function, the player will always be notified when this undo is performed, even if the entity it is meant to undo no longer exists.",
        "name": "AddFunction",
        "parent": "undo",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/undo.lua",
          "lineEnd": 256,
          "lineStart": 249
        }
      },
      {
        "arguments": [
          {
            "description": "Name of the undo message to show to players",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Begins a new undo entry",
        "name": "Create",
        "parent": "undo",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/undo.lua",
          "lineEnd": 221,
          "lineStart": 213
        }
      },
      {
        "arguments": [
          {
            "description": "The undo block to process as an <page>Structures/Undo</page>",
            "name": "tab",
            "type": "table{Undo}"
          }
        ],
        "description": "Processes an undo block (in table form). This is used internally by the undo manager when a player presses Z.\n\nYou should use `gm_undo` or `gm_undonum *num*` console commands instead of calling this function directly.",
        "name": "Do_Undo",
        "parent": "undo",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "Number of removed entities",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/undo.lua",
          "lineEnd": 414,
          "lineStart": 368
        }
      },
      {
        "arguments": [
          {
            "default": "nil",
            "description": "Text that appears in the player's undo history. If unset, is set to undo's name.",
            "name": "NiceText",
            "type": "string"
          }
        ],
        "description": "Completes an undo entry, and registers it with the player's client",
        "name": "Finish",
        "parent": "undo",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/undo.lua",
          "lineEnd": 363,
          "lineStart": 329
        }
      },
      {
        "description": "Serverside, returns a table containing all undo blocks of all players. Clientside, returns a table of the local player's undo blocks.\n<note>Serverside, this table's keys use <page>Player:UniqueID</page> to store a player's undo blocks.</note>",
        "name": "GetTable",
        "parent": "undo",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The undo table.",
            "type": "table<table{Undo}>"
          }
        ],
        "source": {
          "file": "lua/includes/modules/undo.lua",
          "lineEnd": 189,
          "lineStart": 187
        }
      },
      {
        "description": "<internal></internal>\nMakes the UI dirty - it will re-create the controls the next time it is viewed.",
        "name": "MakeUIDirty",
        "parent": "undo",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/undo.lua",
          "lineEnd": 120,
          "lineStart": 116
        }
      },
      {
        "arguments": [
          {
            "description": "The old entity",
            "name": "from",
            "type": "Entity"
          },
          {
            "description": "The new entity to replace the old one. Can also be a `NULL` to remove the entity from the undo system.",
            "name": "to",
            "type": "Entity"
          }
        ],
        "description": "Replaces any instance of the \"from\" reference with the \"to\" reference, in any existing undo block.\n\nYou very likely want to call <page>cleanup.ReplaceEntity</page> with the same entities as well.",
        "name": "ReplaceEntity",
        "parent": "undo",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether the entity was replaced",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/undo.lua",
          "lineEnd": 282,
          "lineStart": 261
        }
      },
      {
        "arguments": [
          {
            "description": "The text to display when the undo block is undone",
            "name": "customText",
            "type": "string"
          }
        ],
        "description": "Sets a custom undo text for the current undo block",
        "name": "SetCustomUndoText",
        "parent": "undo",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/undo.lua",
          "lineEnd": 232,
          "lineStart": 226
        }
      },
      {
        "arguments": [
          {
            "description": "The player responsible for undoing the block",
            "name": "ply",
            "type": "Player"
          }
        ],
        "description": "Sets the player which the current undo block belongs to",
        "name": "SetPlayer",
        "parent": "undo",
        "realms": [
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/undo.lua",
          "lineEnd": 295,
          "lineStart": 288
        }
      },
      {
        "description": "<internal></internal>\nAdds a hook (CPanelPaint) to the control panel paint function so we can determine when it is being drawn.",
        "name": "SetupUI",
        "parent": "undo",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/undo.lua",
          "lineEnd": 160,
          "lineStart": 149
        }
      }
    ],
    "name": "undo"
  },
  {
    "description": "<deprecated>You should be using the <page>net</page> instead</deprecated>\n\nThe usermessage library is used to receive user messages from the server on the client.\n\n<warning>Usermessages have a limit of only 256 bytes!</warning>",
    "functions": [
      {
        "description": "<deprecated>You should be using <page>net</page> instead</deprecated>\n\nReturns a table of every usermessage hook",
        "name": "GetTable",
        "parent": "usermessage",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "User message hooks",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/usermessage.lua",
          "lineEnd": 57,
          "lineStart": 53
        }
      },
      {
        "arguments": [
          {
            "description": "The message name to hook to.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The function to be called if the specified message was received.\n\n<callback>\n<arg type=\"bf_read\" name=\"msg\">The object to read your custom data from.</arg>\n<arg type=\"vararg\" name=\"preArgs\"></arg>\n</callback>",
            "name": "callback",
            "type": "function"
          },
          {
            "default": "nil",
            "description": "Arguments that are passed to the callback function when the hook is called.",
            "name": "preArgs",
            "type": "vararg"
          }
        ],
        "description": "<deprecated>You should be using <page>net</page> instead</deprecated>\n\nSets a hook for the specified to be called when a usermessage with the specified name arrives.\n\n<warning>Usermessages have a limit of only 256 bytes!</warning>",
        "name": "Hook",
        "parent": "usermessage",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/usermessage.lua",
          "lineEnd": 70,
          "lineStart": 63
        }
      },
      {
        "arguments": [
          {
            "description": "The message name.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The message.",
            "name": "msg",
            "type": "bf_read"
          }
        ],
        "description": "<internal></internal>\nCalled by the engine when a usermessage arrives, this method calls the hook function specified by <page>usermessage.Hook</page> if any.",
        "name": "IncomingMessage",
        "parent": "usermessage",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/usermessage.lua",
          "lineEnd": 87,
          "lineStart": 76
        }
      }
    ],
    "name": "usermessage"
  },
  {
    "description": "The utf8 library provides basic support for UTF-8 encoding. This library does not provide any support for Unicode other than the handling of the encoding. Any operation that needs the meaning of a character, such as character classification, is outside its scope.\n\nUnless stated otherwise, all functions that expect a byte position as a parameter assume that the given position is either the start of a byte sequence or one plus the length of the subject string. As in the string library, negative indices count from the end of the string.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Unicode code points to be converted in to a UTF-8 string.",
            "name": "codepoints",
            "type": "vararg"
          }
        ],
        "description": "Receives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.",
        "name": "char",
        "parent": "utf8",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "UTF-8 string generated from given arguments.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/modules/utf8.lua",
          "lineEnd": 144,
          "lineStart": 95
        }
      },
      {
        "description": "This is NOT a function, it's a <page text=\"pattern\">Patterns</page> (a string, not a function) which matches exactly one UTF-8 byte sequence, assuming that the subject is a valid UTF-8 string.",
        "name": "charpattern",
        "parent": "utf8",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "```\n\"[%z\\x01-\\x7F\\xC2-\\xF4][\\x80-\\xBF]*\"\n```",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The string that you will get the code(s) from.",
            "name": "string",
            "type": "string"
          },
          {
            "default": "1",
            "description": "The starting byte of the string to get the codepoint of.",
            "name": "startPos",
            "type": "number"
          },
          {
            "default": "1",
            "description": "The ending byte of the string to get the codepoint of.",
            "name": "endPos",
            "type": "number"
          }
        ],
        "description": "Returns the codepoints (as numbers) from all characters in the given string that start between byte position startPos and endPos. It raises an error if it meets any invalid byte sequence. This functions similarly to <page>string.byte</page>.",
        "name": "codepoint",
        "parent": "utf8",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The codepoint number(s).",
            "type": "vararg"
          }
        ],
        "source": {
          "file": "lua/includes/modules/utf8.lua",
          "lineEnd": 200,
          "lineStart": 175
        }
      },
      {
        "arguments": [
          {
            "description": "The string that you will get the codes from.",
            "name": "string",
            "type": "string"
          }
        ],
        "description": "Returns an iterator (like <page>string.gmatch</page>) which returns both the position and codepoint of each utf8 character in the string. It raises an error if it meets any invalid byte sequence.",
        "name": "codes",
        "parent": "utf8",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The iterator (to be used in a for loop).",
            "type": "function"
          }
        ],
        "source": {
          "file": "lua/includes/modules/utf8.lua",
          "lineEnd": 173,
          "lineStart": 146
        }
      },
      {
        "arguments": [
          {
            "description": "The string that will become a valid UTF-8 string.",
            "name": "string",
            "type": "string"
          }
        ],
        "description": "Forces a string to contain only valid UTF-8 data. Invalid sequences are replaced with U+FFFD (the Unicode replacement character).\n\nThis is a lazy way for users to ensure a string contains only valid UTF-8 data.",
        "name": "force",
        "parent": "utf8",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The UTF-8 string.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/modules/utf8.lua",
          "lineEnd": 338,
          "lineStart": 303
        }
      },
      {
        "arguments": [
          {
            "description": "The string that you will be searching with the supplied index.",
            "name": "str",
            "type": "string"
          },
          {
            "description": "The index's value of the string to be returned.",
            "name": "index",
            "type": "number"
          }
        ],
        "description": "A UTF-8 compatible version of <page>string.GetChar</page>.",
        "name": "GetChar",
        "parent": "utf8",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "str",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/modules/utf8.lua",
          "lineEnd": 362,
          "lineStart": 352
        }
      },
      {
        "arguments": [
          {
            "description": "The string to calculate the length of.",
            "name": "string",
            "type": "string"
          },
          {
            "default": "1",
            "description": "The starting position to get the length from.",
            "name": "startPos",
            "type": "number"
          },
          {
            "default": "-1",
            "description": "The ending position to get the length from.",
            "name": "endPos",
            "type": "number"
          }
        ],
        "description": "Returns the number of UTF-8 sequences in the given string between positions startPos and endPos (both inclusive). If it finds any invalid UTF-8 byte sequence, returns false as well as the position of the first invalid byte.",
        "name": "len",
        "parent": "utf8",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The number of UTF-8 characters in the string. If there are invalid bytes, this will be false.",
            "type": "number"
          },
          {
            "description": "The position of the first invalid byte. If there were no invalid bytes, this will be nil.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/utf8.lua",
          "lineEnd": 229,
          "lineStart": 202
        }
      },
      {
        "arguments": [
          {
            "description": "The string that you will get the byte position from.",
            "name": "string",
            "type": "string"
          },
          {
            "description": "The position to get the beginning byte position from.",
            "name": "n",
            "type": "number"
          },
          {
            "default": "1 when n>=0, -1 otherwise",
            "description": "The offset for n.",
            "name": "startPos",
            "type": "number"
          }
        ],
        "description": "Returns the byte-index of the n'th UTF-8-character after the given startPos (nil if none). startPos defaults to 1 when n is positive and -1 when n is negative. If n is zero, this function instead returns the byte-index of the UTF-8-character startPos lies within.",
        "name": "offset",
        "parent": "utf8",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Starting byte-index of the given position.",
            "type": "number"
          }
        ],
        "source": {
          "file": "lua/includes/modules/utf8.lua",
          "lineEnd": 301,
          "lineStart": 231
        }
      },
      {
        "arguments": [
          {
            "description": "The string you'll take a sub-string out of.",
            "name": "string",
            "type": "string"
          },
          {
            "description": "The position of the first character that will be included in the sub-string.",
            "name": "StartPos",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "The position of the last character to be included in the sub-string. It can be negative to count from the end.",
            "name": "EndPos",
            "type": "number"
          }
        ],
        "description": "A UTF-8 compatible version of <page>string.sub</page>.\n<warning>Avoid using this function on large strings every tick/frame, as it may cause lags.</warning>",
        "name": "sub",
        "parent": "utf8",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The substring.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/modules/utf8.lua",
          "lineEnd": 377,
          "lineStart": 364
        }
      }
    ],
    "name": "utf8"
  },
  {
    "description": "`util.worldpicker` is for picking an entity in the world while [GUI](gui) is open.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Adds the specified string to the string table.",
            "name": "str",
            "type": "string"
          }
        ],
        "description": "Adds the specified string to a string table, which will cache it and network it to all clients automatically.<br>\nWhenever you want to create a net message with <page>net.Start</page>, you must add the name of that message as a networked string via this function.\n\nIf the passed string already exists, nothing will happen and the ID of the existing item will be returned.\n\n<note>Each unique network name needs to be pooled once - do not put this function call into any other functions if you're using a constant string. Preferable place for this function is in a serverside lua file, or in a shared file with the <page>net.Receive</page> function.\n\nThe string table used for this function does not interfere with the engine string tables and has 4095 slots.\nThis limit is shared among all entities, SetNW* and SetGlobal* functions. If you exceed the limit, you cannot create new variables, and you will get the following warning:\n```lua\nWarning:  Table networkstring is full, can't add [key]\n```\n<warning>Existing variables will still get updated without the warning. You can check the limit by counting up until <page>util.NetworkIDToString</page> returns nil</warning></note>",
        "name": "AddNetworkString",
        "parent": "util",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "The id of the string that was added to the string table.<br>\nSame as calling <page>util.NetworkStringToID</page>.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "View angles",
            "name": "ViewAngles",
            "type": "Angle"
          },
          {
            "description": "View Field of View",
            "name": "ViewFOV",
            "type": "number"
          },
          {
            "description": "Mouse X position",
            "name": "x",
            "type": "number"
          },
          {
            "description": "Mouse Y position",
            "name": "y",
            "type": "number"
          },
          {
            "description": "Screen width",
            "name": "scrWidth",
            "type": "number"
          },
          {
            "description": "Screen height",
            "name": "scrHeight",
            "type": "number"
          }
        ],
        "description": "Function used to calculate aim vector from 2D screen position. It is used in SuperDOF calculate Distance.\n\nEssentially a generic version of <page>gui.ScreenToVector</page>.",
        "name": "AimVector",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Calculated aim vector",
            "type": "Vector"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "String to decode.",
            "name": "str",
            "type": "string"
          }
        ],
        "description": "Decodes the specified string from base64.",
        "name": "Base64Decode",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The raw bytes of the decoded string.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "String to encode.",
            "name": "str",
            "type": "string"
          },
          {
            "default": "false",
            "description": "`true` to disable RFC 2045 compliance (newline every 76th character)",
            "name": "inline",
            "type": "boolean"
          }
        ],
        "description": "Encodes the specified string to base64.\n\n<note>Unless disabled with the `inline` argument, the Base64 returned is compliant to the RFC 2045 standard. **This means it will have a line break after every 76th character.**</note>",
        "name": "Base64Encode",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Base 64 encoded string.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The entity that caused the damage.",
            "name": "inflictor",
            "type": "Entity"
          },
          {
            "description": "The entity that attacked.",
            "name": "attacker",
            "type": "Entity"
          },
          {
            "description": "The center of the explosion",
            "name": "damageOrigin",
            "type": "Vector"
          },
          {
            "description": "The radius in which entities will be damaged.",
            "name": "damageRadius",
            "type": "number"
          },
          {
            "description": "The amount of damage to be applied.",
            "name": "damage",
            "type": "number"
          }
        ],
        "description": "Applies explosion damage to all entities in the specified radius. Performs block checking.",
        "name": "BlastDamage",
        "parent": "util",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The information about the damage",
            "name": "dmg",
            "type": "CTakeDamageInfo"
          },
          {
            "description": "Center of the spherical damage",
            "name": "damageOrigin",
            "type": "Vector"
          },
          {
            "description": "The radius in which entities will be damaged.",
            "name": "damageRadius",
            "type": "number"
          }
        ],
        "description": "Applies spherical damage based on damage info to all entities in the specified radius.",
        "name": "BlastDamageInfo",
        "parent": "util",
        "realms": [
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "String to compress.",
            "name": "str",
            "type": "string"
          }
        ],
        "description": "Compresses the given string using the [LZMA](https://en.wikipedia.org/wiki/LZMA) algorithm.\n\nUse with <page>net.WriteData</page> and <page>net.ReadData</page> for networking and  <page>util.Decompress</page> to decompress the data.\n\n<note>The output of this function will have the uncompressed size of the data prepended to it as an 8-byte little-endian integer. [Source](https://github.com/garrynewman/bootil/blob/beb4cec8ad29533965491b767b177dc549e62d23/src/Bootil/Utility/CompressionLZMA.cpp#L56-L63)\n\nYou may therefore experience issues using the output of this function **_outside of Garry's Mod_**. If you need to do this, you will need to manually strip the first 8 bytes from the compressed output, or use third-party tools such as [gmod-lzma](https://github.com/WilliamVenner/gmod-lzma-rs) to decompress the output instead.</note>",
        "name": "Compress",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The compressed string, or an empty string if the input string was zero length (\"\").",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The string to calculate the checksum of.",
            "name": "stringToChecksum",
            "type": "string"
          }
        ],
        "description": "Generates the [CRC Checksum](https://en.wikipedia.org/wiki/Cyclic_redundancy_check) of the specified string.\n\n<warning>\nThis is NOT a hashing function. It is a checksum, typically used for error detection/data corruption detection. It is possible for this function to generate \"collisions\", where two different strings will produce the same CRC. If you need a hashing function, use <page>util.SHA256</page>.\n</warning>",
        "name": "CRC",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The unsigned 32 bit checksum.",
            "type": "string"
          }
        ]
      },
      {
        "description": "Returns the current date formatted like '2012-10-31 18-00-00'",
        "name": "DateStamp",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "date",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/util.lua",
          "lineEnd": 106,
          "lineStart": 98
        }
      },
      {
        "arguments": [
          {
            "description": "The name of the decal to paint.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The start of the trace.",
            "name": "start",
            "type": "Vector"
          },
          {
            "description": "The end of the trace.",
            "name": "end",
            "type": "Vector"
          },
          {
            "default": "NULL",
            "description": "If set, the decal will not be able to be placed on given entity. Can also be a table of entities.",
            "name": "filter",
            "type": "Entity"
          }
        ],
        "description": "Performs a trace and paints a decal to the surface hit.",
        "name": "Decal",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the decal to paint. Can be retrieved with <page>util.DecalMaterial</page>.",
            "name": "material",
            "type": "IMaterial"
          },
          {
            "description": "The entity to apply the decal to",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "The position of the decal.",
            "name": "position",
            "type": "Vector"
          },
          {
            "description": "The direction of the decal.",
            "name": "normal",
            "type": "Vector"
          },
          {
            "description": "The color of the decal. Uses the <page>Color</page>.\n\nThis only works when used on a brush model and only if the decal material has set `$vertexcolor` to `1`.",
            "name": "color",
            "type": "table"
          },
          {
            "description": "The width scale of the decal.",
            "name": "w",
            "type": "number"
          },
          {
            "description": "The height scale of the decal.",
            "name": "h",
            "type": "number"
          }
        ],
        "description": "Performs a trace and paints a decal to the surface hit.\n\n<note>This function has trouble spanning across multiple brushes on the map.</note>",
        "name": "DecalEx",
        "parent": "util",
        "realms": [
          "client"
        ]
      },
      {
        "arguments": [
          {
            "description": "Name of the decal.",
            "name": "decalName",
            "type": "string"
          }
        ],
        "description": "Gets the full material path by the decal name. Used with <page>util.DecalEx</page>.\n\nIf decal specifies multiple materials, a random one will be chosen.",
        "name": "DecalMaterial",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Material path of the decal.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The compressed string to decompress.",
            "name": "compressedString",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "The maximum size of uncompressed data in bytes, if greater it fails.",
            "name": "maxSize",
            "type": "number"
          }
        ],
        "description": "Decompresses the given string using [LZMA](https://en.wikipedia.org/wiki/LZMA) algorithm. Used to decompress strings previously compressed with <page>util.Compress</page>.\n\n<note>This function expects the compressed input data to have the uncompressed size of the data prepended to it as an 8-byte little-endian integer. [Source](https://github.com/garrynewman/bootil/blob/beb4cec8ad29533965491b767b177dc549e62d23/src/Bootil/Utility/CompressionLZMA.cpp#L101)\n\nIf your compressed input data was compressed by <page>util.Compress</page>, you don't need to worry about this - the uncompressed size of the data is already prepended to its output.\n\nHowever, if your compressed data was produced using standard tools **_outside of Garry's Mod_**, you will need to manually prepend the length of the uncompressed data to its compressed form as an 8-byte little endian integer.</note>",
        "name": "Decompress",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The original, decompressed string or `nil` on failure or invalid input. Also returns empty string if the input string was zero length (\"\").",
            "type": "string|nil"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Start of the line.",
            "name": "lineStart",
            "type": "Vector"
          },
          {
            "description": "End of the line.",
            "name": "lineEnd",
            "type": "Vector"
          },
          {
            "description": "The position of the point.",
            "name": "pointPos",
            "type": "Vector"
          }
        ],
        "description": "Gets the distance between a line and a point in 3d space.",
        "name": "DistanceToLine",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Distance from line.",
            "type": "number"
          },
          {
            "description": "Nearest point on line.",
            "type": "Vector"
          },
          {
            "description": "Distance along line from start.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the effect to create.\n\nYou can find a list of <page text=\"built-in engine effects here\">Default_Effects</page>. You can create your own, [example effects can be found here](https://github.com/Facepunch/garrysmod/tree/master/garrysmod/gamemodes/sandbox/entities/effects) and [here](https://github.com/Facepunch/garrysmod/tree/master/garrysmod/gamemodes/base/entities/effects).",
            "name": "effectName",
            "type": "string"
          },
          {
            "description": "The effect data describing the effect.",
            "name": "effectData",
            "type": "CEffectData"
          },
          {
            "default": "true",
            "description": "Whether Lua-defined effects should override engine-defined effects with the same name for this/single function call.",
            "name": "allowOverride",
            "type": "boolean"
          },
          {
            "default": "nil",
            "description": "Can either be a boolean to ignore the prediction filter or a <page>CRecipientFilter</page>.\n\nSet this to true if you wish to call this function in multiplayer from server.",
            "name": "ignorePredictionOrRecipientFilter",
            "type": "boolean|CRecipientFilter"
          }
        ],
        "description": "Creates an effect with the specified data.\n\nFor Orange Box `.pcf` particles, see <page>Global.ParticleEffect</page>, <page>Global.ParticleEffectAttach</page> and  <page>Global.CreateParticleSystem</page>.\n\n<note>\nWhen dispatching an effect from the server, some values may be clamped for networking optimizations. Visit the Set accessors on <page>CEffectData</page> to see which ones are affected.\n\nYou will need to couple this function with <page>Global.IsFirstTimePredicted</page> if you want to use it in a <page text=\"predicted hook\">Prediction</page>.\n</note>",
        "name": "Effect",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "String to filter.",
            "name": "str",
            "type": "string"
          },
          {
            "default": "TEXT_FILTER_UNKNOWN",
            "description": "Filtering context. See <page>Enums/TEXT_FILTER</page>.",
            "name": "context",
            "type": "number"
          },
          {
            "default": "nil",
            "description": "Used to determine if the text should be filtered according to local user's Steam chat filtering settings.",
            "name": "player",
            "type": "Player"
          }
        ],
        "description": "Filters given text using Steam's filtering system. The function will obey local client's Steam settings for chat filtering:\n\n<note>In some cases, especially in a chatbox, messages from some players may return an empty string if the context argument used for filtering is `TEXT_FILTER_CHAT` and [if the local player has blocked the sender of the message on Steam](https://github.com/Facepunch/garrysmod-issues/issues/5161#issuecomment-1035153941).</note>\n\n<upload src=\"70c/8d9e680b626348b.png\" size=\"50426\" name=\"image.png\">\n</upload>",
        "name": "FilterText",
        "parent": "util",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The filtered text based on given settings.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The **full** path to a file.",
            "name": "fullPath",
            "type": "string"
          },
          {
            "default": "MOD",
            "description": "The path to look for the files and directories in. See <page text=\"this list\">File_Search_Paths</page> for a list of valid paths.",
            "name": "fsPath",
            "type": "string"
          }
        ],
        "description": "Converts the full path of the given file to a relative path.\nYou can use <page>util.RelativePathToFull_Menu</page> to convert the relative path back to the full path.",
        "name": "FullPathToRelative_Menu",
        "parent": "util",
        "realms": [
          "menu"
        ],
        "returnValues": [
          {
            "description": "The relative path to the given file.",
            "name": "relativePath",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of an activity, as defined in the model's `.qc` at compile time.",
            "name": "",
            "type": "string"
          }
        ],
        "description": "Returns the ID of a custom model activity. This is useful for models that define custom ones.\n\nSee <page>util.GetActivityNameByID</page> for a function that does the opposite.",
        "name": "GetActivityIDByName",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The ID of the activity. See also <page>Enums/ACT</page>.",
            "name": "id",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of an activity from some hook. See also <page>Enums/ACT</page>.",
            "name": "id",
            "type": "number"
          }
        ],
        "description": "Returns a name for given activity ID. This is useful for models that define custom activities.\n\nSee <page>util.GetActivityIDByName</page> for a function that does the opposite.",
        "name": "GetActivityNameByID",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The associated name with given activity ID.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of an model animation event, as defined in the model's `.qc` at compile time.",
            "name": "",
            "type": "string"
          }
        ],
        "description": "Returns the ID of a custom model animation event. This is useful for models that define custom animation events.\n\nSee <page>util.GetAnimEventNameByID</page> for a function that does the opposite.",
        "name": "GetAnimEventIDByName",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The ID of an animation event, typically for usage with <page>ENTITY:HandleAnimEvent</page>.",
            "name": "id",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The ID of an animation event, typically from <page>ENTITY:HandleAnimEvent</page>.",
            "name": "id",
            "type": "number"
          }
        ],
        "description": "Returns a name for given automatically generated numerical animation event ID. This is useful for models that define custom animation events.\n\nSee <page>util.GetAnimEventIDByName</page> for a function that does the opposite.",
        "name": "GetAnimEventNameByID",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The associated name with given event ID.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The model path to retrieve information about.",
            "name": "mdl",
            "type": "string"
          }
        ],
        "description": "Returns a table containing the info about the model. The model will be loaded and cached if it was not previously.\n\n<note>This function will silently fail if used on models with following strings in them:\n* _shared\n* _anims\n* _gestures\n* _anim\n* _postures\n* _gst\n* _pst\n* _shd\n* _ss\n* _anm\n* _include</note>",
        "name": "GetModelInfo",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The model info. See <page>Structures/ModelInfo</page> for details.",
            "type": "table{ModelInfo}"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The full path to the model to get the visual meshes of.",
            "name": "model",
            "type": "string"
          },
          {
            "default": "0",
            "description": "Which of the model's Level of Detail (LOD) models to retrieve.\n\n`0` is the best quality with higher numbers progressively lowering the quality.",
            "name": "lod",
            "type": "number"
          },
          {
            "default": "0",
            "description": "The combination of bodygroups to retrieve meshes for.\n\nFor more information, see <page>Entity:SetBodyGroups</page>",
            "name": "bodygroupMask",
            "type": "number"
          }
        ],
        "description": "Retrieves vertex, triangle, and bone data for the visual meshes of a given model.\n\n<note>\nThis does not work on brush models (Models with names in the format `*number`)\n</note>",
        "name": "GetModelMeshes",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A sequential table of <page text=\"ModelMeshData Structures\">Structures/ModelMeshData</page>\n\nEach index in this table corresponds to a mesh within the model passed as an argument to this function.",
            "name": "modelMeshes",
            "type": "table"
          },
          {
            "description": "A sequential table of <page text=\"BoneBindPose Structures\">Structures/BoneBindPose</page>\n\nThis tables indices are bone IDs for the <page>Structures/BoneBindPose</page> stored at each index.",
            "name": "modelBindPoses",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "SteamID of the player, in the `STEAM_0:0:0` format. See <page>Player:SteamID</page>.",
            "name": "steamID",
            "type": "string"
          },
          {
            "description": "Variable name to get the value of",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The default value, in case there's nothing stored",
            "name": "default",
            "type": "string"
          }
        ],
        "description": "Gets persistent data of an offline player using their SteamID.\n\nSee also <page>Player:GetPData</page> for a more convenient version of this function for online players, <page>util.RemovePData</page> and\n<page>util.SetPData</page> for the other accompanying functions.\n\n<note>This function internally uses <page>util.SteamIDTo64</page>, it previously utilized <page>Player:UniqueID</page> which can cause collisions (two or more players sharing the same PData entry). This function now only uses the old method as a fallback if the name isn't found.</note>",
        "name": "GetPData",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The stored value",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/util.lua",
          "lineEnd": 353,
          "lineStart": 333
        }
      },
      {
        "description": "Creates a new PixVis handle. See <page>util.PixelVisible</page>.",
        "name": "GetPixelVisibleHandle",
        "parent": "util",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "PixVis",
            "type": "pixelvis_handle_t"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The player the trace should be based on",
            "name": "ply",
            "type": "Player"
          },
          {
            "default": "ply:GetAimVector()",
            "description": "The direction of the trace. By default falls back to the direction the player is looking in.",
            "name": "dir",
            "type": "Vector"
          }
        ],
        "description": "Utility function to quickly generate a trace table that starts at the players view position, and ends `32768` units along a specified direction.\n\nFor usage with <page>util.TraceLine</page> and similar functions.",
        "name": "GetPlayerTrace",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The trace data. See <page>Structures/Trace</page>",
            "type": "table{Trace}"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/util.lua",
          "lineEnd": 49,
          "lineStart": 32
        }
      },
      {
        "description": "Gets information about the sun position and obstruction or nil if there is no sun.",
        "name": "GetSunInfo",
        "parent": "util",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "The sun info. See <page>Structures/SunInfo</page>",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Surface property ID. You can get it from <page>Structures/TraceResult</page> or using <page>util.GetSurfaceIndex</page>.",
            "name": "id",
            "type": "number"
          }
        ],
        "description": "Returns data of a [surface property](https://developer.valvesoftware.com/wiki/Material_surface_properties) at given ID. New surface properties can be added via <page>physenv.AddSurfaceData</page>.",
        "name": "GetSurfaceData",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The data or no value if there is no valid surface property at given index.",
            "type": "table{SurfacePropertyData}"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the surface.",
            "name": "surfaceName",
            "type": "string"
          }
        ],
        "description": "Returns the matching surface property index for the given surface property name.\n\nSee also <page>util.GetSurfaceData</page> and <page>util.GetSurfacePropName</page> for opposite function.",
        "name": "GetSurfaceIndex",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The surface property index, or -1 if name doesn't correspond to a valid surface property.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Surface property ID. You can get it from <page>Structures/TraceResult</page>.",
            "name": "id",
            "type": "number"
          }
        ],
        "description": "Returns the name of a surface property at given ID.\n\nSee also <page>util.GetSurfaceData</page> and <page>util.GetSurfaceIndex</page> for opposite function.",
        "name": "GetSurfacePropName",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The name or an empty string if there is no valid surface property at given index.",
            "type": "string"
          }
        ]
      },
      {
        "description": "Returns a table of all SteamIDs that have a usergroup.\n\n<note>This returns the original usergroups table, changes done to this table are not retroactive and will only affect newly connected users</note>\n\n<note>This returns only groups that are registered in the **settings/users.txt** file of your server.\n\nIn order to get the usergroup of a connected player, please use <page>Player:GetUserGroup</page> instead.</note>",
        "name": "GetUserGroups",
        "parent": "util",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of users where the key is the SteamID of the user and the value is a table with 2 fields:\n* <page>string</page> name - Player Steam name\n* <page>string</page> group - Player usergroup name",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/player_auth.lua",
          "lineEnd": 103,
          "lineStart": 99
        }
      },
      {
        "arguments": [
          {
            "description": "Origin or start position of the ray.",
            "name": "rayStart",
            "type": "Vector"
          },
          {
            "description": "The ray vector itself, the ray end point relative to the start point. Can be implemented as `direction * distance`\n\nNote that in this implementation, the ray is not infinite - it's only a segment.",
            "name": "rayDelta",
            "type": "Vector"
          },
          {
            "description": "The center of the box.",
            "name": "boxOrigin",
            "type": "Vector"
          },
          {
            "description": "The angle of the box.",
            "name": "boxAngles",
            "type": "Angle"
          },
          {
            "description": "The min position of the box.",
            "name": "boxMins",
            "type": "Vector"
          },
          {
            "description": "The max position of the box.",
            "name": "boxMaxs",
            "type": "Vector"
          }
        ],
        "description": "Performs a Ray-OBB (Orientated Bounding Box) intersection and returns position, normal and the fraction if there was an intersection.",
        "name": "IntersectRayWithOBB",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Hit position, nil if not hit.",
            "type": "Vector"
          },
          {
            "description": "Normal/direction vector, nil if not hit.",
            "type": "Vector"
          },
          {
            "description": "Fraction of trace used, nil if not hit.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Origin/start position of the ray.",
            "name": "rayOrigin",
            "type": "Vector"
          },
          {
            "description": "The direction of the ray.",
            "name": "rayDirection",
            "type": "Vector"
          },
          {
            "description": "Any position of the plane.",
            "name": "planePosition",
            "type": "Vector"
          },
          {
            "description": "The normal vector of the plane.",
            "name": "planeNormal",
            "type": "Vector"
          }
        ],
        "description": "Performs a [ray-plane intersection](https://en.wikipedia.org/wiki/Line%E2%80%93plane_intersection) and returns the hit position or nil.",
        "name": "IntersectRayWithPlane",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The position of intersection, nil if not hit.",
            "type": "Vector"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Origin/start position of the ray.",
            "name": "rayOrigin",
            "type": "Vector"
          },
          {
            "description": "The end position of the ray relative to the start position. Equivalent of `direction * distance`.",
            "name": "rayDelta",
            "type": "Vector"
          },
          {
            "description": "Any position of the sphere.",
            "name": "spherePosition",
            "type": "Vector"
          },
          {
            "description": "The radius of the sphere.",
            "name": "sphereRadius",
            "type": "number"
          }
        ],
        "description": "Performs a ray-sphere intersection and returns the intersection positions or nil.",
        "name": "IntersectRayWithSphere",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The first intersection position along the ray, or `nil` if there is no intersection.",
            "type": "number"
          },
          {
            "description": "The second intersection position along the ray, or `nil` if there is no intersection.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Name of the binary module, exactly the same as you would enter it as the argument to <page>Global.require</page>.",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Returns whether a binary module is installed and is resolvable by <page>Global.require</page>.",
        "name": "IsBinaryModuleInstalled",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether the binary module is installed and <page>Global.require</page> can resolve it.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/util.lua",
          "lineEnd": 418,
          "lineStart": 394
        }
      },
      {
        "arguments": [
          {
            "description": "The minimum extents of the Axis-Aligned box.",
            "name": "boxMin",
            "type": "Vector"
          },
          {
            "description": "The maximum extents of the Axis-Aligned box.",
            "name": "boxMax",
            "type": "Vector"
          },
          {
            "description": "Any position of the sphere.",
            "name": "shpere2Position",
            "type": "Vector"
          },
          {
            "description": "The radius of the sphere.",
            "name": "sphere2Radius",
            "type": "number"
          }
        ],
        "description": "Performs a box-sphere intersection and returns whether there was an intersection or not.",
        "name": "IsBoxIntersectingSphere",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "`true` if there is an intersection, `false` otherwise.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Position to check.",
            "name": "position",
            "type": "Vector"
          }
        ],
        "description": "Checks if a certain position is within the world bounds.",
        "name": "IsInWorld",
        "parent": "util",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether the vector is in world.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Name/Path of the model to check.",
            "name": "modelName",
            "type": "string"
          }
        ],
        "description": "Checks if the model is loaded in the game.",
        "name": "IsModelLoaded",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns true if the model is loaded in the game; otherwise false.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The center of the first box.",
            "name": "box1Origin",
            "type": "Vector"
          },
          {
            "description": "The angles of the first box.",
            "name": "box1Angles",
            "type": "Angle"
          },
          {
            "description": "The min position of the first box.",
            "name": "box1Mins",
            "type": "Vector"
          },
          {
            "description": "The max position of the first box.",
            "name": "box1Maxs",
            "type": "Vector"
          },
          {
            "description": "The center of the second box.",
            "name": "box2Origin",
            "type": "Vector"
          },
          {
            "description": "The angles of the second box.",
            "name": "box2Angles",
            "type": "Angle"
          },
          {
            "description": "The min position of the second box.",
            "name": "box2Mins",
            "type": "Vector"
          },
          {
            "description": "The max position of the second box.",
            "name": "box2Maxs",
            "type": "Vector"
          },
          {
            "description": "Tolerance for error. Leave at 0 if unsure.",
            "name": "tolerance",
            "type": "number"
          }
        ],
        "description": "Performs OBB on OBB intersection test.",
        "name": "IsOBBIntersectingOBB",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether there is an intersection.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The position of the point to test.",
            "name": "point",
            "type": "Vector"
          },
          {
            "description": "The position of the cone tip.",
            "name": "coneOrigin",
            "type": "Vector"
          },
          {
            "description": "The direction of the cone.",
            "name": "coneAxis",
            "type": "Vector"
          },
          {
            "description": "The sine of the cone's angle.",
            "name": "coneSine",
            "type": "number"
          },
          {
            "description": "Length of the cone's axis.",
            "name": "coneLength",
            "type": "number"
          }
        ],
        "description": "Returns whether a point is within a cone or not.",
        "name": "IsPointInCone",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "`true` if the point is within the cone, `false` otherwise.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Start position of the first ray.",
            "name": "ray1Start",
            "type": "Vector"
          },
          {
            "description": "End position of the first ray.",
            "name": "ray1End",
            "type": "Vector"
          },
          {
            "description": "Start position of the second ray.",
            "name": "ray2Start",
            "type": "Vector"
          },
          {
            "description": "End position of the second ray.",
            "name": "ray2End",
            "type": "Vector"
          }
        ],
        "description": "Performs a ray-ray intersection and returns whether there was an intersection or not.",
        "name": "IsRayIntersectingRay",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "`true` if there is an intersection, `false` otherwise.",
            "type": "boolean"
          },
          {
            "description": "Distance from start of ray 1 to the intersection, if there was one.",
            "type": "number"
          },
          {
            "description": "Distance from start of ray 2 to the intersection, if there was one.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The position to check the skybox visibility from.",
            "name": "position",
            "type": "Vector"
          }
        ],
        "description": "Check whether the skybox is visible from the point specified.\n\n<note>This will always return true in fullbright maps.</note>",
        "name": "IsSkyboxVisibleFromPoint",
        "parent": "util",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Whether the skybox is visible from the position.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The center position of the sphere to test.",
            "name": "sphereCenter",
            "type": "Vector"
          },
          {
            "description": "The radius of the sphere to test.",
            "name": "sphereRadius",
            "type": "number"
          },
          {
            "description": "The position of the cone tip.",
            "name": "coneOrigin",
            "type": "Vector"
          },
          {
            "description": "The direction of the cone.",
            "name": "coneAxis",
            "type": "Vector"
          },
          {
            "description": "The <page test=\"sine\">math.sin</page> of the cone's angle.",
            "name": "coneSine",
            "type": "number"
          },
          {
            "description": "The <page test=\"cosine\">math.cos</page> of the cone's angle.",
            "name": "coneCosine",
            "type": "number"
          }
        ],
        "description": "Returns whether a sphere is intersecting a cone or not.",
        "name": "IsSphereIntersectingCone",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "`true` if the sphere intersects the cone, `false` otherwise.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Any position of the first sphere.",
            "name": "sphere1Position",
            "type": "Vector"
          },
          {
            "description": "The radius of the first sphere.",
            "name": "sphere1Radius",
            "type": "number"
          },
          {
            "description": "Any position of the second sphere.",
            "name": "sphere2Position",
            "type": "Vector"
          },
          {
            "description": "The radius of the second sphere.",
            "name": "sphere2Radius",
            "type": "number"
          }
        ],
        "description": "Performs a sphere-sphere intersection and returns whether there was an intersection or not.",
        "name": "IsSphereIntersectingSphere",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "`true` if there is an intersection, `false` otherwise.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Name/Path of the model to check.",
            "name": "modelName",
            "type": "string"
          }
        ],
        "description": "Checks if the specified model is valid.\n\n\nA model is considered invalid in following cases:\n* Starts with a space or **maps**\n* Doesn't start with **models**\n* Contains any of the following:\n* `_gestures`\n* `_animations`\n* `_postures`\n* `_gst`\n* `_pst`\n* `_shd`\n* `_ss`\n* `_anm`\n* `.bsp`\n* `cs_fix`\n* If the model isn't precached on the server, AND if the model file doesn't exist on disk\n* If precache failed\n* Model is the error model\n\nRunning this function will also precache the model.",
        "name": "IsValidModel",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Whether the model is valid or not. Returns false clientside if the model is not precached by the server.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The entity",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "Number of the physics object to test",
            "name": "physobj",
            "type": "number"
          }
        ],
        "description": "Checks if given numbered physics object of given entity is valid or not. Most useful for ragdolls.",
        "name": "IsValidPhysicsObject",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "true is valid, false otherwise",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/util.lua",
          "lineEnd": 30,
          "lineStart": 9
        }
      },
      {
        "arguments": [
          {
            "description": "Name/Path of the model to check.",
            "name": "modelName",
            "type": "string"
          }
        ],
        "description": "Checks if the specified prop is valid.",
        "name": "IsValidProp",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns true if the specified prop is valid; otherwise false.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Name/Path of the ragdoll model to check.",
            "name": "ragdollName",
            "type": "string"
          }
        ],
        "description": "Checks if the specified model name points to a valid ragdoll.",
        "name": "IsValidRagdoll",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns true if the specified model name points to a valid ragdoll; otherwise false.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The JSON string to convert.",
            "name": "json",
            "type": "string"
          },
          {
            "default": "false",
            "description": "ignore the depth and breadth limits, **use at your own risk!**.\n<warning>If this is false, there is a limit of 15,000 keys total.</warning>",
            "name": "ignoreLimits",
            "type": "boolean"
          },
          {
            "default": "false",
            "description": "ignore string to number conversions for table keys.\n<warning>\nif this is false, keys are converted to numbers wherever possible. This means using <page>Player:SteamID64</page> as keys won't work.\n</warning>",
            "name": "ignoreConversions",
            "type": "boolean"
          }
        ],
        "description": "Converts a JSON string to a Lua table.\n\nSee <page>util.TableToJSON</page> for the opposite function.\n\n<bug issue=\"2407\">Colors will not have the color metatable.</bug>",
        "name": "JSONToTable",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The table containing converted information. Returns `nil` on failure.",
            "type": "table|nil"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The KeyValue string to convert.",
            "name": "keyValues",
            "type": "string"
          },
          {
            "default": "false",
            "description": "If set to true, will replace `\\t`, `\\n`, `\\\"` and `\\\\` in the input text with their escaped variants",
            "name": "usesEscapeSequences",
            "type": "boolean"
          },
          {
            "default": "false",
            "description": "Whether we should preserve key case (may fail) or not (always lowercase)",
            "name": "preserveKeyCase",
            "type": "boolean"
          }
        ],
        "description": "Converts a Valve KeyValue string (typically from <page>util.TableToKeyValues</page>) to a Lua table.\n\n<note>Due to how <page>table</page>s work in Lua, keys will not repeat within a table. See <page>util.KeyValuesToTablePreserveOrder</page> for alternative.</note>",
        "name": "KeyValuesToTable",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The converted table",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The key value string",
            "name": "keyvals",
            "type": "string"
          },
          {
            "default": "false",
            "description": "If set to true, will replace `\\t`, `\\n`, `\\\"` and `\\\\` in the input text with their escaped variants",
            "name": "usesEscapeSequences",
            "type": "boolean"
          },
          {
            "default": "false",
            "description": "Whether we should preserve key case (may fail) or not (always lowercase)",
            "name": "preserveKeyCase",
            "type": "boolean"
          }
        ],
        "description": "Similar to <page>util.KeyValuesToTable</page> but it also preserves order of keys.",
        "name": "KeyValuesToTablePreserveOrder",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The output table",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The entity lpos is local to",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "Coordinates local to the ent",
            "name": "lpos",
            "type": "Vector"
          },
          {
            "description": "The bonenumber of the ent lpos is local to",
            "name": "bonenum",
            "type": "number"
          }
        ],
        "description": "Returns a vector in world coordinates based on an entity and local coordinates",
        "name": "LocalToWorld",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "wpos",
            "type": "Vector"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/util.lua",
          "lineEnd": 95,
          "lineStart": 76
        }
      },
      {
        "arguments": [
          {
            "description": "The string to calculate the MD5 hash of.",
            "name": "stringToHash",
            "type": "string"
          }
        ],
        "description": "Generates the [MD5 hash](https://en.wikipedia.org/wiki/MD5) of the specified string.\n<warning>MD5 is considered cryptographically broken and is known to be vulnerable to a variety of attacks including duplicate return values. If security or duplicate returns is a concern, use <page>util.SHA256</page>.</warning>",
        "name": "MD5",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The MD5 hash of the string in hexadecimal form.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "ID to get the associated string from.",
            "name": "stringTableID",
            "type": "number"
          }
        ],
        "description": "Returns the networked string associated with the given ID from the string table.",
        "name": "NetworkIDToString",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The networked string, or nil if it wasn't found.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "String to get the associated networked ID from.",
            "name": "networkString",
            "type": "string"
          }
        ],
        "description": "Returns the networked ID associated with the given string from the string table.",
        "name": "NetworkStringToID",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The networked ID of the string, or 0 if it hasn't been networked with <page>util.AddNetworkString</page>.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The float to format.",
            "name": "float",
            "type": "number"
          }
        ],
        "description": "Formats a float by stripping off extra `0's` and `.'s`.",
        "name": "NiceFloat",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Formatted float.",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/util.lua",
          "lineEnd": 165,
          "lineStart": 147
        }
      },
      {
        "arguments": [
          {
            "description": "The name of the tracer effect.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The start position of the tracer.",
            "name": "startPos",
            "type": "Vector"
          },
          {
            "description": "The end position of the tracer.",
            "name": "endPos",
            "type": "Vector"
          },
          {
            "description": "Play the hit miss(whiz) sound.",
            "name": "doWhiz",
            "type": "boolean"
          }
        ],
        "description": "Creates a tracer effect with the given parameters.",
        "name": "ParticleTracer",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the tracer effect.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The start position of the tracer.",
            "name": "startPos",
            "type": "Vector"
          },
          {
            "description": "The end position of the tracer.",
            "name": "endPos",
            "type": "Vector"
          },
          {
            "description": "Play the hit miss(whiz) sound.",
            "name": "doWhiz",
            "type": "boolean"
          },
          {
            "description": "Entity index of the emitting entity.",
            "name": "entityIndex",
            "type": "number"
          },
          {
            "description": "Attachment index to be used as origin.",
            "name": "attachmentIndex",
            "type": "number"
          }
        ],
        "description": "Creates a tracer effect with the given parameters.",
        "name": "ParticleTracerEx",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The center of the visibility test.",
            "name": "position",
            "type": "Vector"
          },
          {
            "description": "The radius of the sphere to check for visibility.",
            "name": "radius",
            "type": "number"
          },
          {
            "description": "The PixVis handle created with <page>util.GetPixelVisibleHandle</page>.\n<warning>Don't use the same handle twice per tick or it will give unpredictable results.</warning>",
            "name": "PixVis",
            "type": "pixelvis_handle_t"
          }
        ],
        "description": "Returns the visibility of a sphere in the world.",
        "name": "PixelVisible",
        "parent": "util",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Visibility, ranges from `0-1`. `0` when none of the area is visible, `1` when all of it is visible.",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Position to get the contents sample from.",
            "name": "position",
            "type": "Vector"
          }
        ],
        "description": "Returns the contents of the position specified.\n<note>This function will sample only the world environments. It can be used to check if <page>Entity:GetPos</page> is underwater for example unlike <page>Entity:WaterLevel</page> which works for players only.</note>",
        "name": "PointContents",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Contents bitflag, see <page>Enums/CONTENTS</page>",
            "type": "number{CONTENTS}"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The model to precache.",
            "name": "modelName",
            "type": "string"
          }
        ],
        "description": "Precaches a model for later use. Model is cached after being loaded once.\n<warning>\nModelprecache is limited to 8192 unique models. When it reaches the limit the game will crash.\n</warning>",
        "name": "PrecacheModel",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The sound to precache.",
            "name": "soundName",
            "type": "string"
          }
        ],
        "description": "Precaches a sound for later use. Sound is cached after being loaded once.\n<note>Soundcache is limited to 16384 unique sounds on the server.</note>\n\n<bug>Broken on purpose because hitting the limit above causes the server to shutdown</bug>\n<bug>Ultimately does nothing on client, and only works with sound scripts, not direct paths.</bug>",
        "name": "PrecacheSound",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "The origin of the trace.",
            "name": "origin",
            "type": "Vector"
          },
          {
            "description": "The direction of the trace times the distance of the trace. This is added to the origin to determine the endpos.",
            "name": "dir",
            "type": "Vector"
          },
          {
            "default": "nil",
            "description": "Entity which should be ignored by the trace. Can also be a table of entities or a function - see <page>Structures/Trace</page>.",
            "name": "filter",
            "type": "Entity|table<Entity>|table<string>|function"
          }
        ],
        "description": "Performs a trace with the given origin, direction, and filter.\n<note>\nThis function will throw an error in the menu realm because it internally uses util.TraceLine which doesn't exist in the menu realm and thus error.\n</note>",
        "name": "QuickTrace",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Trace result. See <page>Structures/TraceResult</page>.",
            "type": "table{TraceResult}"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/util.lua",
          "lineEnd": 66,
          "lineStart": 52
        }
      },
      {
        "arguments": [
          {
            "description": "The relative path of a file, for example: `addons/[Name].gma`",
            "name": "filePath",
            "type": "string"
          },
          {
            "default": "MOD",
            "description": "The path to look for the files and directories in. See <page text=\"this list\">File_Search_Paths</page> for a list of valid paths.",
            "name": "mountPath",
            "type": "string"
          }
        ],
        "description": "Converts the relative path of a given file to the full path on disk.\nYou can use <page>util.FullPathToRelative_Menu</page> to convert the full path back to the relative path.",
        "name": "RelativePathToFull_Menu",
        "parent": "util",
        "realms": [
          "menu"
        ],
        "returnValues": [
          {
            "description": "The full path to the file.",
            "name": "fullpath",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The relative path to a file, such as `materials/myMaterial.vmt`.",
            "name": "filePath",
            "type": "string"
          }
        ],
        "description": "Returns which Workshop addon the given file belongs to.",
        "name": "RelativePathToGMA_Menu",
        "parent": "util",
        "realms": [
          "menu"
        ],
        "returnValues": [
          {
            "description": "The info about owner addon. Will return nil if the file doesn't belong to an addon. Table Structure:\n```lua\nAuthor\t=\t[Addon Author]\nFile\t=\t[Steam folder]\\workshop\\content\\4000\\[Addon ID]/[GMA Name].gma\nID\t=\t[Addon ID]\nTitle\t=\t[Addon Title]\n```",
            "name": "addonInfo",
            "type": "table"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The position at which to remove decals.",
            "name": "pos",
            "type": "Vector"
          },
          {
            "description": "Radius of the sphere to remove decals in.",
            "name": "distance",
            "type": "number"
          },
          {
            "default": "0",
            "description": "If set to above 0, only remove this many decals.",
            "name": "limit",
            "type": "number"
          },
          {
            "default": "false",
            "description": "Whether to remove map-spawned decals (`true`), or only gameplay-spawned decals\nsuch as bullet holes or anything placed by <page>util.Decal</page> and similar(`false`)",
            "name": "permanent",
            "type": "boolean"
          }
        ],
        "description": "Removes world decals at given position, in given radius. Does not remove decals on models!",
        "name": "RemoveDecalsAt",
        "parent": "util",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "How many decals were removed.",
            "name": "removed",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "SteamID of the player to remove data of, in the `STEAM_0:0:0` format. See <page>Player:SteamID</page>.",
            "name": "steamID",
            "type": "string"
          },
          {
            "description": "Variable name to remove",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Removes persistent data of an offline player using their SteamID.\n\nSee also <page>Player:RemovePData</page> for a more convenient version of this function for online players, <page>util.SetPData</page> and\n<page>util.GetPData</page> for the other accompanying functions.\n\n<note>This function internally uses <page>util.SteamIDTo64</page>, it previously utilized <page>Player:UniqueID</page> which can cause collisions (two or more players sharing the same PData entry). This function now tries to remove both old and new entries.</note>",
        "name": "RemovePData",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/util.lua",
          "lineEnd": 380,
          "lineStart": 370
        }
      },
      {
        "arguments": [
          {
            "description": "The origin of the effect.\n\nUsed serverside only, to determine which clients the event should be networked to.",
            "name": "pos",
            "type": "Vector"
          },
          {
            "description": "The strength of the effect. How far away from its origin the camera will move while shaking.",
            "name": "amplitude",
            "type": "number"
          },
          {
            "description": "How many times per second to change the direction of the camera wobble. 40 is generally enough; values higher are hardly distinguishable.",
            "name": "frequency",
            "type": "number"
          },
          {
            "description": "The duration of the effect in seconds.",
            "name": "duration",
            "type": "number"
          },
          {
            "description": "The range from the origin within which views will be affected, in Hammer units.\n\nThis is used when networking the event to clients only.",
            "name": "radius",
            "type": "number"
          },
          {
            "default": "false",
            "description": "Whether players in the air should also be affected.\n\nUsed serverside only to determine which clients to send the event to.",
            "name": "airshake",
            "type": "boolean"
          },
          {
            "default": "nil",
            "description": "If set, will only network the screen shake event to players present in the filter.",
            "name": "filter",
            "type": "CRecipientFilter"
          }
        ],
        "description": "Makes the screen shake.\n\n<note>The screen shake effect is rendered by modifying the view origin on the client. If you override the view origin in <page>GM:CalcView</page> you may not be able to see the shake effect.</note>",
        "name": "ScreenShake",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ]
      },
      {
        "arguments": [
          {
            "description": "SteamID of the player, in the `STEAM_0:0:0` format. See <page>Player:SteamID</page>.",
            "name": "steamID",
            "type": "string"
          },
          {
            "description": "Variable name to store the value in.",
            "name": "name",
            "type": "string"
          },
          {
            "description": "The value to store.",
            "name": "value",
            "type": "any"
          }
        ],
        "description": "Sets persistent data for offline player using their SteamID.\n\nSee also <page>Player:SetPData</page> for a more convenient version of this function for online players, <page>util.RemovePData</page> and\n<page>util.GetPData</page> for the other accompanying functions.\n<note>This function internally uses <page>util.SteamIDTo64</page>, it previously utilized <page>Player:UniqueID</page> which could have caused collisions (two or more players sharing the same PData entry).</note>",
        "name": "SetPData",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/extensions/util.lua",
          "lineEnd": 364,
          "lineStart": 359
        }
      },
      {
        "arguments": [
          {
            "description": "The string to calculate the SHA-1 hash of.",
            "name": "stringToHash",
            "type": "string"
          }
        ],
        "description": "Generates the [SHA-1 hash](https://en.wikipedia.org/wiki/SHA-1) of the specified string.\n<warning>SHA-1 is considered cryptographically broken and is known to be vulnerable to a variety of attacks. If security is a concern, use <page>util.SHA256</page>.</warning>",
        "name": "SHA1",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The SHA-1 hash of the string in hexadecimal form.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The string to calculate the SHA-256 hash of.",
            "name": "stringToHash",
            "type": "string"
          }
        ],
        "description": "Generates the [SHA-256 hash](https://en.wikipedia.org/wiki/SHA-2) of the specified string. This is unique and will never return the same hash for a different string unlike <page>util.CRC</page> or <page>util.MD5</page> which are both vulnerable to duplicate returns.",
        "name": "SHA256",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The SHA-256 hash of the string in hexadecimal form.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The seed for the random value",
            "name": "uniqueName",
            "type": "string"
          },
          {
            "description": "The minimum value of the random range",
            "name": "min",
            "type": "number"
          },
          {
            "description": "The maximum value of the random range",
            "name": "max",
            "type": "number"
          },
          {
            "default": "0",
            "description": "The additional seed",
            "name": "additionalSeed",
            "type": "number"
          }
        ],
        "description": "Generates a random float value that should be the same on client and server.\n\n<note>This function is best used in a <page text=\"predicted hook\">prediction</page></note>",
        "name": "SharedRandom",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The random float value",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Entity to attach trail to",
            "name": "ent",
            "type": "Entity"
          },
          {
            "description": "Attachment ID of the entities model to attach trail to. If you are not sure, set this to 0",
            "name": "attachmentID",
            "type": "number"
          },
          {
            "description": "Color of the trail, use <page>Global.Color</page>",
            "name": "color",
            "type": "table"
          },
          {
            "description": "Should the trail be additive or not",
            "name": "additive",
            "type": "boolean"
          },
          {
            "description": "Start width of the trail",
            "name": "startWidth",
            "type": "number"
          },
          {
            "description": "End width of the trail",
            "name": "endWidth",
            "type": "number"
          },
          {
            "description": "How long it takes to transition from startWidth to endWidth",
            "name": "lifetime",
            "type": "number"
          },
          {
            "description": "The resolution of trails texture. A good value can be calculated using this formula: 1 / ( startWidth + endWidth ) * 0.5",
            "name": "textureRes",
            "type": "number"
          },
          {
            "description": "Path to the texture to use as a trail.",
            "name": "texture",
            "type": "string"
          }
        ],
        "description": "Adds a trail to the specified entity.",
        "name": "SpriteTrail",
        "parent": "util",
        "realms": [
          "server"
        ],
        "returnValues": [
          {
            "description": "Entity of created trail ([env_spritetrail](https://developer.valvesoftware.com/wiki/Env_spritetrail))",
            "type": "Entity"
          }
        ]
      },
      {
        "description": "Returns a new <page>Stack</page> object.",
        "name": "Stack",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A brand new stack object.",
            "type": "Stack"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/util.lua",
          "lineEnd": 326,
          "lineStart": 324
        }
      },
      {
        "arguments": [
          {
            "description": "The 64 bit Steam ID",
            "name": "id",
            "type": "string"
          }
        ],
        "description": "Given a <page text=\"64bit SteamID\">Player:SteamID64</page> will return a <page text=\"STEAM_0:0:0\">Player:SteamID</page> style Steam ID.\n\n<note>This operation induces data loss. Not all fields of a [64bit SteamID](https://developer.valvesoftware.com/wiki/SteamID) can be represented using the `STEAM_0:0:0` format, specifically the \"account type\" and \"account instance\" fields.</note>",
        "name": "SteamIDFrom64",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "String <page text=\"STEAM_0:0:0\">Player:SteamID</page> style Steam ID representation.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The <page text=\"STEAM_0:0:0\">Player:SteamID</page> format SteamID",
            "name": "id",
            "type": "string"
          }
        ],
        "description": "Converts a <page text=\"STEAM_0:0:0\">Player:SteamID</page> style SteamID to a <page text=\"64bit SteamID\">Player:SteamID64</page>.",
        "name": "SteamIDTo64",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "<page text=\"64bit SteamID\">Player:SteamID64</page> or 0 (as a string) on fail",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The string to convert",
            "name": "str",
            "type": "string"
          },
          {
            "description": "The type to attempt to convert the string to. This can be `vector`, `angle`, `float`, `int`, `bool`, or `string` (case insensitive).",
            "name": "typename",
            "type": "string"
          }
        ],
        "description": "Converts a string to the specified type.\n\nThis can be useful when dealing with ConVars.",
        "name": "StringToType",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The result of the conversion, or nil if a bad type is specified.",
            "type": "any"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/util.lua",
          "lineEnd": 125,
          "lineStart": 108
        }
      },
      {
        "arguments": [
          {
            "description": "Table to convert.",
            "name": "table",
            "type": "table"
          },
          {
            "default": "false",
            "description": "Format and indent the JSON.",
            "name": "prettyPrint",
            "type": "boolean"
          }
        ],
        "description": "Converts a table to a JSON string.\n\nSee <page>util.JSONToTable</page> for the opposite function.\n\n<warning>All keys are strings in the JSON format, so all keys of other types will be converted to strings!\nThis can lead to loss of data where a number key could be converted into an already existing string key! (for example in a table like this: `{[\"5\"] = \"ok\", [5] = \"BBB\"}`)\n</warning>",
        "name": "TableToJSON",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A JSON formatted string containing the serialized data",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The table to convert.",
            "name": "table",
            "type": "table"
          },
          {
            "default": "TableToKeyValues",
            "description": "The root key name for the output KV table.",
            "name": "rootKey",
            "type": "string"
          }
        ],
        "description": "Converts the given table into a Valve key value string.\n\nUse <page>util.KeyValuesToTable</page> to perform the opposite transformation.\n\nYou should consider using <page>util.TableToJSON</page> instead.",
        "name": "TableToKeyValues",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The output.",
            "type": "string"
          }
        ]
      },
      {
        "arguments": [
          {
            "default": "0",
            "description": "How long you want the timer to be. `Elapsed()` will return true only after this much time has passed.",
            "name": "duration",
            "type": "number"
          }
        ],
        "description": "Creates a timer object. The returned timer will be already started with given duration.",
        "name": "Timer",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A timer object. It has the following methods:\n* `Reset()` - Resets and stops the timer.\n* `Start( duration = 0 )` - (Re)starts the timer with given duration\n* `Started()` - Returns `true` if the timer has been started. It will continue to return true even after the duration has passed.\n* `Elapsed()` - Returns `true` if the timer duration has elapsed since its creation or the call to `Start()`\n* `GetElaspedTime()` - Returns amount of time since timer started.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/util.lua",
          "lineEnd": 226,
          "lineStart": 217
        }
      },
      {
        "description": "Returns the time since this function has been last called",
        "name": "TimerCycle",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Time since this function has been last called in ms",
            "type": "number"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "A string or a number to convert.",
            "name": "input",
            "type": "any"
          }
        ],
        "description": "<deprecated>You should use <page>Global.tobool</page> instead.</deprecated>\n\nConverts string or a number to a bool, if possible. Alias of <page>Global.tobool</page>.",
        "name": "tobool",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "False if the input is equal to the string or boolean \"false\", if the input is equal to the string or number \"0\", or if the input is nil. Returns true otherwise.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/util.lua",
          "lineEnd": 73,
          "lineStart": 73
        }
      },
      {
        "arguments": [
          {
            "description": "Trace data. See <page>Structures/Trace</page>",
            "name": "tracedata",
            "type": "table{Trace}"
          },
          {
            "description": "The entity to use",
            "name": "ent",
            "type": "Entity"
          }
        ],
        "description": "Runs a trace using the entity's collisionmodel between two points. This does not take the entity's angles into account and will trace its unrotated collisionmodel.",
        "name": "TraceEntity",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Trace result. See <page>Structures/TraceResult</page>",
            "type": "table{TraceResult}"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Trace data. See <page>Structures/HullTrace</page>",
            "name": "tracedata",
            "type": "table{HullTrace}"
          },
          {
            "description": "The entity to use mins/maxs of for the hull trace.",
            "name": "ent",
            "type": "Entity"
          }
        ],
        "description": "Identical to <page>util.TraceHull</page> but uses an entity's [Axis-Aligned Bounding Box (AABB)](https://en.wikipedia.org/wiki/Minimum_bounding_box) for `mins`/`maxs` inputs. (These 2 keys will be ignored in the provided table)",
        "name": "TraceEntityHull",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Trace result. See <page>Structures/TraceResult</page>",
            "type": "table{TraceResult}"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The trace data to use. See <page>Structures/HullTrace</page>",
            "name": "TraceData",
            "type": "table{HullTrace}"
          }
        ],
        "description": "Performs an AABB hull (axis-aligned bounding box, aka not rotated) trace with the given trace data.\n\nThis trace type cannot hit hitboxes.\n\nSee <page>util.TraceLine</page> for a simple line (\"ray\") trace.\n\n<note>This function may not always give desired results clientside due to certain physics mechanisms not existing on the client. Use it serverside for accurate results.</note>",
        "name": "TraceHull",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Trace result. See <page>Structures/TraceResult</page>",
            "type": "table{TraceResult}"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "A table of data that configures the trace. See <page>Structures/Trace</page> for available options.",
            "name": "traceConfig",
            "type": "table{Trace}"
          }
        ],
        "description": "Performs an infinitely thin, invisible ray trace (or \"trace\") in a line based on the input and returns a table that contains information about what, if anything, the trace line hit or intersected.\n\nTraces intersect with the physics meshes of <page text=\"solid\">enums/SOLID</page>, <page text=\"server-side\">States</page>, <page text=\"entities\">Entity</page> (including the <page text=\"game world\">game.GetWorld</page>) but cannot detect client-side only entities unless <page text=\"hitclientonly\">Structures/Trace#hitclientonly</page> is set to true.\n\nSee <page>ents.FindAlongRay</page> if you wish for the trace to not stop on first intersection.\nSee <page>util.TraceHull</page> for a \"box\" type trace.\n\nTraces do not differentiate between the inside and the outside faces of physics meshes. Because of this, if a trace starts within a solid physics mesh it will hit the inside faces of the physics mesh and may return unexpected values as a result.\n\n\nYou can use `r_visualizetraces` set to `1` (requires `sv_cheats` set to `1`) to visualize traces in real time for debugging purposes.",
        "name": "TraceLine",
        "parent": "util",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "A table of information detailing where and what the trace line intersected, or `nil` if the trace is being done before the <page>GM:InitPostEntity</page> hook.\n\nFor the table's format and available options see the <page>Structures/TraceResult</page> page.",
            "type": "table{TraceResult}"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "What to convert",
            "name": "input",
            "type": "any"
          }
        ],
        "description": "Converts a type to a (nice, but still parsable) string",
        "name": "TypeToString",
        "parent": "util",
        "realms": [
          "menu",
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Converted string",
            "type": "string"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/util.lua",
          "lineEnd": 144,
          "lineStart": 127
        }
      },
      {
        "description": "Returns if the user is currently picking an entity.",
        "name": "worldpicker.Active",
        "parent": "util",
        "realms": [
          "client"
        ],
        "returnValues": [
          {
            "description": "Is world picking",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/util/worldpicker.lua",
          "lineStart": 37
        }
      },
      {
        "arguments": [
          {
            "description": "<page>Structures/TraceResult</page> from the mouse press",
            "name": "tr",
            "type": "table"
          }
        ],
        "description": "<internal></internal>\n\nFinishes the world picking. This is called when a user presses their mouse after calling <page>util.worldpicker.Start</page>.",
        "name": "worldpicker.Finish",
        "parent": "util",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/extensions/util/worldpicker.lua",
          "lineEnd": 35,
          "lineStart": 29
        }
      },
      {
        "arguments": [
          {
            "description": "Function to call after an entity choice has been made.\n\n<callback>\n<arg type=\"table\" name=\"tr\"><page text=\"TraceResult\">Structures/TraceResult</page> from the mouse press. `tr.Entity` will return the entity clicked</arg>\n</callback>",
            "name": "callback",
            "type": "function"
          }
        ],
        "description": "Starts picking an entity in the world. This will suppress the next mouse click, and instead use it as a direction in the trace sent to the callback.",
        "name": "worldpicker.Start",
        "parent": "util",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/extensions/util/worldpicker.lua",
          "lineEnd": 24,
          "lineStart": 18
        }
      }
    ],
    "name": "util"
  },
  {
    "description": "The **vgui** library allows you to script and create your own panels using **V**alve's **G**raphical **U**ser **I**nterface (VGUI) system.\n\nFor an alphabetically ordered list of VGUI panels, see <page>VGUI Element List</page>.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Classname of the panel to create.\n\nDefault panel classnames can be found on the <page>VGUI Element List</page>.\n\nNew panels can be registered via <page>vgui.Register</page>",
            "name": "classname",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "Panel to parent to.",
            "name": "parent",
            "type": "Panel"
          },
          {
            "default": "nil",
            "description": "Custom name of the created panel for scripting/debugging purposes. Can be retrieved with <page>Panel:GetName</page>.",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Creates a panel by the specified classname.\n<note>Custom VGUI elements are not loaded instantly. Use <page>GM:OnGamemodeLoaded</page> to create them on startup.</note>",
        "name": "Create",
        "parent": "vgui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The created panel, or `nil` if creation failed for whatever reason.",
            "type": "Panel"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/scriptedpanels.lua",
          "lineEnd": 52,
          "lineStart": 23
        }
      },
      {
        "arguments": [
          {
            "description": "Your PANEL table.",
            "name": "metatable",
            "type": "table"
          },
          {
            "default": "nil",
            "description": "Which panel to parent the newly created panel to.",
            "name": "parent",
            "type": "Panel"
          },
          {
            "default": "nil",
            "description": "Custom name of the created panel for scripting/debugging purposes. Can be retrieved with <page>Panel:GetName</page>.",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "Creates a panel from a table, used alongside <page>vgui.RegisterFile</page> and <page>vgui.RegisterTable</page> to efficiently define, register, and instantiate custom panels.",
        "name": "CreateFromTable",
        "parent": "vgui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The created panel, or `nil` if creation failed for whatever reason.",
            "type": "Panel"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/scriptedpanels.lua",
          "lineEnd": 72,
          "lineStart": 54
        }
      },
      {
        "arguments": [
          {
            "description": "Class of the panel to create",
            "name": "class",
            "type": "string"
          },
          {
            "default": "nil",
            "description": "If specified, parents created panel to given one",
            "name": "parent",
            "type": "Panel"
          },
          {
            "default": "nil",
            "description": "Name of the created panel",
            "name": "name",
            "type": "string"
          }
        ],
        "description": "<internal></internal> Creates an engine panel.",
        "name": "CreateX",
        "parent": "vgui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Created panel",
            "type": "Panel"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/scriptedpanels.lua",
          "lineEnd": 13,
          "lineStart": 13
        }
      },
      {
        "description": "Returns whenever the cursor is currently active and visible.",
        "name": "CursorVisible",
        "parent": "vgui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whether the cursor is visible or not.",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the panel to get test.",
            "name": "Panelname",
            "type": "string"
          }
        ],
        "description": "Returns true if Lua-defined panel exists by name. Uses <page>vgui.GetControlTable</page> internally.",
        "name": "Exists",
        "parent": "vgui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whether a panel with given name was registered yet or not.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/scriptedpanels.lua",
          "lineEnd": 21,
          "lineStart": 19
        }
      },
      {
        "arguments": [
          {
            "description": "The parent panel to check the currently focused one against. This doesn't need to be a direct parent (focused panel can be a child of a child and so on).",
            "name": "parent",
            "type": "Panel"
          }
        ],
        "description": "Returns whether the currently focused panel is a child of the given one.",
        "name": "FocusedHasParent",
        "parent": "vgui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "Whether or not the focused panel is a child of the passed one.",
            "type": "boolean"
          }
        ]
      },
      {
        "description": "Returns all Lua-created panels.\n\nUsed internally for <page>PANEL:PreAutoRefresh</page> and <page>PANEL:PostAutoRefresh</page>.",
        "name": "GetAll",
        "parent": "vgui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "List of all Lua created panels.",
            "type": "table<Panel>"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "The name of the panel to get the table of.",
            "name": "Panelname",
            "type": "string"
          }
        ],
        "description": "Returns the table of a Lua-defined panel by name. Does not return parent members of the table!",
        "name": "GetControlTable",
        "parent": "vgui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The `PANEL` table of the a Lua-defined panel with given name.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/scriptedpanels.lua",
          "lineEnd": 17,
          "lineStart": 15
        }
      },
      {
        "description": "Returns the panel the cursor is hovering above.\n\n<warning>This returns a cached value that is only updated after rendering and `before` the next VGUI Think/Layout pass.\n\nie. it lags one frame behind panel layout and is completely unhelpful for <page>PANEL:Paint</page> if your panels are moving around under the mouse a lot every frame.</warning>",
        "name": "GetHoveredPanel",
        "parent": "vgui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The panel that the user is currently hovering over with their cursor.",
            "type": "Panel"
          }
        ]
      },
      {
        "description": "Returns the panel which is currently receiving keyboard input.",
        "name": "GetKeyboardFocus",
        "parent": "vgui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The panel with keyboard focus",
            "type": "Panel"
          }
        ]
      },
      {
        "description": "Returns the global world panel which is the parent to all others, except for the HUD panel.\n\nSee also <page>Global.GetHUDPanel</page>.",
        "name": "GetWorldPanel",
        "parent": "vgui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The world panel",
            "type": "Panel"
          }
        ]
      },
      {
        "description": "Returns whenever the cursor is hovering the world panel.",
        "name": "IsHoveringWorld",
        "parent": "vgui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "isHoveringWorld",
            "type": "boolean"
          }
        ]
      },
      {
        "arguments": [
          {
            "description": "Classname of the panel to register. This is what you will need to pass to <page>vgui.Create</page>'s first argument.\n\nThis must be unique, including classnames of entities due to internal usage of <page>baseclass.Set</page>.",
            "name": "classname",
            "type": "string"
          },
          {
            "description": "The table containing the panel information.",
            "name": "panelTable",
            "type": "table"
          },
          {
            "default": "Panel",
            "description": "Classname of a panel to inherit functionality from. Functions with same names will be overwritten preferring the panel that is being registered.",
            "name": "baseName",
            "type": "string"
          }
        ],
        "description": "Registers a panel for later creation via <page>vgui.Create</page>.",
        "name": "Register",
        "parent": "vgui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The given panel table from second argument",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/scriptedpanels.lua",
          "lineEnd": 98,
          "lineStart": 74
        }
      },
      {
        "arguments": [
          {
            "description": "The file to register",
            "name": "file",
            "type": "string"
          }
        ],
        "description": "Registers a new <page>VGUI</page> panel from a file, to be used with <page>vgui.CreateFromTable</page>.\n\nFile file must use the `PANEL` global that is provided just before the file is <page>Global.include</page>d, for example:\n\n\n```\nPANEL.Base = \"Panel\"\n\nfunction PANEL:Init()\n-- Your code...\nend\n\nfunction PANEL:Think()\n-- Your code...\nend\n```",
        "name": "RegisterFile",
        "parent": "vgui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "A table containing info about the panel.",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/scriptedpanels.lua",
          "lineEnd": 129,
          "lineStart": 112
        }
      },
      {
        "arguments": [
          {
            "description": "The <page>PANEL</page> table.",
            "name": "panel",
            "type": "table"
          },
          {
            "default": "Panel",
            "description": "A base for the panel.",
            "name": "base",
            "type": "string"
          }
        ],
        "description": "Registers a table to use as a panel, to be used with <page>vgui.CreateFromTable</page>.\n\nAll this function does is assigns Base key to your table and returns the table.",
        "name": "RegisterTable",
        "parent": "vgui",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The <page>PANEL</page> table",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/extensions/client/panel/scriptedpanels.lua",
          "lineEnd": 110,
          "lineStart": 100
        }
      }
    ],
    "name": "vgui"
  },
  {
    "description": "The video library.",
    "functions": [
      {
        "arguments": [
          {
            "description": "The video config. See <page>Structures/VideoData</page>.",
            "name": "config",
            "type": "table"
          }
        ],
        "description": "Attempts to create an <page>IVideoWriter</page>.",
        "name": "Record",
        "parent": "video",
        "realms": [
          "client",
          "menu"
        ],
        "returnValues": [
          {
            "description": "The video object (returns **false** if there is an error)",
            "type": "IVideoWriter"
          },
          {
            "description": "The error string, if there is an error",
            "type": "string"
          }
        ]
      }
    ],
    "name": "video"
  },
  {
    "description": "The weapons library allows you to access information about any scripted weapons loaded into the game, as well as register your own weapons.",
    "functions": [
      {
        "arguments": [
          {
            "description": "Class name of weapon to retrieve",
            "name": "classname",
            "type": "string"
          }
        ],
        "description": "Get a `copy` of weapon table by name. This function also inherits fields from the weapon's base class, unlike <page>weapons.GetStored</page>.\n<note> This will only work on SWEP's, this means that this will not return anything for HL2/HL:S weapons. </note>",
        "name": "Get",
        "parent": "weapons",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The retrieved table or nil",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/weapons.lua",
          "lineEnd": 163,
          "lineStart": 132
        }
      },
      {
        "description": "Get a list of all the registered SWEPs. This does not include weapons added to spawnmenu manually.",
        "name": "GetList",
        "parent": "weapons",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "List of all the registered SWEPs",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/weapons.lua",
          "lineEnd": 185,
          "lineStart": 177
        }
      },
      {
        "arguments": [
          {
            "description": "Weapon class to retrieve weapon table of",
            "name": "weapon_class",
            "type": "string"
          }
        ],
        "description": "Gets the REAL weapon table, not a copy. The produced table does *not* inherit fields from the weapon's base class, unlike <page>weapons.Get</page>.\n\n<warning>Modifying this table will modify what is stored by the weapons library. Take a copy or use <page>weapons.Get</page> to avoid this.</warning>",
        "name": "GetStored",
        "parent": "weapons",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "The weapon table",
            "type": "table"
          }
        ],
        "source": {
          "file": "lua/includes/modules/weapons.lua",
          "lineEnd": 171,
          "lineStart": 169
        }
      },
      {
        "arguments": [
          {
            "description": "Entity's class name to be checked",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Base class name to be checked",
            "name": "base",
            "type": "string"
          }
        ],
        "description": "Checks if name is based on base",
        "name": "IsBasedOn",
        "parent": "weapons",
        "realms": [
          "client",
          "server"
        ],
        "returnValues": [
          {
            "description": "Returns true if class name is based on base, else false.",
            "type": "boolean"
          }
        ],
        "source": {
          "file": "lua/includes/modules/weapons.lua",
          "lineEnd": 39,
          "lineStart": 32
        }
      },
      {
        "description": "<internal></internal>\n\nCalled after all SWEPS have been loaded and runs <page>baseclass.Set</page> on each one.\n\nYou can retrieve all the currently registered SWEPS with <page>weapons.GetList</page>.\n\n<note>This is not called after a SWEP auto refresh, and thus the inherited baseclass functions retrieved with <page>baseclass.Get</page> will not be updated</note>",
        "name": "OnLoaded",
        "parent": "weapons",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/weapons.lua",
          "lineEnd": 126,
          "lineStart": 113
        }
      },
      {
        "arguments": [
          {
            "description": "The SWEP table to register.\nFor the table's format and available options see the <page>Structures/SWEP</page> page.",
            "name": "ENT",
            "type": "table"
          },
          {
            "description": "Classname to assign to that swep",
            "name": "classname",
            "type": "string"
          }
        ],
        "description": "Registers a Scripted Weapon (SWEP) class manually. When the engine spawns an entity, weapons registered with this function will be created if the class names match.\n\nSee also <page>scripted_ents.Register</page> for Scripted Entities (SENTs)\n\n<bug pull=\"1300\">Sub-tables provided in the first argument will not carry over their metatable, and will receive a BaseClass key if the table was merged with the base's. Userdata references, which includes Vectors, Angles, Entities, etc. will not be copied.</bug>",
        "name": "Register",
        "parent": "weapons",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/weapons.lua",
          "lineEnd": 106,
          "lineStart": 46
        }
      }
    ],
    "name": "weapons"
  },
  {
    "description": "The widgets library.\n\nWidgets allow the player to have mouse interaction with entities, such as being able to manipulate the [bones of an NPC](https://www.youtube.com/watch?v=O3gG0t39-pQ).",
    "functions": [
      {
        "arguments": [
          {
            "description": "The player",
            "name": "ply",
            "type": "Player"
          },
          {
            "description": "Player move data",
            "name": "mv",
            "type": "CMoveData"
          }
        ],
        "description": "<internal></internal> Automatically called to update all widgets.",
        "name": "PlayerTick",
        "parent": "widgets",
        "realms": [
          "client",
          "server"
        ],
        "source": {
          "file": "lua/includes/modules/widget.lua",
          "lineEnd": 105,
          "lineStart": 92
        }
      },
      {
        "arguments": [
          {
            "description": "Widget entity to render",
            "name": "ent",
            "type": "Entity"
          }
        ],
        "description": "Renders a widget. Normally you won't need to call this.",
        "name": "RenderMe",
        "parent": "widgets",
        "realms": [
          "client"
        ],
        "source": {
          "file": "lua/includes/modules/widget.lua",
          "lineEnd": 130,
          "lineStart": 114
        }
      }
    ],
    "name": "widgets"
  }
]
